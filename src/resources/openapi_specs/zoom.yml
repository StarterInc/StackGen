swagger: '2.0'
info:
  title: Zoom API
  description: |-
    The Zoom API allows developers to access information from Zoom. You can use this API to build private services or public applications on the [Zoom App Marketplace](http://marketplace.zoom.us). To learn how to get your credentials and create private/public applications, read our [Authorization Guide](https://marketplace.zoom.us/docs/guides/authorization/credentials).
    All endpoints are available via `https` and are located at `api.zoom.us/v2/`.

    For instance you can list all users on an account via `https://api.zoom.us/v2/users/`.
  contact:
    name: Zoom Developers
    url: 'https://developer.zoom.us/'
    email: developersupport@zoom.us
  license:
    name: MIT for OAS 2.0
    url: 'https://opensource.org/licenses/MIT'
  version: 2.0.0
  termsOfService: 'https://zoom.us/docs/en-us/zoom_api_license_and_tou.html'
host: api.zoom.us
basePath: /v2
schemes:
  - https
consumes:
  - application/json
  - multipart/form-data
produces:
  - application/json
  - application/xml
paths:
  '/accounts/{accountId}/phone/setup':
    post:
      responses:
        '201':
          description: |-
            **HTTP Status Codes** `201`<br>
            Created.
        '400':
          description: |-
            **HTTP Response Code:** `400`<br>

            **Error Codes:** `300`<br>
            The extension number {0} that you entered is a reserved number and can not be used. Provide a different number and try again.<br>
            This account is not enrolled in a Zoom Phone plan. Subscribe to a Zoom Phone plan and try again.<br>
            The billing information could not be retrieved at this time. Retry the request again after a few seconds.<br>
            The country code you entered is invalid. Provide a valid country code and try again.<br>
            The state code you entered is invalid. Provide a valid state code and try again.<br>
            The city information you entered is invalid. Provide a valid city name and try again.<br>
            State code is required for this country.<br>
            City is required for this country.<br>
            Zip is required for this country.<br>
        '401':
          description: |-
            **HTTP Status Code:** `401`<br>
            Unauthorized.<br>

            **Error Code:** <br>
            `124` Account does not exist: {accountId}.<br>
      summary: Set up a Zoom Phone account
      operationId: setUpAccount
      tags:
        - Phone
      description: |+
        After assigning a Zoom phone license to an account, an admin or account owner can proceed with the [initial Zoom phone set up](https://support.zoom.us/hc/en-us/articles/360001297663-Getting-started-with-Zoom-Phone-admin-#h_5ae26a3a-290c-4a8d-b3b0-6384ed267b13) using this API.

        **Scope**:<br>
        * `phone:write:admin` `phone:write`

        **Prerequisites**: <br>
        * Pro or a higher paid account with master account option enabled.

        <br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>

      security:
        - OAuth: []
      parameters:
        - in: path
          name: accountId
          type: string
          required: true
          description: Unique identifier of the account.
        - in: body
          name: body
          schema:
            type: object
            properties:
              extension_number:
                type: string
                description: Specify extension number that will be associated with the owner of the account.
                default: '800'
              emergency_address:
                type: object
                required:
                  - country
                  - address_line1
                description: Specify emergency address for the account.
                properties:
                  country:
                    type: string
                    description: 'Specify the two letter [country code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) (Alpha-2 code in ISO-3166).'
                  address_line1:
                    type: string
                    description: Specify the street address.
                  address_line2:
                    type: string
                    description: 'Specify any building number, floor number, or unit number.'
                  state_code:
                    type: string
                    description: State code of the emergency address. Required or optional dependent on the country and state.
                  city:
                    type: string
                    description: City of the emergency address. Required or optional dependent on different countries.
                  zip:
                    type: string
                    description: Zip code of the emergency address. Required or optional dependent on different countries.
            required:
              - extension_number
              - emergency_address
  /phone/numbers:
    get:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` **OK**<br>
            Phone numbers listed successfully.
          schema:
            type: object
            properties:
              next_page_token:
                type: string
                description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.)
              page_size:
                description: The number of records returned within a single API call.
                type: integer
              total_records:
                description: The total number of records returned.
                type: integer
              phone_numbers:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Unique Identifier of the Phone Number.
                    number:
                      type: string
                      description: Phone number in E164 format.
                    display_name:
                      type: string
                      description: The display name for the phone number.
                    source:
                      type: string
                      enum:
                        - internal
                        - external
                      description: Source of phone number.
                    status:
                      type: string
                      description: Status of the number.
                      enum:
                        - pending
                        - available
                    number_type:
                      type: string
                      description: |-
                        The type of number. Values can be one of the following:<br>
                        `toll`, `tollfree`
                      enum:
                        - toll
                        - tollfree
                    capability:
                      type: array
                      description: 'The capability for the phone number, whether it can take incoming calls, make outgoing calls, or both. Values include `incoming`, `outgoing`, or both of these values.'
                      items:
                        type: string
                    location:
                      type: string
                      description: 'Location (city, state and country) where the Phone number is assigned.'
                    assignee:
                      type: object
                      properties:
                        id:
                          type: string
                          description: Unique Identifier of the user to whom the number has been assigned.
                        name:
                          type: string
                          description: Name of the user to whom the number has been assigned.
                        extension_number:
                          type: integer
                          description: Extension number of the Phone.
                        type:
                          type: string
                          description: |-
                            Indicates who the phone number belongs to.<br>
                            `user`: Number has been assigned to an existing phone user allowing them to receive calls through their extension number or direct phone number.<br> `callQueue`: Phone number has been assigned to a [call queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues).<br> `commonAreaPhone`: Phone number has been assigned to a [ provisioned common area desk phone](https://support.zoom.us/hc/en-us/articles/360021119092-Provisioning-Phones-and-Devices).
                            `autoReceptionist`: Phone number has been assigned to an [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Integrated-Voice-Response-IVR-).<br>
                          enum:
                            - user
                            - callQueue
                            - autoReceptionist
                            - commonAreaPhone
                    site:
                      type: object
                      properties:
                        id:
                          type: string
                          description: 'Target [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) in which the phone number was assigned. Sites allow you to organize the phone users in your organization. For example, you sites could be created based on different office locations.'
                        name:
                          type: string
                          description: Name of the site where the phone number is assigned.
                    carrier:
                      type: object
                      description: Displayed when the `type` request parameter is `byoc`.
                      properties:
                        code:
                          type: string
                          description: The carrier code.
                        name:
                          type: string
                          description: Name of the carrier to which the phone number is assigned.
                    sip_group:
                      type: object
                      description: Displayed when the `type` request parameter is `byoc`.
                      properties:
                        id:
                          type: string
                          description: 'The ID of the SIP group. See the **Creating SIP groups** section in [Creating a shared directory of external contacts](https://support.zoom.us/hc/en-us/articles/360037050092-Creating-a-shared-directory-of-external-contacts) for details.'
                        name:
                          type: string
                          description: Name of the SIP group for which the phone number is assigned.
          examples:
            application/json:
              next_page_token: ''
              page_size: 30
              total_records: 2
              phone_numbers:
                - id: execvbfgbgr
                  number: '0000111100'
                  display_name: abc
                  source: internal
                  status: pending
                  number_type: tollfree
                  capability:
                    - incoming
                    - outgoing
                  location: 'Milpitas,California,United States'
                  assignee:
                    id: cgfdgfghghim
                    name: Peter Jenner
                    extension_number: 12
                    type: user
                  site:
                    id: sdfsdfgrg
                    name: SF office
                - id: fdgfdgfdh
                  number: '111111111'
                  source: external
                  status: available
                  number_type: toll
                  location: 'San Jose,California,United States'
                  assignee:
                    id: dfgdfghdfhgh
                    name: Receptionist
                    extension_number: 1
                    type: autoReceptionist
                  site:
                    id: jhdfsdghfdg
                    name: San Jose office
      summary: List phone numbers
      description: |-
        A Zoom account owner or admin can purchase phone numbers and assign them to Zoom phone users. Use this API to list all Zoom Phone numbers in a Zoom account. You can filter the response based on your needs by using query parameters.

        **Prerequisites:**<br>
        * Pro or higher plan with Zoom phone license<br>
        **Scope:** `phone:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      operationId: listAccountPhoneNumbers
      tags:
        - Phone
      security:
        - OAuth: []
      parameters:
        - $ref: '#/parameters/NextPageToken'
        - in: query
          name: type
          type: string
          description: |-
            Query response by number assignment. The value can be one of the following:
            <br>
            `assigned`: The number has been assigned to either a user, a call queue, an auto-receptionist or a common area phone in an account. <br>`unassigned`: The number is not assigned to anyone.<br>
            `all`: Include both assigned and unassigned numbers in the response.<br>
            `byoc`: Include Bring Your Own Carrier (BYOC) numbers only in the response.
          enum:
            - assigned
            - unassigned
            - all
        - in: query
          name: extension_type
          type: string
          description: |-
            The type of assignee to whom the number is assigned. The value can be one of the following:<br>
            `user`<br> `callQueue`<br> `autoReceptionist`<br>
            `commonAreaPhone`
          enum:
            - user
            - callQueue
            - autoReceptionist
            - commonAreaPhone
        - in: query
          name: page_size
          type: integer
          default: 30
          description: The number of records returned within a single API call.
          maximum: 100
        - in: query
          name: number_type
          type: string
          description: The type of phone number. The value can be either `toll` or `tollfree`.
          enum:
            - toll
            - tollfree
        - in: query
          name: pending_numbers
          type: boolean
          description: Include or exclude pending numbers in the response. The value can be either `true` or `false`.
        - in: query
          name: site_id
          type: string
          description: 'Unique identifier of the site. Use this query parameter if you have [enabled multiple sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites#h_05c88e35-1593-491f-b1a8-b7139a75dc15) and would like to filter the response of this API call by a specific phone [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites).'
  /sip_phones:
    get:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            SIP Phones listed successfully.

            **Error Code:** `200`<br>
            Permission missing: Enable SIP Phone Integration by contacting a Zoom Admin first.
          schema:
            type: object
            properties:
              page_count:
                type: integer
                description: The number of pages returned for the request made.
              page_number:
                type: integer
                description: The page number of the current results.
              page_size:
                type: integer
                description: The number of records returned within a single API call.
              total_records:
                type: integer
                description: The total number of all the records available across pages.
              phones:
                type: array
                description: SIP phones object.
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Unique Identifier of the SIP Phone.
                    user_email:
                      type: string
                      format: email
                      description: 'The email address of the user to associate with the SIP Phone. Can add [.win, .mac, .android, .ipad, .iphone, .linux, .pc, .mobile, .pad] at the end of the email (ex. user@test.com.mac) to add accounts for different platforms for the same user.'
                    domain:
                      type: string
                      description: |
                        The name or IP address of your provider’s SIP domain. (example: CDC.WEB).
                    register_server:
                      type: string
                      description: 'IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address.'
                    transport_protocol:
                      type: string
                      description: 'Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.'
                      enum:
                        - UDP
                        - TCP
                        - TLS
                        - AUTO
                    proxy_server:
                      type: string
                      description: 'IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server, or empty.'
                    register_server2:
                      type: string
                      description: 'IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address.'
                    transport_protocol2:
                      type: string
                      description: 'Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.'
                      enum:
                        - UDP
                        - TCP
                        - TLS
                        - AUTO
                    proxy_server2:
                      type: string
                      description: 'IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server, or empty.'
                    register_server3:
                      type: string
                      description: 'IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address.'
                    transport_protocol3:
                      type: string
                      description: 'Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.'
                      enum:
                        - UDP
                        - TCP
                        - TLS
                        - AUTO
                    proxy_server3:
                      type: string
                      description: 'IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server, or empty.'
                    registration_expire_time:
                      type: integer
                      description: 'The number of minutes after which the SIP registration of the Zoom client user will expire, and the client will auto register to the SIP server. '
                    user_name:
                      type: string
                      description: 'The phone number associated with the user in the SIP account. '
                    password:
                      type: string
                      description: |
                        The password generated for the user in the SIP account.
                    authorization_name:
                      type: string
                      description: Authorization name of the user  registered for SIP Phone.
                    voice_mail:
                      type: string
                      description: The number to dial for checking voicemail.
              next_page_token:
                type: string
          examples:
            application/json:
              page_count: 1
              page_number: 1
              page_size: 1
              total_records: 1
              phones:
                - id: '123456'
                  user_email: CfRE2opiq3HokO@someemailtype.com
                  domain: CDC.WEB
                  register_server: 192.168.0.100
                  transport_protocol: UDP
                  proxy_server: 192.168.0.10
                  register_server2: 192.168.0.100
                  transport_protocol2: UDP
                  proxy_server2: 192.168.0.10
                  register_server3: 192.168.0.100
                  transport_protocol3: UDP
                  proxy_server3: 192.168.0.10
                  registration_expire_time: 60
                  user_name: '1008'
                  password: apassword1
                  authorization_name: testname
                  voice_mail: '4000'
        '400':
          description: |+
            **HTTP Status Code:** `400`<br> Bad Request

      summary: List SIP phones
      description: |
        Zoom’s Phone System Integration (PSI), also referred as SIP phones, enables an organization to leverage the Zoom client to complete a softphone registration to supported premise based PBX system. End users will have the ability to have softphone functionality within a single client while maintaining a comparable interface to Zoom Phone. Use this API to list SIP phones on an account.<br><br>
        **Prerequisites**:
        * Currently only supported on Cisco and Avaya PBX systems.
        * User must enable SIP Phone Integration by contacting the [Sales](https://zoom.us/contactsales) team.<br> **Scope:** `sip_phone:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>
      operationId: listSipPhones
      tags:
        - SIP Phone
      security:
        - OAuth: []
      parameters:
        - $ref: '#/parameters/PageNumber'
        - in: query
          name: search_key
          type: string
          description: 'User name or email address of a user. If this parameter is provided, only the SIP phone system integration enabled for that specific user will be returned. Otherwise, all SIP phones on an account will be returned.'
        - in: query
          name: page_size
          type: integer
          description: The number of records returned within a single API call.
        - in: query
          name: next_page_token
          type: string
          description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
    post:
      responses:
        '201':
          description: |
            **HTTP Status Code:** `201`<br>
            SIP Phone Created.
        '400':
          description: |+
            **HTTP Status Code:** `400`<br>
            Bad request.<br>
            **Error Code:** `200`<br> Permission missing: Enable SIP Phone Integration by contacting a Zoom Admin first.<br>
            **Error Code:** `300`<br>SIP Phone with the same email already exists.


        '404':
          description: |+
            **HTTP Status Code:** `404`<br>
            **Error Code:** `1001`<br> User {userId} not exist or not belong to this account.


      summary: Enable SIP phone
      description: |+
        Zoom’s Phone System Integration (PSI), also referred as SIP phones, enables an organization to leverage the Zoom client to complete a softphone registration to supported premise based PBX system. End users will have the ability to have softphone functionality within a single client while maintaining a comparable interface to Zoom Phone. Use this API to enable a user to use SIP phone.<br><br>
        **Prerequisites**:
        * Currently only supported on Cisco and Avaya PBX systems.
        * The account owner or account admin must first enable SIP Phone Integration by contacting the [Sales](https://zoom.us/contactsales) team.<br> **Scope:** `sip_phone:write:admin`
        <br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`

      operationId: createSIPPhone
      tags:
        - SIP Phone
      security:
        - OAuth: []
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              domain:
                type: string
                maxLength: 64
                description: 'The name or IP address of your provider’s SIP domain. (example: CDC.WEB).'
              register_server:
                type: string
                description: 'IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address.'
              transport_protocol:
                type: string
                description: 'Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.'
                enum:
                  - UDP
                  - TCP
                  - TLS
                  - AUTO
              proxy_server:
                type: string
                description: 'IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server.'
              register_server2:
                type: string
                description: 'IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address.'
              transport_protocol2:
                type: string
                description: 'Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.'
                enum:
                  - UDP
                  - TCP
                  - TLS
                  - AUTO
              proxy_server2:
                type: string
                description: 'IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server, or empty.'
              register_server3:
                type: string
                description: 'IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address.'
              transport_protocol3:
                type: string
                description: 'Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.'
                enum:
                  - UDP
                  - TCP
                  - TLS
                  - AUTO
              proxy_server3:
                type: string
                description: 'IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server, or empty.'
              registration_expire_time:
                type: integer
                minimum: 1
                maximum: 127
                default: 60
                description: 'The number of minutes after which the SIP registration of the Zoom client user will expire, and the client will auto register to the SIP server.'
              user_name:
                type: string
                maxLength: 64
                description: The phone number associated with the user in the SIP account.
              password:
                type: string
                description: The password generated for the user in the SIP account.
              authorization_name:
                type: string
                maxLength: 64
                description: Authorization name of the user  registered for SIP Phone.
              user_email:
                type: string
                description: 'The email address of the user to associate with the SIP Phone. Can add [.win, .mac, .android, .ipad, .iphone, .linux, .pc, .mobile, .pad] at the end of the email (ex. user@test.com.mac) to add accounts for different platforms for the same user.'
                format: email
                maxLength: 64
              voice_mail:
                type: string
                maxLength: 255
                description: The number to dial for checking voicemail.
            required:
              - domain
              - register_server
              - proxy_server
              - user_name
              - password
              - authorization_name
              - user_email
              - voice_mail
          x-examples:
            application/json:
              user_email: CfRE2opiq3HokO@someemailtype.com
              domain: CDC.WEB
              register_server: 192.168.0.100
              transport_protocol: UDP
              proxy_server: 192.168.0.10
              registration_expire_time: 60
              user_name: '1008'
              password: apassword1
              authorization_name: testname
              voice_mail: '4000'
  '/sip_phones/{phoneId}':
    patch:
      responses:
        '200':
          description: |
            **Error Code:** `200`<br>
            Permission missing: Enable SIP Phone Integration by contacting a Zoom Admin first.
        '204':
          description: |
            **HTTP Status Code:** `204`<br>
            SIP Phone information updated successfully.
          schema:
            type: object
            properties: {}
        '300':
          description: |
            **Error Code:** `300`<br>
             SIP phone not found: phoneId.<br>
             The SIP phone with this phoneId was not found on this account.
        '400':
          description: |+
            **HTTP Status Code:** `400`<br>
            Bad request.

      summary: Update SIP phone
      description: |-
        Zoom’s Phone System Integration (PSI), also referred as SIP phones, enables an organization to leverage the Zoom client to complete a softphone registration to supported premise based PBX system. End users will have the ability to have softphone functionality within a single client while maintaining a comparable interface to Zoom Phone. Use this API to update information of a specific SIP Phone on a Zoom account.<br><br>
        **Prerequisites**:
        * Currently only supported on Cisco and Avaya PBX systems.
        * The account owner or account admin must first enable SIP Phone Integration by contacting the [Sales](https://zoom.us/contactsales) team.<br> **Scope:** `sip_phone:write:admin`
        <br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      tags:
        - SIP Phone
      operationId: updateSIPPhone
      security:
        - OAuth: []
      parameters:
        - in: path
          name: phoneId
          type: string
          required: true
          description: Unique Identifier of the SIP Phone. This can be retrieved from the List SIP Phones API.
        - in: body
          name: body
          schema:
            type: object
            properties:
              domain:
                type: string
                maxLength: 64
                description: 'The name or IP address of your provider’s SIP domain. (example: CDC.WEB).'
              register_server:
                type: string
                description: 'IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address.'
              transport_protocol:
                type: string
                description: 'Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.'
                enum:
                  - UDP
                  - TCP
                  - TLS
                  - AUTO
              proxy_server:
                type: string
                description: 'IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server.'
              register_server2:
                type: string
                description: 'IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address.'
              transport_protocol2:
                type: string
                description: 'Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.'
                enum:
                  - UDP
                  - TCP
                  - TLS
                  - AUTO
              proxy_server2:
                type: string
                description: 'IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server.'
              register_server3:
                type: string
                description: 'IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address.'
              transport_protocol3:
                type: string
                description: 'Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.'
                enum:
                  - UDP
                  - TCP
                  - TLS
                  - AUTO
              proxy_server3:
                type: string
                description: 'IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server.'
              registration_expire_time:
                type: integer
                minimum: 1
                maximum: 127
                default: 60
                description: 'The number of minutes after which the SIP registration of the Zoom client user will expire, and the client will auto register to the SIP server.'
              user_name:
                type: string
                maxLength: 64
                description: The phone number associated with the user in the SIP account.
              password:
                type: string
                description: The password generated for the user in the SIP account.
              authorization_name:
                type: string
                maxLength: 64
                description: Authorization name of the user  registered for SIP Phone.
              voice_mail:
                type: string
                maxLength: 255
                description: The number to dial for checking voicemail.
            required:
              - domain
              - register_server
              - proxy_server
              - register_server2
              - proxy_server2
              - register_server3
              - proxy_server3
              - user_name
              - password
              - authorization_name
              - voice_mail
          x-examples:
            application/json:
              domain: CDC.WEB
              register_server: 192.168.0.100
              transport_protocol: UDP
              proxy_server: 192.168.0.10
              registration_expire_time: 60
              user_name: '1008'
              password: apassword1
              authorization_name: testname
              voice_mail: '4000'
    parameters:
      - name: phoneId
        in: path
        type: string
        required: true
    delete:
      responses:
        '200':
          description: '**Error Code:** `200`<br>Permission missing: Enable SIP Phone Integration by contacting a Zoom Admin first.'
        '204':
          description: |-
            **HTTP Status Code:** `204`<br>
            SIP Phone deleted.
          schema:
            type: object
            properties: {}
        '300':
          description: '**Error Code:** `300`The SIP phone with this phoneId was not found on this account.'
      summary: Delete SIP phone
      description: |-
        Zoom’s Phone System Integration (PSI), also referred as SIP phones, enables an organization to leverage the Zoom client to complete a softphone registration to supported premise based PBX system. End users will have the ability to have softphone functionality within a single client while maintaining a comparable interface to Zoom Phone. Use this API to delete a specific SIP phone on a Zoom account.<br><br>
        **Prerequisites**:
        * Currently only supported on Cisco and Avaya PBX systems.
        * User must enable SIP Phone Integration by contacting the [Sales](https://zoom.us/contactsales) team.<br> **Scope:** `sip_phone:read:admin`
        <br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      operationId: deleteSIPPhone
      tags:
        - SIP Phone
      security:
        - OAuth: []
      parameters:
        - in: path
          name: phoneId
          type: string
          required: true
          description: Unique Identifier of the SIP Phone. It can be retrieved from the List SIP Phones API.
  /rooms:
    get:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            A list of Zoom Rooms returned successfully.
          schema:
            type: object
            properties:
              page_size:
                type: integer
                description: The number of records returned within a single API call.
              next_page_token:
                type: string
                description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
              rooms:
                type: array
                description: List of existing Zoom Rooms.
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Unique Identifier for the Zoom Room.
                    name:
                      type: string
                      description: Name of the Zoom Room.
                    activation_code:
                      type: string
                      description: Activation Code is the code that is used to complete the setup of the Zoom Room.
                    status:
                      type: string
                      description: Status of the Zoom Room.
                      enum:
                        - Offline
                        - Available
                        - InMeeting
                        - UnderConstruction
                    room_id:
                      type: string
                      description: Globally unique identifier of the Zoom Room. Use this ID for the **Dashboard Zoom Room APIs**.
                    location_id:
                      type: string
                      description: 'Unique Identifier of the [location](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations) of the room.'
          examples:
            application/json:
              page_size: 30
              rooms:
                - id: 387434ryewr334
                  name: testZoomRooms
                  activation_code: '1200'
                  status: Available
                - id: 4ryewr33sjfkds
                  name: MyZoomRooms
                  activation_code: eu34355empor
                  status: Offline
      tags:
        - Rooms
      summary: List Zoom Rooms
      description: |-
        Zoom Rooms is a software-based room system that provides an integrated experience for audio conferencing, wireless screen sharing and video conferencing. Use this API to list all the existing [Zoom Rooms](https://support.zoom.us/hc/en-us/articles/207483343-Getting-Started-with-Zoom-Rooms) in a Zoom account.<br><br>
        **Prerequisites:**<br>
        * Pro or a higher plan with [Zoom Room](https://zoom.us/zoomrooms) license.<br>
        **Scopes**: `room:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      operationId: listZoomRooms
      security:
        - OAuth: []
      parameters:
        - in: query
          name: status
          type: string
          description: The status of the Zoom Room.
          enum:
            - Offline
            - Available
            - InMeeting
            - UnderConstruction
        - in: query
          name: type
          type: string
          description: Type of the Zoom Rooms.
          enum:
            - ZoomRoom
            - SchedulingDisplayOnly
            - DigitalSignageOnly
        - in: query
          name: unassigned_rooms
          type: boolean
          default: false
          description: Use this query parameter with a value of `true` if you would like to see Zoom Rooms in your account that have not been assigned to anyone yet.
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/NextPageToken'
        - in: query
          name: location_id
          type: string
          description: Parent location ID of the Zoom Room.
    post:
      responses:
        '201':
          description: |-
            **HTTP Status Code:** `201` **Created**<br>
            Zoom Room added successfully.
          schema:
            type: object
            properties:
              id:
                type: string
                description: Unique Identifier of the Zoom Room.
              name:
                type: string
                description: Name of the Zoom Room.
              type:
                type: string
                description: Type of the Zoom Room.
                enum:
                  - ZoomRoom
                  - SchedulingDisplayOnly
                  - DigitalSignageOnly
              location_id:
                type: string
                description: Location ID of the location where the Zoom Room was added.
              room_id:
                type: string
                description: Globally unique identifier of the Zoom Room. Use this ID for the **Dashboard Zoom Room APIs**.
          examples:
            application/json:
              id: abcdefgg
              name: Cool ZoomRoom
              type: SchedulingDisplayOnly
              location_id: 434gfg0is
              room_id: dhsfd8287rgf
        '400':
          description: |+
            **HTTP Status Code:** `400` **Bad Request**<br><br>
            **Error Code:** `200`<br> Zoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>
            At least one normal Zoom Rooms required.<br><br>
            **Error Code:** `300`<br>
            Invalid parent location id {location_id}.<br>

        '404':
          description: |-
            **HTTP Status Code:** `404` **Not Found**<br><br>

            **Error Code:** `4801`<br>
            Location not found:{location_id}
      summary: Add a Zoom Room
      description: |-
        Use this API to [add a Zoom Room](https://support.zoom.us/hc/en-us/articles/202822279-Add-Zoom-Rooms-on-Web-Portal) to a Zoom account.<br><br>
        **Prerequisites:**<br>
        * Pro or a higher plan with [Zoom Room](https://zoom.us/zoomrooms) license.<br>
        **Scopes**: `room:write:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      operationId: addARoom
      tags:
        - Rooms
      security:
        - OAuth: []
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              name:
                type: string
                description: Name of the Zoom Room.
              type:
                type: string
                description: 'Type of the Zoom Room. '
                enum:
                  - ZoomRoom
                  - SchedulingDisplayOnly
                  - DigitalSignageOnly
              location_id:
                type: string
                description: |-
                  **Optional**<br>Location ID of the lowest level location in the [location hierarchy](https://support.zoom.us/hc/en-us/articles/115000342983-Zoom-Rooms-Location-Hierarchy) where the Zoom Room is to be added. For instance if the structure of the location hierarchy is set up as “country, states, city, campus, building, floor”, a room can only be added under the floor level location.

                  This ID can be retrieved from the [List Zoom Room Locations](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations) API.
            required:
              - name
              - type
          x-examples:
            application/json:
              name: Cool ZoomRoom
              type: SchedulingDisplayOnly
              location_id: 434gfg0is
  /phone/sites:
    post:
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` **No Content**<br>
            Site created successfully.
          schema:
            type: object
            properties:
              id:
                type: string
                description: 'Site ID: Unique Identifier for a site.'
              name:
                type: string
                description: Name of the site.
          examples:
            application/json:
              id: ingjgjfhi
              name: San Jose Site
        '400':
          description: |-
            **HTTP Status Code:** `400` **Bad Request**<br>
            **Error Code:** `400`<br>
            Invalid site code length.<br>
            Country information is invalid.<br>
            This address could not be validated / geocoded.
      summary: Create a phone site
      description: |+
        Sites allow you to organize Zoom Phone users in your organization. Use this API to create a [Site](https://support.zoom.us/hc/en-us/articles/360020809672).<br>
        **Prerequisites:**<br>
        * Multiple Sites must be [enabled](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites#h_05c88e35-1593-491f-b1a8-b7139a75dc15).
        * Pro or a higher account with Zoom Phone enabled.
        **Scope:** `phone:write:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`

      operationId: createPhoneSite
      tags:
        - Phone Site
      security:
        - OAuth: []
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              name:
                type: string
                description: Name of the Site.
                minLength: 1
                maxLength: 255
              site_code:
                type: integer
                description: |+
                  Identifier for a site. If site code is enabled, this field is required.

              auto_receptionist_name:
                type: string
                description: 'Display name of the [auto-receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Integrated-Voice-Response-IVR-) for the site.'
              default_emergency_address:
                type: object
                properties:
                  country:
                    type: string
                    description: 'Two lettered country code (Aplha-2 code in ISO-3166) standard of the Site''s [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).'
                    minLength: 2
                    maxLength: 2
                  address_line1:
                    type: string
                    description: 'Address Line 1 of the  [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address) consisting of house number and street name.'
                  address_line2:
                    type: string
                    description: 'Address Line 2 of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address) consisting of Building number, floor number, unit, etc.'
                  city:
                    type: string
                    description: 'City of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).'
                  zip:
                    type: string
                    description: 'Zip Code of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).'
                  state_code:
                    type: string
                    description: 'State Code of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).'
                required:
                  - country
                  - address_line1
                  - city
                  - zip
                  - state_code
              short_extension:
                type: object
                description: Short extension of the phone site.
                properties:
                  length:
                    type: integer
                    default: 3
                    description: |-
                      Specify the length of short extension numbers for the site.

                      Since there is a default 6-digit limit on extensions, the short extension can be 2 to 5 digits and the length of site code added to the length of short extension can not exceed a value of `6` (i.e., length of `site_code`+ length of `short_extension` should always be less than or equal to 6).
            required:
              - name
              - auto_receptionist_name
          x-examples:
            application/json:
              name: San Jose Site
              site_code: 123
              auto_receptionist_name: Benjamin
              default_emergency_address:
                country: US
                address_line1: 100 Awesome St
                city: San Jose
                zip: '95113'
                state_code: CA
                address_line2: Unit 5
    get:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              next_page_token:
                type: string
                description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
              page_size:
                type: string
                description: The number of records returned within a single API call.
              total_records:
                type: string
                description: Total number of records returned.
              sites:
                type: array
                description: List of site(s).
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Site ID. Unique Identifier of the site.
                    name:
                      type: string
                      description: Name of the Site.
                    site_code:
                      type: string
                      description: Site Code
                    main_auto_receptionist:
                      type: object
                      description: Auto Receptionist for each site.
                      properties:
                        id:
                          type: string
                          description: 'Identifier of the [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Interactive-Voice-Response-IVR-).'
                        extension_id:
                          type: string
                          description: Extension ID
                        extension_number:
                          type: string
                          description: Extension number
                        name:
                          type: string
                          description: Name of the auto receptionist.
                    country:
                      type: object
                      description: Site country
                      properties:
                        name:
                          type: string
                          description: Name of the country.
                        code:
                          type: string
                          description: 'Two lettered country [code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).'
          examples:
            application/json:
              page_count: 1
              page_number: 1
              page_size: 30
              total_records: 2
              sites:
                - id: CESAfgkwporiw3WA
                  name: Main Site
                  site_code: 10
                  country:
                    name: Canada
                    code: CA
                  main_auto_receptionist:
                    id: NMyfgfgfhdghsVg
                    extension_id: E6Khfhfhf4idr8A
                    extension_number: 10801
                    name: Main Auto Receptionist
                - id: fwfhfghbghghfgcuw
                  name: SAC office
                  site_code: 12
                  main_auto_receptionist:
                    id: t1s55343ggfg3wwg
                    extension_id: V7AIhaaaaaaaaRyTw
                    extension_number: 12001
                    name: SAC Office Auto Receptionist
      summary: List phone sites
      description: |-
        Sites allow you to organize Zoom Phone users in your organization. Use this API to list all the [sites](https://support.zoom.us/hc/en-us/articles/360020809672) that have been created for an account.<br>
        **Prerequisites:**<br>
        * Multiple Sites must be [enabled](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites#h_05c88e35-1593-491f-b1a8-b7139a75dc15).
        * Pro or a higher account with Zoom Phone enabled.

        **Scope:** `phone:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      operationId: listPhoneSites
      tags:
        - Phone Site
      parameters:
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/NextPageToken'
  '/phone/sites/{siteId}':
    get:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Site information retrieved successfully.
          schema:
            type: object
            properties:
              id:
                type: string
                description: Site ID. Unique Identifier of the site.
              name:
                type: string
                description: Name of the Site.
              site_code:
                type: integer
                description: '[Site Code](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites#h_79ca9c8f-c97b-4486-aa59-d0d9d31a525b)'
              country:
                type: object
                description: Site country
                properties:
                  name:
                    type: string
                    description: Name of the country.
                  code:
                    type: string
                    description: 'Two lettered country [code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).'
              main_auto_receptionist:
                type: object
                description: '[Main Auto Receptionist](https://support.zoom.us/hc/en-us/articles/360021121312#h_bc7ff1d5-0e6c-40cd-b889-62010cb98c57) for each site.'
                properties:
                  id:
                    type: string
                    description: Unique Identifier for the Auto Receptionist.
                  extension_id:
                    type: string
                    description: Extension ID
                  extension_number:
                    type: integer
                    description: Extension number
                  name:
                    type: string
                    description: Name of the auto receptionist.
              short_extension:
                type: object
                description: Short extension of the phone site.
                properties:
                  length:
                    type: integer
                    default: 3
                    description: The length of short extension number for the site.
          examples:
            application/json:
              id: CEfghfghhWA
              name: Main Site
              site_code: 10
              main_auto_receptionist:
                id: NMyfgfhghhsVg
                extension_id: E6Khfghgfr8A
                extension_number: 10801
                name: Main Auto Receptionist
        '400':
          description: |-
            **Error Code:** `400`<br>
            Site does not exist.
      summary: Get phone site details
      description: |+
        Sites allow you to organize Zoom Phone users in your organization. Use this API to get information about a specific [site](https://support.zoom.us/hc/en-us/articles/360020809672).


        **Prerequisites:** <br>
        * Account must have a Pro or a higher plan with Zoom Phone license.
        * Multiple Sites must be [enabled](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites#h_05c88e35-1593-491f-b1a8-b7139a75dc15).<br>
        **Scope:** `phone:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`

      operationId: getASite
      parameters:
        - in: path
          name: siteId
          type: string
          required: true
          description: Unique Identifier of the Site.
      tags:
        - Phone Site
      security:
        - OAuth: []
    parameters:
      - name: siteId
        in: path
        type: string
        required: true
    delete:
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`<br>
            Phone Site deleted.
          schema: {}
        '400':
          description: |-
            **HTTP Status Code:** `400` **Bad Request**<br><br>
            **Error Code:** `400`<br>
            Unable to transfer to the same site.<br>
            Main company number can not change {phoneNumber}.<br>
            Site does not exist.
        '409':
          description: |-
            **HTTP Status Code:** `409` **Conflict**<br><br>
            **Error Code:** `409`<br>
            Conflict target extension number, try later.
      summary: Delete a phone site
      description: |+
        Sites allow you to organize Zoom Phone users in your organization. Use this API to delete a specific [site](https://support.zoom.us/hc/en-us/articles/360020809672) in a Zoom account. To delete a site, in the query parameter, you must provide the Site ID of another site where the assets of current site (users, numbers and phones) can be transferred to.  You cannot use this API to delete the main site.

        **Prerequisites:** <br>
        * Account must have a Pro or a higher plan with Zoom Phone license.
        * [Multiple Sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) must be enabled.<br>
        **Scope:** `phone:write:admin`
        <br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`

      operationId: deletePhoneSite
      tags:
        - Phone Site
      security:
        - OAuth: []
      parameters:
        - in: path
          name: siteId
          type: string
          required: true
          description: Unique Identifier of the Site.
        - in: query
          name: transfer_site_id
          type: string
          required: true
          description: 'The Site ID of another site where the assets of the current site (users, numbers and phones) can be transferred to.'
    patch:
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` **No Content**<br>
            Site details updated successfully.
          schema: {}
        '400':
          description: |-

            **HTTP Status Code:** `400` **Bad Request**<br><br>
            **Error Code:** `300`<br>
            Validation Failed. Site does not exist.<br><br>
            **Error Code:** `400`<br>
            Site Code is disabled.<br>
            Invalid site code length.
      summary: Update phone site details
      description: |+
        Sites allow you to organize Zoom Phone users in your organization. Use this API to update information about a specific [site](https://support.zoom.us/hc/en-us/articles/360020809672).


        **Prerequisites:** <br>
        * Account must have a Pro or a higher plan with Zoom Phone license.
        * **Scope:** `phone:write:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`

      operationId: updateSiteDetails
      tags:
        - Phone Site
      security:
        - OAuth: []
      parameters:
        - in: path
          name: siteId
          type: string
          required: true
          description: Unique Identifier of the Site.
        - in: body
          name: body
          schema:
            type: object
            properties:
              name:
                type: string
                description: Name of the site.
              site_code:
                description: '[Site Code](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites#h_79ca9c8f-c97b-4486-aa59-d0d9d31a525b).'
                type: integer
          x-examples:
            application/json:
              name: SJ-site
              site_code: 47973154
  /phone/sms/messages:
    post:
      responses:
        '201':
          description: |-
            **HTTP Status Code:** `201` <br>
            SMS sent successfully.
          schema:
            type: object
            properties:
              message_id:
                type: string
                description: |
                  Message ID.
              session_id:
                type: string
                description: Session ID.
              date_time:
                type: string
                description: Message creation time in UTC (Coordinated Universal Time).
          examples:
            application/json:
              session_id: ebc731c7c5c6c6b9ad2cd301330a0415
              message_id: 8e77d889-baba-43d1-b80c-77c90c135cde
              date_time: '2021-04-01T22:03:30Z'
        '400':
          description: |-
            **HTTP Status Code:** `400` <br>

            **Error Code:** `7020`<br>
            Extension does not exist
        '401':
          description: |-
            **HTTP Status Code:** `401` <br>

            **Error Code:** `124`<br>
            Account does not exist: {accountId}.
        '404':
          description: |-
            **HTTP Status Code:** `404` <br>

            **Error Code:** `1001`<br>
            User does not exist: {userId}.
      summary: Post SMS message
      description: |-
        Send [SMS messages ](https://support.zoom.us/hc/en-us/articles/360054631031-Setting-up-SMS) to Zoom Phone accounts.

        **Scope:**
        * `phone_sms:write`
        * `phone_sms:write:admin`

        **Prerequisites:**
        * Zoom Phone license
        * SMS enabled for the account or admin privileges
        * User-enabled Zoom Phone

        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`

        **SMS and Attachments - Size and Limits:**
        * SMS size with no media attachments: 2048 bytes
        * SMS size with attachments: 1000 bytes
        * Total attachments: 10
        * Total attachments file size: 2MB
      operationId: postSmsMessage
      tags:
        - Phone
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              sender:
                type: object
                properties:
                  id:
                    type: string
                    description: |
                      Sender's unique user ID.
                  phone_number:
                    type: string
                    description: Sender's phone number.
                required:
                  - id
                  - phone_number
              to_members:
                type: array
                description: List of recipients.
                items:
                  type: object
                  properties:
                    phone_number:
                      type: string
                      description: Recipient's phone number.
              message:
                type: string
                description: |
                  The SMS message.
              session_id:
                type: string
                description: |
                  Unique ID for the SMS session between sender and recipient.
              attachments:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: string
                      description: 'Format of attachments. Supported formats: JPG, PNG, JPEG, GIF.'
                      example: 'JPG, PNG, JPEG, GIF'
                    base64_encoding:
                      type: string
                      description: 'ASCII string to send [Base64 encoded](https://en.wikipedia.org/wiki/Base64) attachments as text.'
            required:
              - to_members
          x-examples:
            application/json:
              to_members:
                - phone_number: 01234567890
                - phone_number: 07234567899
                - phone_number: 045103337895
              sender:
                id: sdfw35sdfd
                phone_number: 014085552324
              message: This is an example SMS message.
              session_id: ebc731c7c5c6c6b9ad2cd301330a0415
              attachments:
                - type: JPG
                  base64_encoding: ut culpa do
                - type: PNG
                  base64_encoding: 
      x-private: true
  /contacts:
    get:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Contact returned successfully.
          schema:
            type: object
            properties:
              page_size:
                type: integer
                description: The number of records returned with a single API call. Default value is `1`.
                maximum: 25
              next_page_token:
                type: string
                description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
              contacts:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: User ID of the contact.
                    email:
                      type: string
                      description: Email address of the contact.
                    first_name:
                      type: string
                      description: First name of the contact.
                    last_name:
                      type: string
                      description: Last name of the contact.
                    presence_status:
                      type: string
                      description: |-
                        Presence status of the contact in Zoom Client. The value of this field can be one of the following:
                        `Do_Not_Disturb`<br> `away`<br> `Available`<br> `Offline`
                      enum:
                        - Do_Not_Disturb
                        - Away
                        - Available
                        - Offline
                    phone_number:
                      type: string
                      description: Phone number of the user.
                    sip_phone_number:
                      type: string
                      description: SIP Phone number of the user. Returned only if user has SIP phone enabled.
                    direct_numbers:
                      type: array
                      description: Direct Number(s) of a user who has Zoom Phone license assigned.
                      items:
                        type: string
                    extension_number:
                      type: string
                      description: Extension Number of a user who has Zoom Phone license assigned.
                    im_group_id:
                      type: string
                      description: 'Unique Identifier of the [IM directory group](https://support.zoom.us/hc/en-us/articles/203749815-IM-Management) in which the user has been added. An IM Directory group is not the same as a channel. IM Directory allows administrators to assign users in their account to groups that display within the Contacts list on Zoom clients. '
                    im_group_name:
                      type: string
                      description: 'Name of the [IM directory group](https://support.zoom.us/hc/en-us/articles/203749815-IM-Management) in which the user has been added. An IM Directory group is not the same as a channel. IM Directory allows administrators to assign users in their account to groups that display within the Contacts list on Zoom clients. '
                    dept:
                      type: string
                      description: Department of the contact as provided in the user's Zoom profile.
                    job_title:
                      type: string
                      description: Department of the user as provided in the user's Zoom profile.
                    location:
                      type: string
                      description: Location of the user as provided in the user's Zoom profile.
          examples:
            application/json:
              page_size: 1
              next_page_token: ' '
              contacts:
                - id: isds324bdfsf
                  email: qui@djfsd.sdfjhdf
                  first_name: John
                  last_name: Doe
                  presence_status: Offline
                  phone_number: '00000000'
                  sip_phone_number: '11111111'
                  direct_numbers:
                    - 111111
                    - 222222
                  extension_number: '010'
                  im_group_id: fhksdhfew34hjds
                  im_group_name: Engineering
      summary: Search company contacts
      tags:
        - Contacts
      description: |-
        A user under an organization's Zoom account has internal users listed under Company Contacts in the Zoom Client. Use this API to search users that are in the company contacts of a Zoom account. Using the `search_key` query parameter, provide either first name, last name or the email address of the user that you would like to search for. Optionally, set `query_presence_status` to `true` in order to include the presence status of a contact. <br><br>

        **Scopes:** `contact:read:admin`, `contact:read`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      operationId: searchCompanyContacts
      parameters:
        - in: query
          name: search_key
          type: string
          description: 'Provide the keyword - either first name, last name or email of the contact whom you have to search for.'
          required: true
        - in: query
          name: query_presence_status
          type: string
          description: Set `query_presence_status` to `true` in order to include the presence status of a contact in the response.
        - in: query
          name: page_size
          type: integer
          description: The number of records to be returned with a single API call.
          maximum: 25
          default: 1
        - $ref: '#/parameters/NextPageToken'
  '/chat/users/{userId}/messages':
    post:
      responses:
        '201':
          description: |-
            **Status Code:** `201`<br>
            Message sent.
          schema:
            type: object
            properties:
              id:
                type: string
                description: 'Message ID: Unique Identifier of the message.'
          examples:
            application/json:
              id: ex35785hgdfjgt
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>
            Bad request.<br>
            **Error Code:** `5301`<br>
            Message sending failed.
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            **Error Code**: `1001`<br>
            User does not exist: $to_contact.<br>
            **Error Code**: `4130`<br>
            Channel does not exist: $to_channel.
      summary: Send a chat message
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              message:
                type: string
                description: The message to be sent.
                maxLength: 1024
              to_contact:
                type: string
                description: The email address of the contact to whom you would like to send the message.
              to_channel:
                type: string
                description: The Channel Id of the channel where you would like to send a message.
              at_items:
                type: array
                description: '[Chat mentions](https://support.zoom.us/hc/en-us/articles/360037567431-Using-chat-mentions-and-slash-commands) object. Use this object to include mentions in the message that will be sent to  a channel. '
                items:
                  type: object
                  properties:
                    start_position:
                      type: integer
                      description: |+
                        Start position of the mention("@") in the message string.

                        For example if you want to include the mention at the beginning of the message, the value for this field will be 0.

                        Example message: "@Shrijana How are you?"

                    end_position:
                      type: integer
                      description: |-
                        End position of the mention.

                        Example message: "@Shrijana How are you?"
                        In this case, the end position of the mention "@Shrijana" is 8. Hence, the value of this field will be 8.
                    at_type:
                      type: integer
                      description: |-
                        Type of mention. You can use one of the following values:<br>
                        * `1`: Mention a contact.

                        * `2`: Mention "all" to notify everyone in the channel.
                      enum:
                        - 1
                        - 2
                    at_contact:
                      type: string
                      description: |+
                        This field is required if the value of `at_type` field is set to 1.

                        Email address of the contact.

            required:
              - message
          x-examples:
            application/json:
              message: '@Shrijana How are you?'
              to_channel: e87294sdg4a42e7d2f80862
              at_items:
                - start_position: 0
                  end_position: 8
                  at_type: 1
                  at_contact: mycontactsemail@somexyz23mail.com
      description: |+
        Send chat messages on Zoom to either an individual user who is in your contact list or to a [channel](https://support.zoom.us/hc/en-us/articles/200912909-Getting-Started-With-Channels-Group-Messaging-) of which you are a member. To send a message to a contact, provide the contact's email address in the `to_contact` field. Similary, to send a message to a channel, provide the Channel Id of the Channel in `to_channel` field.<br>
        <br>**Scopes:** `chat_message:write`, `chat_message:write:admin`<br>
        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br> <p style="background-color:#e1f5fe; color:#01579b; padding:8px"> <b>Note: </b> For an<b> account-level</b> <a href="https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app">OAuth app</a>, this API can only be used on behalf of a user who is assigned with a <b><a href="https://support.zoom.us/hc/en-us/articles/115001078646-Using-role-management#:~:text=Each%20user%20in%20a%20Zoom,owner%2C%20administrator%2C%20or%20member.&text=Role%2Dbased%20access%20control%20enables,needs%20to%20view%20or%20edit."> role</a> that has Edit permission for Chat Messages</b>.</p>

      operationId: sendaChatMessage
      tags:
        - Chat Messages
      security:
        - OAuth: []
    get:
      responses:
        '200':
          description: |-
            **HTTP Status Code:**`200`<br>
            List of chat messages returned.
          schema:
            type: object
            description: Chat message object.
            properties:
              date:
                type: string
                description: 'The date provided in the query parameter. If a date is not provided, the default value is the **current date**.'
                format: date
              page_size:
                description: The number of records returned with a single API call.
                default: 10
                type: integer
              next_page_token:
                type: string
                description: |
                  The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
              messages:
                type: array
                description: List of message(s).
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: 'Message ID: Unique Identifier of the message.'
                    message:
                      type: string
                      description: The message content.
                    sender:
                      type: string
                      description: The email address of the sender of the message.
                    date_time:
                      type: string
                      description: The date-time at which the message was sent.
                    timestamp:
                      type: integer
                      description: The timestamp of the message in microseconds.
                      format: int64
                    reply_main_message_id:
                      type: string
                      description: Unique identifier of a reply. This field will only be returned if the message is a reply message.
                    reply_main_message_timestamp:
                      type: integer
                      description: |-
                        Timestamp of when the reply message was sent. This field will only be returned if the message is a reply message.

                        The value of this field will be in **long** format(int64).
                      format: int64
                    status:
                      type: string
                      description: |-
                        This field indicates whether a message is an original message(unedited), an edited message or a deleted message.

                        This field is only returned if you set the value of `for include_deleted_and_edited_message` query parameter to `true`.
                      enum:
                        - Deleted
                        - Edited
                        - Normal
          examples:
            application/json:
              date: '2019-09-17'
              page_size: 10
              next_page_token: ''
              messages:
                - id: F3CbafdljsfjkdfgBA7
                  message: And you?
                  sender: myemail@someemailaddr.com
                  date_time: '2019-09-17T20:25:21Z'
                  timestamp: 1568751921626
                - id: B0DbfdgdfhAAfgf237000
                  message: I am good
                  sender: myemail@someemailaddr.com
                  date_time: '2019-09-17T20:25:17Z'
                  timestamp: 1568751917976
                - id: C9Bbdfgd4sad301
                  message: How are you
                  sender: myfriendsemail@someemailaddr.us
                  date_time: '2019-09-17T20:24:13Z'
                  timestamp: 1568751853297
                - id: 769fgdgdfgfd4566F7B96665
                  message: hello
                  sender: myfriendsemail@someemailaddr.us
                  date_time: '2019-09-17T20:22:26Z'
                  timestamp: 1568751746769
        '400':
          description: |
            **HTTP Status Code:** `400`<br> Bad request.<br>
            **Error Code:** `200`<br>Unauthorized request. You do not have permission to access this user's chat messages.<br>
            **Error Code:** `300` <br>The next page token is invalid or expired.<br>
            **Error Code:** `300` <br>Must provide either contact or channel parameter.<br>
            **Error Code:** `300` <br>Only provide past chat messages in recent 6 months.<br>
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            **Error Code**: `1001`<br>
            User does not exist: $to_contact.<br>
            **Error Code**: `4130`<br>
            Channel does not exist: $to_channel.
      summary: List user's chat messages
      description: |+
        A Zoom user can have conversations with other Zoom users via chat. Use this API to list the current user's chat messages between the user and an individual contact or a chat channel.<br> In the query parameter, you must provide either of the following:<br>
        * `to_contact`: The email address of the contact with whom the user conversed by sending/receiving messages.
        * `to_channel`: The channel ID of the channel to/from which the user has sent and/or received messages.

        <br> **Specify a date** in the `date` query parameter to view messages from that date. If a date is not provided, the default value for the query will be the **current date**.<br>
        <p style="background-color:#e1f5fe; color:#01579b; padding:8px"> <b>Note: </b> For an<b> account-level</b> <a href="https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app">OAuth app</a>, this API can only be used on behalf of a user who is assigned with a <a href="https://support.zoom.us/hc/en-us/articles/115001078646-Using-role-management#:~:text=Each%20user%20in%20a%20Zoom,owner%2C%20administrator%2C%20or%20member.&text=Role%2Dbased%20access%20control%20enables,needs%20to%20view%20or%20edit.">role</a> that has <b>View or Edit</b> permission for Chat Messages.</p><br>

        <br>**Scopes:** `chat_message:read`, `chat_message:read:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`

      operationId: getChatMessages
      parameters:
        - in: query
          name: to_contact
          type: string
          description: |-
            The email address of a chat contact with whom the current user chatted. Messages that were sent and/or received between the user and the contact is displayed.

            Note: You must provide either `contact` or `channel` as a query parameter to retrieve messages either from an individual or a chat channel.
        - in: query
          name: to_channel
          type: string
          description: |-
            The channel Id of a channel inside which current user had chat converstations. Messages that were sent and/or received between the user and the channel is displayed.

            Note: You must provide either `contact` or `channel` as a query parameter to retrieve messages either from an individual or a chat channel.
        - in: query
          name: date
          type: string
          format: date
          description: The query date for which you would like to get the chat messages.
        - in: query
          name: page_size
          type: integer
          description: 'The number of records returned with a single API call. '
          maximum: 50
          default: 10
        - in: query
          name: next_page_token
          type: string
          description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
        - in: query
          name: include_deleted_and_edited_message
          type: string
          description: |-
            **Optional** <br>
            Set the value of this field to `true` to include edited and deleted messages in the response.
      tags:
        - Chat Messages
      security:
        - OAuth: []
    parameters:
      - name: userId
        in: path
        type: string
        required: true
  '/chat/users/{userId}/messages/{messageId}':
    put:
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`<br>
            Message updated successfully.
        '400':
          description: |
            **HTTP Status Code:** `400`<br>
            Bar request<br>
            **Error Code:** `200`<br>
            Only the sender of this message can make updates.<br>
            **Error Code:** `300`<br>
            Message does not exist: $messageId <br> Must provide either contact or channel parameter.
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            **Error Code**: `1001`<br>
            User does not exist: $to_contact.<br>
            **Error Code**: `4130`<br>
            Channel does not exist: $to_channel.
      summary: Update a message
      description: "Each chat message has a unique identifier. Use this API to edit a chat message that you previously sent to either a contact or a channel in Zoom by providing the ID of the message as the value of the `messageId` parameter. The ID can be retrieved from List User's Chat Messages API. Additionally, as a query parameter, you must provide either the **email address** of the contact or the **Channel ID** of the channel where the message was sent. \n\n**Scope:** `chat_message:write`,`chat_message:write:admin`\t<br>\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium` \n\n</b> For an<b> account-level</b> <a href=\"https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app\">OAuth app</a>, this API can only be used on behalf of a user who is assigned with a <b><a href=\"https://support.zoom.us/hc/en-us/articles/115001078646-Using-role-management#:~:text=Each%20user%20in%20a%20Zoom,owner%2C%20administrator%2C%20or%20member.&text=Role%2Dbased%20access%20control%20enables,needs%20to%20view%20or%20edit.\"> role</a> that has Edit permission for Chat Messages</b>.</p>\n**Scope:** `chat_message:write`, `chat_message:write:admin`<br>\n\n\n\n\n\n\n"
      operationId: editMessage
      tags:
        - Chat Messages
      security:
        - OAuth: []
      parameters:
        - in: path
          name: messageId
          type: string
          required: true
          description: 'Message ID: Unique Identifier of the message.'
        - in: body
          name: body
          schema:
            type: object
            properties:
              message:
                type: string
                description: The edited message.
              to_contact:
                type: string
                description: |-
                  The email address of the contact to whom the message was sent.<br>
                  You must provide either `to_contact` or `to_channel` parameter in the API request.
              to_channel:
                type: string
                description: |-
                  The Channel ID of the channel where you sent the message.<br>You must provide either `to_contact` or `to_channel` parameter in the API request.
                   Channel ID can be retrieved from List User's Channels API.
          x-examples:
            application/json:
              message: This is an edited message. It is a gloomy day today.
              to_contact: theemailofmyfriend@sksjgsdf.fhdgfgdh
    parameters:
      - name: userId
        in: path
        type: string
        required: true
      - name: messageId
        in: path
        type: string
        required: true
    delete:
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`<br>
            Message deleted.
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>
            Bad request.<br>
            **Error Code:** `200`<br>
            The contact or the channel parameter provided is invalid.<br>
            Only the sender of this message can make updates.<br>
            **Error Code:** `300`<br>Channel does not exist: $messageId<br>Must provide either contact or channel parameter.
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            **Error Code**: `1001`<br>
            User does not exist: $to_contact.<br>
            **Error Code**: `4130`<br>
            Channel does not exist: $to_channel.
      summary: Delete a message
      description: |-
        Delete a chat message that you previously sent to a contact or a channel. In the query parameter, you must provide either of the following:<br>
        * `to_contact`: The email address of the contact to whom you sent the message. Use this parameter to delete a message sent to an individual contact in Zoom.
        * `to_channel`: The channel ID of the channel where you sent the message. Use this parameter to delete a message sent to a channel in Zoom.

        <p style="background-color:#e1f5fe; color:#01579b; padding:8px"> <b>Note: </b> For an<b> account-level</b> <a href="https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app">OAuth app</a>, this API can only be used on behalf of a user who is assigned with a <b><a href="https://support.zoom.us/hc/en-us/articles/115001078646-Using-role-management#:~:text=Each%20user%20in%20a%20Zoom,owner%2C%20administrator%2C%20or%20member.&text=Role%2Dbased%20access%20control%20enables,needs%20to%20view%20or%20edit."> role</a> that has Edit permission for Chat Messages</b>.</p>

        **Scope:** `chat_message:write`, `chat_message:write:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      operationId: deleteChatMessage
      tags:
        - Chat Messages
      consumes:
        - application/json
      security:
        - OAuth: []
      parameters:
        - in: path
          name: messageId
          type: string
          required: true
          description: Message ID
        - in: query
          name: to_contact
          type: string
          description: |-
            The userId or email address of a chat contact to whom you previously sent the message.

            Note: You must provide either `to_contact` or `to_channel` as a query parameter to delete a message that was previously sent to either an individual or a chat channel respectively.
        - in: query
          name: to_channel
          type: string
          description: |-
            The channel Id of the channel where you would like to send the message.

            You must provide either `to_contact` or `to_channel` as a query parameter to delete a message that was previously sent to either an individual or a chat channel
  '/chat/users/{userId}/channels':
    get:
      responses:
        '200':
          description: |-
            **Status Code**: `200` <br>
            User's channels returned.
          schema:
            type: object
            properties:
              total_records:
                type: integer
                description: The total number of records found.
              page_size:
                type: integer
                description: |-
                  The number of records returned with a single API call.
                  Default value: 30.
                maximum: 100
              next_page_token:
                type: string
                description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
              channels:
                type: array
                description: Chat Channel object(s).
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: 'Channel ID: Unique identifier of the Channel.'
                    name:
                      type: string
                      description: Name of the channel.
                    type:
                      type: integer
                      description: |-
                        Type of the channel. The value can be one of the following:<br>
                        `1`: **Private channel.** In this type of channel, members must be invited to join a channel.<br>
                        `2`: **Private channel with users that belong to the same Zoom account**. Members in this channel should be invited and the members should be from the same organization.<br>
                        `3`: **Public channel.** Anyone can search for this channel and join the channel. External members cannot be invited.<br>
                        `4`: **New chat**. This is an instant channel which can be created by adding members to a new chat.<br>
                        `5`: **Public channel**, similar to above, except members can invite members of other accounts.
                    channels_settings:
                      type: object
                      properties:
                        new_members_can_see_previous_messages_files:
                          type: boolean
                        allow_to_add_external_users:
                          type: integer
                        posting_permissions:
                          type: integer
          examples:
            application/json:
              total_records: 2
              page_size: 10
              channels:
                - id: ullamdsfjhgdsn663isi
                  name: Happiness Channel
                  type: 2
                - id: dsfdfrgtre23324663isi
                  name: Sales team
                  type: 2
        '400':
          description: |-
            **HTTP Status Code:** `400` <br>
            Bad request.<br>
            **Error Code**: `300`<br>
            The next page token is either invalid or has expired.
          examples: {}
      summary: List user's channels
      description: |-
        Zoom chat [channels](https://support.zoom.us/hc/en-us/articles/200912909-Getting-Started-With-Channels-Group-Messaging-) allow users to communicate via chat in private or public groups. Use this API to list a user's chat channels.

        **Scope**: `chat_channel:read` or `chat_channel:read:admin`<br>
        <p style="background-color:#e1f5fe; color:#01579b; padding:8px"> <b>Note: </b> This API supports both user-managed apps and account-level apps. However, in an<b> account-level</b> <a href="https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app">OAuth app</a>, to list channels of another user in the same Zoom account, the user calling this API must have a <a href="https://support.zoom.us/hc/en-us/articles/115001078646-Using-role-management#:~:text=Each%20user%20in%20a%20Zoom,owner%2C%20administrator%2C%20or%20member.&text=Role%2Dbased%20access%20control%20enables,needs%20to%20view%20or%20edit.">role</a> that has <b>View or Edit</b> permission for the Chat channels feature.</p><br>




         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`

      operationId: getChannels
      tags:
        - Chat Channels
      security:
        - OAuth: []
      parameters:
        - in: query
          name: page_size
          type: integer
          description: The number of records returned from a single API call.
          default: 10
          maximum: 50
        - in: query
          name: next_page_token
          type: string
          description: The next page token is used to paginate through large result sets. The expiration period for this token is 15 minutes.
        - in: path
          name: userId
          type: string
          required: true
          description: Unique identifier of the user.
    post:
      responses:
        '201':
          description: |-
            **Status Code**: `201` <br>
            Channel created.
          schema:
            type: object
            properties:
              id:
                type: string
                description: 'Channel ID: Unique Identifier for the Channel.'
              name:
                type: string
                description: Channel name.
              type:
                description: Channel type.
                type: integer
              jid:
                type: string
                description: 'Channel JID. '
          examples:
            application/json:
              id: id8977ullamco
              name: Happy Channel
              type: 1
              jid: nisi73624365536st
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>
            Not found.<br>
            **Error Code**: `5301`<br>
            Request to create a channel failed.
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            **Error Code**: `1001`<br>
            User does not exist: $userId.
      summary: Create a channel
      description: |
        Zoom chat channels allow users to communicate via chat in private or public groups. Use this API to create a channel for a user.<br>
        **Scopes**:`chat_channel:write` or `chat_channel:write:admin`<br>

        <p style="background-color:#e1f5fe; color:#01579b; padding:8px"> <b>Note: </b> This API supports both user-managed apps and account-level apps. However, in an<b> account-level</b> <a href="https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app">OAuth app</a>, to create a channel on behalf of another user in the same Zoom account, the user calling this API must have a <a href="https://support.zoom.us/hc/en-us/articles/115001078646-Using-role-management#:~:text=Each%20user%20in%20a%20Zoom,owner%2C%20administrator%2C%20or%20member.&text=Role%2Dbased%20access%20control%20enables,needs%20to%20view%20or%20edit.">role</a> that has <b>Edit</b> permission for the Chat channels feature.</p><br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`

      operationId: createChannel
      tags:
        - Chat Channels
      security:
        - OAuth: []
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              name:
                type: string
                description: Name of the channel.
                maxLength: 128
              type:
                type: integer
                description: |-
                  Type of the channel. The value can be one of the following:<br>
                  `1`: Private channel. In this type of channel, members must be invited to join a channel.<br>
                  `2`: Private channel with members that belong to one Zoom account. Members in this channel should be invited and the members should be from the same organization.<br>
                  `3`: Public channel. Anyone can search for this channel and join the channel.<br>
                  `4`: New chat. This is an instant channel which can be created by adding members to a new chat.
                enum:
                  - 1
                  - 2
                  - 3
              members:
                type: array
                description: Member(s) to include in the channel. A max of 5 members can be added to the channel at once with this API.
                items:
                  type: object
                  properties:
                    email:
                      type: string
                      format: email
                      description: Member's email address.
                  required:
                    - email
        - in: path
          name: userId
          type: string
          required: true
          description: Unique identifier of the user.
    parameters:
      - name: userId
        in: path
        type: string
        required: true
  /chat/users/me/contacts:
    get:
      responses:
        '200':
          description: '**HTTP Status Code:** `200`<br>List of user''s contacts returned.'
          schema:
            type: object
            properties:
              page_size:
                type: integer
                description: |-
                  The number of records returned with a single API call.
                  Default value: 30.
                maximum: 100
              next_page_token:
                type: string
                description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
              contacts:
                type: array
                description: The contacts object.
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Contact Id.
                    email:
                      type: string
                      description: Contact's email address.
                      format: email
                    first_name:
                      type: string
                      description: Contact's first name.
                    last_name:
                      type: string
                      description: Contact's last name.
          examples:
            application/json:
              page_size: 10
              next_page_token: shdjksA4
              contacts:
                - id: 44ABCDEfgjWHABBxw
                  email: someemail@somemail.com
                  first_name: Brandon
                  last_name: Ghimire
        '300':
          description: |-
            **Error Code:** `300`<br>
            The next page token is invalid or has expired.
      description: |-
        A user under an organization’s Zoom account has internal users listed under Company Contacts in the Zoom Client. A Zoom user can also add another Zoom user as a [contact](https://support.zoom.us/hc/en-us/articles/115004055706-Managing-Contacts). Call this API to list all the contacts of a Zoom user. Zoom contacts are categorized into "company contacts" and "external contacts". You must specify the contact type in the `type` query parameter. If you do not specify, by default, the type will be set as company contact.

        <p style="background-color:#e1f5fe; color:#01579b; padding:8px"> <b>Note: </b> This API only supports <b>user-managed</b> <a href="https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app">OAuth app</a>.</p><br>

        **Scope**: `chat_contact:read`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      summary: List user's contacts
      operationId: getUserContacts
      tags:
        - Contacts
      security:
        - OAuth: []
      parameters:
        - in: query
          name: type
          type: string
          default: company
          description: |-
            The type of contact. The value can be one of the following:
            `company`: Contacts from the user's organization.
            `external`: External contacts.
        - in: query
          name: page_size
          type: integer
          description: The number of records returned with a single API call.
          maximum: 50
          default: 10
        - in: query
          name: next_page_token
          type: string
          description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
  '/chat/users/me/contacts/{contactId}':
    get:
      responses:
        '200':
          description: |+
            **HTTP Status Code:** `200`<br>
            Contact information returned.


          schema:
            type: object
            properties:
              id:
                type: string
                description: User ID of the contact.
              email:
                type: string
                description: Contact's email address.
                format: email
              first_name:
                type: string
                description: Contact's first name
              last_name:
                type: string
                description: Contact's last name
              presence_status:
                type: string
                description: 'Contact''s Presence Status in the Zoom Chat Client. The status can be one of the following: <br> `Do_Not_Disturb`<br> `Away`<br> `Available`<br> `Offline`'
                enum:
                  - Do_Not_Disturb
                  - Away
                  - Available
                  - Offline
              phone_number:
                type: string
                description: Phone number of the contact.
              direct_numbers:
                type: array
                description: Direct number(s) assigned to the contact.
                items:
                  type: string
              extension_number:
                type: string
                description: Extension number of the contact.
          examples:
            application/json:
              id: u487547sic45ing
              email: dhgdj@djkfhd.dhgfdh
              first_name: Vikram
              last_name: Grg
              presence_status: Do_Not_Disturb
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>
            Bad request<br>
            **Error Code:** `5301`<br>
            Request to get the presence status of the chat contact failed.
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            **Error Code**: `1001`<br>
            User does not exist: $contactId
      summary: Get user's contact details
      description: |-
        A user under an organization’s Zoom account has internal users listed under Company Contacts in the Zoom Client. A Zoom user can also add another Zoom user as a [contact](https://support.zoom.us/hc/en-us/articles/115004055706-Managing-Contacts). Call this API to get information on a specific contact of the Zoom user.

        <p style="background-color:#e1f5fe; color:#01579b; padding:8px"> <b>Note: </b>This API only supports <b>user-managed</b> <a href="https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app">OAuth app</a>.</p><br>

        **Scope**: `chat_contact:read`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      operationId: getUserContact
      tags:
        - Contacts
      security:
        - OAuth: []
      parameters:
        - in: path
          name: contactId
          type: string
          description: The user's contact Id or email address. The contact can be either a company contact or an external contact.
          required: true
        - in: query
          name: query_presence_status
          type: boolean
          description: |-
            The presence status of the contact.
            Include this query parameter with a value of `true` to get the presence status of the contact in the response.
    parameters:
      - name: contactId
        in: path
        type: string
        required: true
  '/chat/users/{userId}/channels/{channelId}':
    get:
      responses:
        '200':
          description: |+
            **HTTP Status Code:** `200`<br>
            Channel returned.<br>



          schema:
            $ref: '#/definitions/Channel'
          examples:
            application/json:
              id: ut1234sgfsdf
              name: Leah
              type: 1
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>
            Bad Request<br>
            **Error Code:** `200`<br>
            Unauthorized request. You do not have permission to access this user's channel information.
        '404':
          description: |-
            **Status Code:** `404`<br>
            Not found.<br>
            **Error Code:** `4130`<br>
            Channel does not exist: $channelId.
      summary: Get a channel
      description: |-
        Zoom chat [channels](https://support.zoom.us/hc/en-us/articles/200912909-Getting-Started-With-Channels-Group-Messaging-) allow users to communicate via chat in private or public groups. Use this API to get information about a specific channel.

        **Scope:** `chat_channel:read:admin` <br>
        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium` <br>

        <p style="background-color:#e1f5fe; color:#01579b; padding:8px"> <b>Note: </b> For an<b> account-level</b> <a href="https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app">OAuth app</a>, this API can only be used on behalf of a user who is assigned with a <b> <a href="https://support.zoom.us/hc/en-us/articles/115001078646-Using-role-management#:~:text=Each%20user%20in%20a%20Zoom,owner%2C%20administrator%2C%20or%20member.&text=Role%2Dbased%20access%20control%20enables,needs%20to%20view%20or%20edit."> role</a>  that has View or Edit permission for Chat Channels</b>.</p>



      operationId: getChannel
      tags:
        - Chat Channels (Account-level)
      consumes:
        - application/json
      security:
        - OAuth: []
      parameters:
        - in: path
          name: channelId
          type: string
          required: true
          description: 'Channel ID: Unique Identifier of a channel.'
        - in: path
          name: userId
          type: string
          required: true
          description: Unique identifier of the user who is the owner of the channel.
    parameters:
      - name: userId
        in: path
        type: string
        required: true
      - name: channelId
        in: path
        type: string
        required: true
    patch:
      responses:
        '204':
          description: |-
            **Status Code:** `204`
            Channel updated.
          schema: {}
        '400':
          description: |-
            **Status Code:** `400`<br>
            Bad request<br>
            **Error Code:** `200`<br>
            Unauthorized request. You do not have permission to update a channel for this user.<br>
            **Error Code:** `5301`<br>
            Request to update a channel failed.
      summary: Update a channel
      description: "Zoom chat channels allow users to communicate via chat in private or public channels. Use this API to update the name of a specific channel created by a user. <br><br>\n**Scope:** `chat_channel:write:admin`\t<br>\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`\n<p style=\"background-color:#e1f5fe; color:#01579b; padding:8px\"> <b>Note: </b> For an<b> account-level</b> <a href=\"https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app\">OAuth app</a>, this API can only be used on behalf of a user who is assigned with a <b> <a href=\"https://support.zoom.us/hc/en-us/articles/115001078646-Using-role-management#:~:text=Each%20user%20in%20a%20Zoom,owner%2C%20administrator%2C%20or%20member.&text=Role%2Dbased%20access%20control%20enables,needs%20to%20view%20or%20edit.\"> role</a>  that has Edit permission for Chat Channel</b>.</p>\n"
      operationId: updateChannel
      tags:
        - Chat Channels (Account-level)
      security:
        - OAuth: []
      parameters:
        - in: path
          name: channelId
          type: string
          required: true
          description: Channel Id.
        - in: body
          name: body
          schema:
            type: object
            properties:
              name:
                type: string
                description: A new name for the channel.
            required:
              - name
          x-examples:
            application/json:
              name: Share happiness channel
        - in: path
          name: userId
          type: string
          required: true
          description: Unique Identifier of the Zoom user who is the owner of the channel.
    delete:
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`<br>
            Channel deleted.
          schema: {}
        '400':
          description: |-
            **HTTP Status Code:** `400`<br> Bad request.<br>
            **Error Code:** `200`<br>
            Unauthorized request. You do not have permission to delete this user's channel.<br>
            **Error Code:** `5301`<br> Request to delete a channel failed.
      summary: Delete a channel
      description: |-
        Zoom chat [channels](https://support.zoom.us/hc/en-us/articles/200912909-Getting-Started-With-Channels-Group-Messaging-) allow users to communicate via chat in private or public groups. Use this API to delete a specific channel.

        **Scope:** `chat_channel:write:admin`<br>
        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`

        <p style="background-color:#e1f5fe; color:#01579b; padding:8px"> <b>Note: </b> This API only supports <b>user-managed</b> <a href="https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app">OAuth app</a>.</p><br>



      operationId: deleteChannel
      tags:
        - Chat Channels (Account-level)
      parameters:
        - in: path
          name: channelId
          type: string
          required: true
          description: 'Channel ID: Unique Identifier of a channel.'
  '/chat/users/{userId}/channels/{channelId}/members':
    get:
      responses:
        '200':
          description: |+
            **HTTP Status Code:** `200`<br>
            List of channel members returned.

          schema:
            type: object
            properties:
              total_records:
                type: integer
                description: The total number of records returned.
              page_size:
                type: integer
                default: 30
                description: 'The number of records returned with a single API call. '
                maximum: 100
              next_page_token:
                type: string
                description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
              members:
                type: array
                description: Members in a channel.
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: 'Member ID: Unique Identifier of the member.'
                    email:
                      type: string
                      description: Email address of the member.
                      format: email
                    first_name:
                      type: string
                      description: Member's first name.
                    last_name:
                      type: string
                      description: Member's last name.
                    role:
                      type: string
                      description: 'The role of the member. The value can be one of these: `owner`, `admin`, `member`. '
                      enum:
                        - admin
                        - owner
                        - member
          examples:
            application/json:
              total_records: 2
              page_size: 30
              next_page_token: ''
              members:
                - id: laboris3764763ull
                  email: IiUQCUCLs@XKmztyJAAU.di
                  first_name: Harry
                  last_name: King
                  role: admin
                - id: eul21dfabore
                  email: hJUWLsYtyw@ljXwqOlyNCvBjtkLOx.eox
                  first_name: Alisha
                  last_name: Sapkota
                  role: member
        '400':
          description: |-
            **HTTP Status Code:** `400`<br> Bad Request<br>
            **Error Code:** `200`<br>
            Unauthorized request. You do not have permission to view channel members on this user's behalf..<br>
            **Error Code:** `300`<br>
            The next page token is either invalid or has expired.
      summary: List channel members
      description: |-
        A [channel](https://support.zoom.us/hc/en-us/articles/200912909-Getting-Started-With-Channels-Group-Messaging-) can have one or multiple members. List all the members of a channel using this API.

         </b> For an<b> account-level</b> <a href="https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app">OAuth app</a>, this API can only be used on behalf of a user who is assigned with a <b><a href="https://support.zoom.us/hc/en-us/articles/115001078646-Using-role-management#:~:text=Each%20user%20in%20a%20Zoom,owner%2C%20administrator%2C%20or%20member.&text=Role%2Dbased%20access%20control%20enables,needs%20to%20view%20or%20edit."> role</a> that has View or Edit permission for Chat Channels</b>.</p>

        **Scopes:** `chat_channel:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      operationId: listChannelMembers
      tags:
        - Chat Channels (Account-level)
      security:
        - OAuth: []
      parameters:
        - in: path
          name: channelId
          type: string
          required: true
          description: Channel Id.
        - in: query
          name: page_size
          type: integer
          description: The number of records returned with a single API call.
          maximum: 100
          default: 30
        - in: query
          name: next_page_token
          type: string
          description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
        - in: path
          name: userId
          type: string
          required: true
          description: Unique identifier of the user who is the owner of this channel.
    parameters:
      - name: userId
        in: path
        type: string
        required: true
      - name: channelId
        in: path
        type: string
        required: true
    post:
      responses:
        '201':
          description: |-
            **HTTP Status Code:** `201`<br>
            Members invited to the channel.
          schema:
            type: object
            properties:
              ids:
                type: array
                description: Member Ids of the members.
                items:
                  type: string
              added_at:
                type: string
                format: date-time
                description: The date and time at which the member(s) are added to the channe.
          examples:
            application/json:
              ids:
                - abc4545fdgfdhg
                - lgfdkhg123456
              added_at: '2019-09-27T00:14:46Z'
        '400':
          description: |-
            **Status Code:** `400`<br>
            Bad request.<br>
            **Error Code:** `5301`<br>
            Request to invite channel members failed.<br>
            **Error Code:** `200`<br>
            Unauthorized request. You do not have permission to invite channel members on this user's behalf.
      summary: Invite channel members
      description: |-
        A [channel](https://support.zoom.us/hc/en-us/articles/200912909-Getting-Started-With-Channels-Group-Messaging-) can have one or multiple members. Use this API to invite members that are in a user's contact list to a channel. The maximum number of members that can be added at once with this API is 5.

        **Scope:** `chat_channel:write:admin` <br>
        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`

         </b> For an<b> account-level</b> <a href="https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app">OAuth app</a>, this API can only be used on behalf of a user who is assigned with a <b><a href="https://support.zoom.us/hc/en-us/articles/115001078646-Using-role-management#:~:text=Each%20user%20in%20a%20Zoom,owner%2C%20administrator%2C%20or%20member.&text=Role%2Dbased%20access%20control%20enables,needs%20to%20view%20or%20edit."> role</a> that has Edit permission for Chat Channels</b>.</p>
      operationId: inviteChannelMembers
      tags:
        - Chat Channels (Account-level)
      security:
        - OAuth: []
      parameters:
        - in: path
          name: channelId
          type: string
          required: true
          description: 'Channel ID: Unique Identifier of the channel.'
        - in: body
          name: body
          schema:
            type: object
            properties:
              members:
                type: array
                description: Members of a channel. You can invite up to a max number of 5 members with a single API call.
                items:
                  type: object
                  properties:
                    email:
                      type: string
                      description: Email adress of the member.
                      format: email
                  required:
                    - email
          x-examples:
            application/json:
              members:
                - email: rtxbZkoL6ZVr@BKRUfQISqmtCCeuGPP.ma
                - email: Rl7NtxV2wGf6@INybVUUu.fphl
        - in: path
          name: userId
          type: string
          required: true
          description: Unique identifier of the user who is the owner of this channel.
  '/chat/channels/{channelId}':
    get:
      responses:
        '200':
          description: |+
            **HTTP Status Code:** `200`<br>
            Channel returned.<br>



          schema:
            $ref: '#/definitions/Channel'
          examples:
            application/json:
              id: ut1234sgfsdf
              name: Leah
              type: 1
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>
            Bad Request<br>
            **Error Code:** `200`<br>
            Unauthorized request. You do not have permission to access this user's channel information.
        '404':
          description: |-
            **Status Code:** `404`<br>
            Not found.<br>
            **Error Code:** `4130`<br>
            Channel does not exist: $channelId.
      summary: Get a channel
      description: "Zoom chat [channels](https://support.zoom.us/hc/en-us/articles/200912909-Getting-Started-With-Channels-Group-Messaging-) allow users to communicate via chat in private or public groups. Use this API to get information about a specific channel. \n\n**Scope:** `chat_channel:read`\t<br>\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`\n\n<p style=\"background-color:#e1f5fe; color:#01579b; padding:8px\"> <b>Note: </b> This API only supports <b>user-managed</b> <a href=\"https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app\">OAuth app</a>.</p><br>\n\n\n "
      operationId: getUserLevelChannel
      tags:
        - Chat Channels
      consumes:
        - application/json
      security:
        - OAuth: []
      parameters:
        - in: path
          name: channelId
          type: string
          required: true
          description: 'Channel ID: Unique Identifier of a channel.'
    parameters:
      - name: channelId
        in: path
        type: string
        required: true
    patch:
      responses:
        '204':
          description: |-
            **Status Code:** `204`
            Channel updated.
          schema: {}
        '400':
          description: |-
            **Status Code:** `400`<br>
            Bad request<br>
            **Error Code:** `200`<br>
            Unauthorized request. You do not have permission to update a channel for this user.<br>
            **Error Code:** `5301`<br>
            Request to update a channel failed.
      summary: Update a channel
      description: "Zoom chat channels allow users to communicate via chat in private or public channels. Use this API to update the name of a specific channel that you created. \n\n**Scope:** `chat_channel:write`\t<br>\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`\n\n<p style=\"background-color:#e1f5fe; color:#01579b; padding:8px\"> <b>Note: </b> This API only supports <b>user-managed</b> <a href=\"https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app\">OAuth app</a>.</p><br>\n\n"
      operationId: updateUserLevelChannel
      tags:
        - Chat Channels
      security:
        - OAuth: []
      parameters:
        - in: path
          name: channelId
          type: string
          required: true
          description: Channel Id.
        - in: body
          name: body
          schema:
            type: object
            properties:
              name:
                type: string
                description: A new name for the channel.
            required:
              - name
          x-examples:
            application/json:
              name: Share happiness channel
    delete:
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`<br>
            Channel deleted.
          schema: {}
        '400':
          description: |-
            **HTTP Status Code:** `400`<br> Bad request.<br>
            **Error Code:** `200`<br>
            Unauthorized request. You do not have permission to delete this user's channel.<br>
            **Error Code:** `5301`<br> Request to delete a channel failed.
      summary: Delete a channel
      description: |-
        Zoom chat [channels](https://support.zoom.us/hc/en-us/articles/200912909-Getting-Started-With-Channels-Group-Messaging-) allow users to communicate via chat in private or public groups. Use this API to delete a specific channel.

        **Scope:** `chat_channel:write`<br>
        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`

        <p style="background-color:#e1f5fe; color:#01579b; padding:8px"> <b>Note: </b> This API only supports <b>user-managed</b> <a href="https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app">OAuth app</a>.</p><br>



      operationId: deleteUserLevelChannel
      tags:
        - Chat Channels
      parameters:
        - in: path
          name: channelId
          type: string
          required: true
          description: 'Channel ID: Unique Identifier of a channel.'
  '/chat/channels/{channelId}/members/{memberId}':
    delete:
      responses:
        '204':
          description: |+
            **HTTP Status Code:** `204` **No Content**<br>
            Member removed.


          schema: {}
        '400':
          description: |+
            **HTTP Status Code:** `400` <br>
            Bad Request<br>
            **Error Code:** `200`<br>
            Unauthorized request. You do not have permission to remove channel members on this user's behalf.<br>
            **Error Code:** `5301`<br>
            Unable to remove channel member.

      summary: Remove a member
      description: |2+
         A [channel](https://support.zoom.us/hc/en-us/articles/200912909-Getting-Started-With-Channels-Group-Messaging-) can have one or multiple members. Use this API to remove a member from a chat channel.<br><br>
         **Scopes:** `chat_channel:write`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`

         <p style="background-color:#e1f5fe; color:#01579b; padding:8px"> <b>Note: </b> This API only supports <b>user-managed</b> <a href="https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app">OAuth app</a>.</p><br>


      operationId: removeAUserLevelChannelMember
      tags:
        - Chat Channels
      security:
        - OAuth: []
      parameters:
        - in: path
          name: channelId
          type: string
          required: true
          description: 'Unique Identifier of the Channel from where you would like to remove a member. This can be retrieved from the [List Channels API](https://marketplace.zoom.us/docs/api-reference/zoom-api/chat-channels/getchannels).'
        - in: path
          name: memberId
          type: string
          required: true
          description: Email address of the member whom you would like to be remove from the channel.
    parameters:
      - name: channelId
        in: path
        type: string
        required: true
      - name: memberId
        in: path
        type: string
        required: true
  '/chat/channels/{channelId}/members/me':
    post:
      responses:
        '201':
          description: |-
            **HTTP Status Code:** `201`
            Successfully joined the channel.
          schema:
            type: object
            properties:
              id:
                type: string
                description: Member Id of the user who joined the public channel.
              added_at:
                type: string
                format: date-time
                description: The date and time at which a user joined the channel.
          examples:
            application/json:
              id: lbborum-12fiasf-abaa
              added_at: '2018-12-11T15:06:32.633Z'
        '400':
          description: |-
            **HTTP Status Code:** `400`<br> Bad request.<br>
            **Error Code:** `5301`<br> Request to join the channel failed.
      summary: Join a channel
      description: |-
        A [channel](https://support.zoom.us/hc/en-us/articles/200912909-Getting-Started-With-Channels-Group-Messaging-) can have one or multiple members. Use this API to join a channel that is open for anyone in the same organization to join. You cannot use this API to join private channels that only allows invited members to be a part of it.

        <p style="background-color:#e1f5fe; color:#01579b; padding:8px"> <b>Note: </b>This API only supports <b>user-managed</b> <a href="https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app">OAuth app</a>.</p><br>

        **Scope:** `chat_channel:write`<br>
        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      operationId: joinChannel
      tags:
        - Chat Channels
      security:
        - OAuth: []
      parameters:
        - in: path
          name: channelId
          type: string
          required: true
          description: Channel Id.
    parameters:
      - name: channelId
        in: path
        type: string
        required: true
    delete:
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`<br>
            Left channel successfully.
          schema: {}
        '400':
          description: |-
            **HTTP Status Code:** `400`<br> Bad Request.<br>
            **Error Code:** `5301`<br> Request to leave the channel failed.
      summary: Leave a channel
      description: |-
        If you're no longer interested in being a member of an existing channel, you can leave the channel at any time. Use this API to leave a specific channel. After leaving the channel, you can no longer access information from that channel.

        <p style="background-color:#e1f5fe; color:#01579b; padding:8px"> <b>Note: </b>This API only supports <b>user-managed</b> <a href="https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app">OAuth app</a>.</p><br>

        **Scope:** `chat_channel:write`<br>
        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      operationId: leaveChannel
      tags:
        - Chat Channels
      parameters:
        - in: path
          name: channelId
          type: string
          required: true
          description: 'Channel ID: Unique Identifier of a channel.'
      security:
        - OAuth: []
  /accounts:
    get:
      summary: List sub accounts
      description: |+
        List all the sub accounts that have been created by a master account.<br><br>Zoom allows only [approved partners](https://marketplace.zoom.us/docs/api-reference/master-account-apis) to use master APIs and manage sub accounts. Email the partner programs team at **partner-success@zoom.us** for more details.

        <br>**Prerequisites:**<br>
        * Pro or a higher paid account with master account option enabled. <br>

        **Scope**: `account:read:admin`
        <br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>

      tags:
        - Accounts
      operationId: accounts
      parameters:
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/PageNumber'
        - $ref: '#/parameters/NextPageToken'
      responses:
        '200':
          description: Account list returned.
          schema:
            $ref: '#/definitions/AccountList'
          examples:
            application/json:
              page_count: integer
              page_number: integer
              page_size: integer
              total_records: integer
              accounts:
                - id: 'string [uuid]'
                  account_name: string
                  owner_email: string
                  account_type: string
                  seats: integer
                  subscription_start_time: 'string [date-time]'
                  subscription_end_time: 'string [date-time]'
                  created_at: 'string [date-time]'
    post:
      summary: Create a sub account
      description: |-
        Create a sub account under a master account. Your account must be a master account in order to create sub accounts.
        <br><br>Zoom allows only [approved partners](https://marketplace.zoom.us/docs/api-reference/master-account-apis) to use master APIs and manage sub accounts. Email the partner programs team at partner-success@zoom.us. for more details. Please note that the created account user will receive a confirmation email.<br><br>
        <br>
        **Prerequisites:**<br>
        * Pro or a higher paid account with master account option enabled. <br>

        **Scope**: `account:write:admin`<br>
        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>



      tags:
        - Accounts
      operationId: accountCreate
      parameters:
        - in: body
          name: body
          required: true
          description: Account.
          schema:
            type: object
            description: 'The account object represents an account on Zoom. The account owner is the user who created the account or had an account created for them. You can read more about the Zoom account structure <a href=''https://medium.com/zoom-developer-blog/a-brief-look-at-zoom-account-structures-1d19c745bf8a'' target=''_blank''>here</a>.'
            properties:
              first_name:
                type: string
                description: User's first name.
                maxLength: 64
              last_name:
                type: string
                description: User's last name.
                maxLength: 64
              email:
                type: string
                description: User's email address.
                maxLength: 128
              password:
                type: string
                description: |-
                  User's password.

                  **Note:** If the account owner or admin has enabled [enhanced password requirements](https://support.zoom.us/hc/en-us/articles/360034675592-Advanced-security-settings#h_fa9186e4-6818-4f7a-915c-2e25c19f0acd), the value provided in this field must meet those requirements. These requirements can be retrieved by calling the [Get Account Settings API](https://marketplace.zoom.us/docs/api-reference/zoom-api/accounts/accountsettings) and referring to the `password_requirement` field present in the `security` object.
                minimum: 8
              options:
                $ref: '#/definitions/AccountOptions'
              account_name:
                type: string
                description: 'Name of the account. If you do not provide a value for this field, by default, the value will be set as a contatenation of "first_name" and "last_name". '
                maxLength: 64
            required:
              - first_name
              - last_name
              - email
              - password
          x-examples:
            application/json:
              first_name: Harry
              last_name: Ghim
              email: fhjdhf@djhfjdf.ff
              password: bdkfhds1e3r
              options:
                share_rc: true
                room_connectors:
                  - 127.0.0.1
                  - 127.1.1.0
                share_mc: true
                meeting_connectors:
                  - 100.0.0.1
                  - 100.1.1.0
                pay_mode: master
      responses:
        '201':
          description: Account created.
          headers:
            Content-Location:
              description: Location of the created account.
              type: string
          schema:
            type: object
            properties:
              id:
                type: string
                description: Account ID.
              owner_id:
                type: string
                description: Account owner ID.
              owner_email:
                type: string
                description: Account owner email.
              created_at:
                type: string
                description: Account created date time.
          examples:
            application/json:
              id: string
              owner_id: string
              owner_email: string
              created_at: string
        '400':
          description: |+
            **HTTP Status Code:** `400`<br>
            **Error Code:**`300`<br> Your request could not be completed because the name contains an invalid word: {name}
            **Error Code:** `1107`<br>
            Email domain is blocked.<br>
            **Error Code:** `1111`<br>
            Password should not contain repeated characters such as 'aaaaaa'. <br>
            Password should not contain consecutive characters such as 'abc','123'.

        '409':
          description: |-
            **HTTP Status Code:** `409`<br>
            **Error Code:** `1005`<br>
            Email $email has already been used.
  '/accounts/{accountId}':
    get:
      summary: Get sub account details
      description: |
        Get details of a sub account that is listed under a master account. Your account must be a master account in order to retrieve sub accounts' details. Zoom allows only [approved partners](https://marketplace.zoom.us/docs/api-reference/master-account-apis) to use master APIs and create sub accounts. Email the partner programs team at **partner-success@zoom.us** for more details.

        **Prerequisites:**
        * Pro or a higher paid account with master account option enabled. <br>

        **Scope**: `account:write:admin`<br>
        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>



      tags:
        - Accounts
      operationId: account
      parameters:
        - $ref: '#/parameters/AccountId'
      responses:
        '200':
          description: |-
            **HTTP Status Code**: `200`<br>
            Account object returned.
          schema:
            type: object
            properties:
              id:
                type: string
                description: Account ID.
              owner_id:
                type: string
                description: Account owner ID.
              owner_email:
                type: string
                description: Account owner email.
              created_at:
                type: string
                format: date-time
                description: Account creation date and time.
              options:
                $ref: '#/definitions/AccountOptions'
              vanity_url:
                type: string
                description: Account Vanit URL
          examples:
            application/json:
              id: string
              owner_id: string
              owner_email: string
              created_at: 'string [date-time]'
              options:
                share_rc: boolean
                room_connectors: string
                share_mc: boolean
                meeting_connectors: string
                pay_mode: string
        '404':
          description: |-
            **HTTP Status Code**: `404`<br>
            **Error Code:** `2001`<br> Account does not exist: $subAccountId.
    delete:
      summary: Disassociate a sub account
      description: |-
        Disassociate a sub account from its master account. This will leave the sub account intact but it will no longer be associated with the master account.<br>

        **Prerequisites:**
        * Pro or a higher paid account with master account option enabled. <br>
        * The account making this API request must be a [master account](https://marketplace.zoom.us/docs/api-reference/master-account-apis).<br><br>


        **Scope**: `account:write:admin`<br>
        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>



      tags:
        - Accounts
      operationId: accountDisassociate
      parameters:
        - $ref: '#/parameters/AccountId'
      responses:
        '204':
          description: '**HTTP Status Code**: `204`<br>Account deleted.'
          examples: {}
        '404':
          description: |-
            **HTTP Status Code**: `404` <br>
            **Error Code:** `2000`<br> You cannot disassociate a paid account. <br>
            **Error Code:** `2001`<br> Account does not exist: $subAccountId.
  '/accounts/{accountId}/options':
    patch:
      summary: Update options
      description: |-
        Update a sub account's options under the master account.<br> <aside>Your account must be a master account in order to update the options for sub accounts. Zoom only assigns this privilege to trusted partners. </aside>

        **Prerequisites:**
        * Pro or a higher paid account with master account option enabled.
        * The account making this API request must be a [master account](https://marketplace.zoom.us/docs/api-reference/master-account-apis).<br><br>

        **Scope**: `account:write:admin`<br>
        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>



      tags:
        - Accounts
      operationId: accountOptionsUpdate
      parameters:
        - $ref: '#/parameters/AccountId'
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AccountOptions'
          x-examples: {}
      responses:
        '200':
          description: |-
            **Error Code:** `200`<br>
            The pay mode cannot be updated for a sub account which already has an existing plan.
        '204':
          description: |-
            **HTTP Status Code:** `204`<br>
            Account options updated.
          examples:
            application/json:
              share_rc: boolean
              room_connectors: string
              share_mc: boolean
              meeting_connectors: string
              pay_mode: string
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>
            **Error Code:** `2100`<br> The collection method cannot be changed after the purchase is complete.
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            **Error Code:** `2001`<br>
            Account does not exist: $subAccountId.
      security:
        - OAuth: []
  '/accounts/{accountId}/settings':
    get:
      summary: Get settings
      description: |-
        Get the settings of an account.<br>
        To get the settings of a master account, use `me` as the value for the `accountId` path parameter.<br><br>
         **Prerequisites**:
         * The account must be a paid account.<br>
        **Scopes**: `account:read:admin`
        <br>
        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      tags:
        - Accounts
      operationId: accountSettings
      parameters:
        - $ref: '#/parameters/AccountId'
        - in: query
          name: option
          type: string
          enum:
            - meeting_authentication
            - recording_authentication
          allowEmptyValue: true
          description: "`meeting_authentication`: Use this query parameter to view [meeting authentication configuration](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) applied on the account.<br>`recording_authentication`: Use this query parameter to view [recording authentication configuration](https://support.zoom.us/hc/en-us/articles/360037756671-Authentication-Profiles-for-Cloud-Recordings) applied on the account.<br>\L`security`: Use this query parameter to view security settings such as password requirements for user login, two factor authentication etc., applied on the account.<br>\n`meeting_security`: Use this query parameter to view meeting security settings applied on the account.<br>"
        - in: query
          name: custom_query_fields
          type: string
          description: |-
            Provide the name of the field by which you would like to filter the response. For example, if you provide "host_video" as the value of this field, you will get a response similar to the following:<br>
            {
                "schedule_meeting": {
                    "host_video": false
                }
            }
            <br>You can provide multiple values by separating them with commas(example: "host_video,participant_video”).
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br> Account settings returned.
            **Error Code:** `200`<br>
            Only available for Paid account.
          examples:
            application/json:
              schedule_meeting:
                host_video: boolean
                participant_video: boolean
                audio_type: string
                join_before_host: boolean
                use_pmi_for_scheduled_meetings: boolean
                use_pmi_for_instant_meetings: boolean
                enforce_login: boolean
                enforce_login_with_domains: boolean
                enforce_login_domains: string
                not_store_meeting_topic: boolean
                force_pmi_jbh_password: boolean
                require_password_for_scheduling_new_meetings: boolean
                require_password_for_scheduled_meetings: boolean
                require_password_for_instant_meetings: boolean
                require_password_for_pmi_meetings: string
              in_meeting:
                e2e_encryption: boolean
                chat: boolean
                private_chat: boolean
                auto_saving_chat: boolean
                entry_exit_chime: string
                record_play_own_voice: boolean
                feedback: boolean
                post_meeting_feedback: boolean
                co_host: boolean
                polling: boolean
                attendee_on_hold: boolean
                show_meeting_control_toolbar: boolean
                allow_show_zoom_windows: boolean
                annotation: boolean
                whiteboard: boolean
                webinar_question_answer: boolean
                anonymous_question_answer: boolean
                breakout_room: boolean
                closed_caption: boolean
                far_end_camera_control: boolean
                group_hd: boolean
                virtual_background: boolean
                watermark: boolean
                alert_guest_join: boolean
                auto_answer: boolean
                p2p_connetion: boolean
                p2p_ports: boolean
                ports_range: string
                sending_default_email_invites: boolean
                use_html_format_email: boolean
                dscp_marking: boolean
                dscp_audio: integer
                dscp_video: integer
                stereo_audio: boolean
                original_audio: boolean
                screen_sharing: boolean
                remote_control: boolean
              email_notification:
                cloud_recording_avaliable_reminder: boolean
                jbh_reminder: boolean
                cancel_meeting_reminder: boolean
                low_host_count_reminder: boolean
                alternative_host_reminder: boolean
                schedule_for_reminder: boolean
              zoom_rooms:
                upcoming_meeting_alert: boolean
                start_airplay_manually: boolean
                weekly_system_restart: boolean
                list_meetings_with_calendar: boolean
                zr_post_meeting_feedback: boolean
                ultrasonic: boolean
                force_private_meeting: boolean
                hide_host_information: boolean
                cmr_for_instant_meeting: boolean
                auto_start_stop_scheduled_meetings: boolean
              security:
                admin_change_name_pic: boolean
                import_photos_from_devices: boolean
                hide_billing_info: boolean
              recording:
                local_recording: boolean
                cloud_recording: boolean
                record_speaker_view: boolean
                record_gallery_view: boolean
                record_audio_file: boolean
                save_chat_text: boolean
                show_timestamp: boolean
                recording_audio_transcript: boolean
                auto_recording: string
                cloud_recording_download: boolean
                cloud_recording_download_host: boolean
                account_user_access_recording: boolean
                auto_delete_cmr: boolean
                auto_delete_cmr_days: integer
              telephony:
                third_party_audio: boolean
                audio_conference_info: string
              tsp:
                call_out: boolean
                call_out_countries:
                  - string
                show_international_numbers_link: boolean
                display_toll_free_numbers: boolean
              integration:
                google_calendar: boolean
                google_drive: boolean
                dropbox: boolean
                box: boolean
                microsoft_one_drive: boolean
                kubi: boolean
              feature:
                meeting_capacity: integer
          schema:
            oneOf:
              - $ref: '#/definitions/AccountSettings'
              - $ref: '#/definitions/AccountSettingsAuthentication'
              - $ref: '#/definitions/AccountSettingsSecurity'
              - $ref: '#/definitions/MeetingSecuritySettings'
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            **Error Code:** `2001`<br>
            Account does not exist: $subAccountId.
    patch:
      summary: Update settings
      description: |-
        Update the settings of a sub account that is under a master account.<br> To update the settings of the master account, use `me` as the value of the `accountId` path parameter.<br><br>
        **Prerequisites**:
         * The sub account must be a paid account.<br>
        **Scopes**: `account:write:admin`
        <br>
        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      tags:
        - Accounts
      operationId: accountSettingsUpdate
      parameters:
        - $ref: '#/parameters/AccountId'
        - in: body
          name: body
          required: true
          schema:
            oneOf:
              - $ref: '#/definitions/AccountUpdateSettings'
              - $ref: '#/definitions/AccountSettingsAuthenticationUpdate'
              - $ref: '#/definitions/MeetingSecuritySettings'
          x-examples:
            application/json:
              schedule_meeting:
                host_video: boolean
                participant_video: boolean
                audio_type: string
                join_before_host: boolean
                enforce_login: boolean
                enforce_login_with_domains: boolean
                enforce_login_domains: string
                not_store_meeting_topic: boolean
                force_pmi_jbh_password: boolean
                require_password_for_scheduling_new_meetings: boolean
                require_password_for_scheduled_meetings: boolean
                require_password_for_instant_meetings: boolean
                require_password_for_pmi_meetings: string
                use_pmi_for_scheduled_meetings: boolean
                use_pmi_for_instant_meetings: boolean
              in_meeting:
                e2e_encryption: boolean
                chat: boolean
                private_chat: boolean
                auto_saving_chat: boolean
                feedback: boolean
                post_meeting_feedback: boolean
                co_host: boolean
                polling: boolean
                attendee_on_hold: boolean
                show_meeting_control_toolbar: boolean
                allow_show_zoom_windows: boolean
                annotation: boolean
                whiteboard: boolean
                webinar_question_answer: boolean
                anonymous_question_answer: boolean
                breakout_room: boolean
                closed_caption: boolean
                far_end_camera_control: boolean
                group_hd: boolean
                virtual_background: boolean
                watermark: boolean
                alert_guest_join: boolean
                auto_answer: boolean
                p2p_connetion: boolean
                p2p_ports: boolean
                ports_range: string
                sending_default_email_invites: boolean
                use_html_format_email: boolean
                dscp_marking: boolean
                dscp_audio: integer
                dscp_video: integer
                stereo_audio: boolean
                original_audio: boolean
                screen_sharing: boolean
                remote_control: boolean
              email_notification:
                cloud_recording_avaliable_reminder: boolean
                jbh_reminder: boolean
                cancel_meeting_reminder: boolean
                low_host_count_reminder: boolean
                alternative_host_reminder: boolean
              zoom_rooms:
                upcoming_meeting_alert: boolean
                start_airplay_manually: boolean
                weekly_system_restart: boolean
                list_meetings_with_calendar: boolean
                zr_post_meeting_feedback: boolean
                ultrasonic: boolean
                force_private_meeting: boolean
                hide_host_information: boolean
                cmr_for_instant_meeting: boolean
                auto_start_stop_scheduled_meetings: boolean
              security:
                admin_change_name_pic: boolean
                import_photos_from_devices: boolean
                hide_billing_info: boolean
              recording:
                local_recording: boolean
                cloud_recording: boolean
                record_speaker_view: boolean
                record_gallery_view: boolean
                record_audio_file: boolean
                save_chat_text: boolean
                show_timestamp: boolean
                recording_audio_transcript: boolean
                auto_recording: string
                cloud_recording_download: boolean
                cloud_recording_download_host: boolean
                account_user_access_recording: boolean
                auto_delete_cmr: boolean
                auto_delete_cmr_days: integer
              telephony:
                third_party_audio: boolean
                audio_conference_info: string
              tsp:
                call_out: boolean
                call_out_countries:
                  - string
                show_international_numbers_link: boolean
                display_toll_free_numbers: boolean
              integration:
                google_calendar: boolean
                google_drive: boolean
                dropbox: boolean
                box: boolean
                microsoft_one_drive: boolean
                kubi: boolean
              feature:
                meeting_capacity: integer
        - in: query
          name: option
          type: string
          enum:
            - meeting_authentication
            - recording_authentication
            - security
            - meeting_security
          allowEmptyValue: true
      responses:
        '200':
          description: '**Error Code:** `200`<br> Only available for Paid account.'
        '204':
          description: '**HTTP Status Code:** `204` <br>Account settings updated.'
          examples: {}
        '300':
          description: '**Error Code:** `300` <br>The domains provided are invalid. If you are providing multiple domains, separate each domain with a comma.'
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            **Error Code:** `2001`<br>Account does not exist: $subAccountId.
  '/accounts/{accountId}/managed_domains':
    get:
      summary: Get managed domains
      description: |+
        Get a sub account's [managed domains](https://support.zoom.us/hc/en-us/articles/203395207-What-is-Managed-Domain-).<br><br>

        **Note:** This API can be used by Zoom Accounts that are on a Pro or a higher plan as well accounts that have master and sub accounts options enabled. <br><br>
        To get managed domains of the master account, provide `me` as the value for accountId in the path parameter. Provide the sub account's Account ID as the value of accountId path parameter to get managed domains of the sub account.<br><br>
        **Prerequisites:**<br>
        * Pro or a higher paid account with master account option enabled. <br>

        **Scope:** `account:read:admin`<br>
        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>



      tags:
        - Accounts
      operationId: accountManagedDomain
      parameters:
        - in: path
          name: accountId
          type: string
          required: true
          description: 'Unique Identifier of the account. To retrieve locked settings of the master account or a regular account, provide "me" as the value of this field. <br> To retrieve locked settings of a sub account, provide the Account ID of the sub account in this field.'
      responses:
        '200':
          description: |+
            **HTTP Status Code:** `200`<br>
            Account managed domains returned.
            **Error Code:** `200`<br>
            Only available for paid account.

          schema:
            $ref: '#/definitions/DomainsList'
        '404':
          description: |
            **HTTP Status Code:** `404`<br>
            **Error Code**: `2001`<br>
            Account does not exist: $subAccountId.
      security:
        - OAuth: []
  '/accounts/{accountId}/trusted_domains':
    get:
      summary: Get trusted domains
      description: |-
        Get trusted domains of a sub account. To get the trusted domains of a master account, use `me` as the value for the `accountId` path parameter.

        **Prerequisites:**<br>
        * The sub account must be a paid account.<br>
        **Scope:** `account:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      tags:
        - Accounts
      operationId: accountTrustedDomain
      parameters:
        - $ref: '#/parameters/AccountId'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Account trusted domains returned<br>
            **Error Code:** `2001`<br> Account does not exist: $subAccountId.
          schema:
            properties:
              trusted_domains:
                type: array
                description: List of trusted domains
                items:
                  type: string
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            **Error Code:** `2001`<br> Account does not exist: $subAccountId.
  '/accounts/{accountId}/billing':
    get:
      summary: Get billing information
      description: |+
        Get [billing information](https://support.zoom.us/hc/en-us/articles/201363263-About-Billing) of a sub account.<br><br>Only master accounts can use this API. Zoom allows only [approved partners](https://marketplace.zoom.us/docs/api-reference/master-account-apis) to use master APIs and manage sub accounts' billing information. Email the partner programs team at **partner-success@zoom.us** for more details.<br>

        **Prerequisites:**
        * Pro or a higher paid account with master account option enabled. <br>

        **Scope**:`billing:master`<br>
        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>

      tags:
        - Billing
      operationId: accountBilling
      parameters:
        - $ref: '#/parameters/AccountId'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Account billing contact information returned.
          schema:
            $ref: '#/definitions/BillingContactRequired'
          examples:
            application/json:
              first_name: string
              last_name: string
              email: string
              phone_number: string
              address: string
              apt: string
              city: string
              state: string
              zip: string
              country: string
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>
            **Error Code:** `2100`<br>
            This sub account is on self pay mode.
        '404':
          description: |+
            **HTTP Status Code:** `404`<br>
            **Error Code:** `2001`<br>
            Account does not exist: {subAccountId}.


    patch:
      summary: Update billing information
      description: |+
        Update [billing information](https://support.zoom.us/hc/en-us/articles/201363263-About-Billing) of a sub account.<br><br>
        This API can only be used by master accounts that pay all billiing charges of their associated sub accounts. Zoom allows only [approved partners](https://marketplace.zoom.us/docs/api-reference/master-account-apis) to use master APIs and manage sub accounts' billing information. Email the partner programs team at **partner-success@zoom.us** for more details.<br><br>

        **Prerequisites:**
        * Pro or a higher paid account with master account option enabled. <br>

        **Scope**:`billing:master`<br>
        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>

      tags:
        - Billing
      operationId: accountBillingUpdate
      parameters:
        - $ref: '#/parameters/AccountId'
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/BillingContact'
          x-examples:
            application/json:
              first_name: string
              last_name: string
              email: string
              phone_number: string
              address: string
              apt: string
              city: string
              state: string
              zip: string
              country: string
      responses:
        '200':
          description: |-
            **Error Code:** `200`<br>
            Please subscribe a plan for this sub account first.
        '204':
          description: |-
            **HTTP Status Code:** `204`<br>
            Account billing contact information updated.
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>
            **Error Code:** `2100`<br>
            This sub account is on self pay mode.<br>
            Invalid country parameter: {country}.<br>
            Invalid state parameter: {state}.
        '404':
          description: |+
            **HTTP Status Code:** `404`<br>
            **Error Code:** `2001`<br>
            Account does not exist: {subAccountId}.



  '/accounts/{accountId}/plans':
    get:
      summary: Get plan Information
      description: |-
        Get plan information of a sub account that is managed by a master account. <br><br>This API can only be used by master accounts that pay all billiing charges of their associated Pro or higher sub accounts. Zoom allows only [approved partners](https://marketplace.zoom.us/docs/api-reference/master-account-apis) to use master APIs and manage sub accounts' billing information. Email the partner programs team at **partner-success@zoom.us** for more details.<br><br>
        **Scopes:** `billing:master`<br>
        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>



      tags:
        - Billing
      operationId: accountPlans
      parameters:
        - $ref: '#/parameters/AccountId'
      responses:
        '200':
          description: |
            **HTTP Status Code:**`200`<br>
            Account's plans returned.
          schema:
            type: object
            properties:
              plan_base:
                type: object
                properties:
                  type:
                    type: string
                    description: 'Account base <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans">plan type.</a>'
                  hosts:
                    type: integer
                    description: Account base plan number of hosts. For a Pro Plan please select a value between 1 and 9. For a Business Plan please select a value between 10 and 49. For a Education Plan please select a value between 20 and 149. For a Free Trial Plan please select a value between 1 and 9999.
                  service_effective_date:
                    type: string
                    description: Date at which the plan became effective on the account.
                  next_invoice_date:
                    type: string
                    description: Next invoice date for the plan.
                  status:
                    type: string
                    description: Status of the plan.
                    enum:
                      - active
                      - cancel
                      - expired
              plan_zoom_rooms:
                type: object
                properties:
                  type:
                    type: string
                    description: 'Account <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans">plan type.</a>'
                  hosts:
                    type: integer
                    description: Account plan number of hosts.
                  service_effective_date:
                    type: string
                    description: Date at which the plan became effective on the account.
                  next_invoice_date:
                    type: string
                    description: Next invoice date for the plan.
                  status:
                    type: string
                    description: Status of the plan.
                    enum:
                      - active
                      - cancel
                      - expired
              plan_room_connector:
                type: object
                properties:
                  type:
                    type: string
                    description: 'Account <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans">plan type.</a>'
                  hosts:
                    type: integer
                    description: Account plan number of hosts.
                  service_effective_date:
                    type: string
                    description: Date at which the plan became effective on the account.
                  next_invoice_date:
                    type: string
                    description: Next invoice date for the plan.
                  status:
                    type: string
                    description: Status of the plan.
                    enum:
                      - active
                      - cancel
                      - expired
              plan_large_meeting:
                type: array
                items:
                  type: object
                  description: Account plan object.
                  properties:
                    type:
                      type: string
                      description: 'Account <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans">plan type.</a>'
                    hosts:
                      type: integer
                      description: Account plan number of hosts.
                    service_effective_date:
                      type: string
                      description: Date at which the plan became effective on the account.
                    next_invoice_date:
                      type: string
                      description: Next invoice date for the plan.
                    status:
                      type: string
                      description: Status of the plan.
                      enum:
                        - active
                        - cancel
                        - expired
              plan_webinar:
                type: array
                items:
                  type: object
                  description: Account plan object.
                  properties:
                    type:
                      type: string
                      description: 'Account <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans">plan type.</a>'
                    hosts:
                      type: integer
                      description: Account plan number of hosts.
                    service_effective_date:
                      type: string
                      description: Date at which the plan became effective on the account.
                    next_invoice_date:
                      type: string
                      description: Next invoice date for the plan.
                    status:
                      type: string
                      description: Status of the plan.
                      enum:
                        - active
                        - cancel
                        - expired
              plan_recording:
                type: string
                description: Additional Cloud Recording plan.
              plan_recording_service_effective_date:
                type: string
                description: Plan start date of Additional Cloud Recording plan.
              plan_recording_next_invoice_date:
                type: string
                description: Next invoice date of Additional Cloud Recording plan.
              plan_recording_status:
                type: string
                enum:
                  - Active
                  - Cancelled
                description: Status of additional Cloud Recording plan.
              plan_audio:
                type: object
                description: 'Additional audio conferencing <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans#audio-conferencing-plans">plan type.</a>'
                properties:
                  type:
                    type: string
                    description: Additional audio conferencing <a href="/api-reference/other-references/plans">plan type.</a>
                  tollfree_countries:
                    type: string
                    description: 'Toll-free countries: multiple values should separated by a comma. For a list of allowed values, refer to the "ID" field in the [Toll Free Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#toll-free-countries) table.'
                  premium_countries:
                    type: string
                    description: 'Premium countries: multiple values should be separated by commas. For a list of allowed values, refer to the "ID" field in the [Premium Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#premium-countries) table.'
                  callout_countries:
                    type: string
                    description: 'Call-out countries: multiple values should separated by  commas. For a list of allowed values, refer to the "ID" field in [this](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#tsp-call-out-countries) table.'
                  ddi_numbers:
                    type: integer
                    description: Dedicated dial-In numbers.
                  service_effective_date:
                    type: string
                    description: Date at which the plan became effective on the account.
                  next_invoice_date:
                    type: string
                    description: Next invoice date for the plan.
                  status:
                    type: string
                    description: Status of the plan.
                    enum:
                      - active
                      - cancel
                      - expired
              plan_phone:
                type: object
                title: PhonePlan
                description: Phone Plan Object
                properties:
                  plan_base:
                    type: object
                    description: Additional phone base plans.
                    properties:
                      type:
                        type: string
                        description: 'Additional phone base <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans">plan type.</a>'
                      callout_countries:
                        type: string
                        description: 'Call-out countries: multiple values should separated by  commas. For a list of allowed values, refer to the "ID" field in [this](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#tsp-call-out-countries) table.'
                      service_effective_date:
                        type: string
                        description: Date at which the plan became effective on the account.
                      next_invoice_date:
                        type: string
                        description: Next invoice date for the plan.
                      status:
                        type: string
                        description: Status of the plan.
                        enum:
                          - active
                          - cancel
                          - expired
                  plan_calling:
                    type: array
                    description: Additional phone calling plans.
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          description: 'Additional phone calling <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans">plan type.</a>'
                        hosts:
                          type: integer
                        service_effective_date:
                          type: string
                          description: Date at which the plan became effective on the account.
                        next_invoice_date:
                          type: string
                          description: Next invoice date for the plan.
                        status:
                          type: string
                          description: Status of the plan.
                          enum:
                            - active
                            - cancel
                            - expired
                  plan_number:
                    type: array
                    description: Additional phone number plans.
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          description: 'Additional phone number <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans">plan type.</a>'
                        hosts:
                          type: integer
                        service_effective_date:
                          type: string
                          description: Date at which the plan became effective on the account.
                        next_invoice_date:
                          type: string
                          description: Next invoice date for the plan.
                        status:
                          type: string
                          description: Status of the plan.
                          enum:
                            - active
                            - cancel
                            - expired
          examples:
            application/json:
              plan_base:
                type: string
                hosts: integer
              plan_zoom_rooms:
                type: string
                hosts: integer
              plan_room_connector:
                type: string
                hosts: integer
              plan_large_meeting:
                - type: string
                  hosts: integer
              plan_webinar:
                - type: string
                  hosts: integer
              plan_recording: string
              plan_audio:
                type: string
                tollfree_countries: string
                premium_countries: string
                callout_countries: string
                ddi_numbers: integer
              plan_phone:
                plan_base:
                  type: string
                  callout_countries: string
                plan_calling:
                  - type: string
                    hosts: integer
                plan_number:
                  - type: string
                    hosts: integer
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>
            **Error Code:** `2100`<br>
            This sub account is on self pay mode.
        '404':
          description: |-
            **HTTP Status Code:**`404`<br>
            Account does not exist: {subAccountId}.
    post:
      summary: Subscribe plans
      description: |-
        Subscribe a sub account to a Zoom plan using your master account. This API can only be used by master accounts that pay all billiing charges of their associated Pro or higher sub accounts. Zoom allows only [approved partners](https://marketplace.zoom.us/docs/api-reference/master-account-apis) to use master APIs and manage sub accounts' subscriptions. Email the partner programs team at **partner-success@zoom.us** for more details.<br><br>
        **Scopes**: `billing:master`<br>

      tags:
        - Billing
      operationId: accountPlanCreate
      parameters:
        - $ref: '#/parameters/AccountId'
        - in: body
          name: body
          required: true
          schema:
            allOf:
              - type: object
                properties:
                  contact:
                    $ref: '#/definitions/BillingContactRequired'
              - $ref: '#/definitions/AccountPlans'
          x-examples:
            application/json:
              contact:
                first_name: string
                last_name: string
                email: string
                phone_number: string
                address: string
                apt: string
                city: string
                state: string
                zip: string
                country: string
              plan_base:
                type: string
                hosts: integer
              plan_zoom_rooms:
                type: string
                hosts: integer
              plan_room_connector:
                type: string
                hosts: integer
              plan_large_meeting:
                - type: string
                  hosts: integer
              plan_webinar:
                - type: string
                  hosts: integer
              plan_recording: string
              plan_audio:
                type: string
                tollfree_countries: string
                premium_countries: string
                callout_countries: string
                ddi_numbers: integer
              plan_phone:
                plan_base:
                  type: string
                  callout_countries: string
                plan_calling:
                  - type: string
                    hosts: integer
                plan_number:
                  - type: string
                    hosts: integer
      responses:
        '200':
          description: |-
            **Error Code:** `200`<br>
            One zuora account only can have one active billing subscription.<br>
            Can’t subscribe 25-participants pro plan for this sub-account.<br>
            Can’t subscribe 50-participants pro plan for this sub-account.<br>
            In order to take advantage of your account’s special pricing, please add Pro host licenses instead and they will be assigned to your Zoom Rooms automatically.
          schema: {}
        '201':
          description: |-
            **HTTP Status Code:**`201`<br>
            Account plans updated.
          schema:
            $ref: '#/definitions/AccountPlans'
          examples:
            application/json:
              plan_base:
                type: string
                hosts: integer
              plan_zoom_rooms:
                type: string
                hosts: integer
              plan_room_connector:
                type: string
                hosts: integer
              plan_large_meeting:
                - type: string
                  hosts: integer
              plan_webinar:
                - type: string
                  hosts: integer
              plan_recording: string
              plan_audio:
                type: string
                tollfree_countries: string
                premium_countries: string
                callout_countries: string
                ddi_numbers: integer
        '300':
          description: "**Error Code**: `300`<br>Account can’t buy this plan.<br>\nBuy hosts must equal or larger than {minBuyHost}.<br>\nBuy hosts must equal or smaller than {maxBuyHost}.<br>\nBuy hosts must equal or smaller than 9999.<br>\nActive hosts must be equal or larger than buy hosts.<br>\nBuy hosts/active hosts must be equal or larger than {MinActiveHost}.<br>\nThis bundle plan doesn’t support active host.<br>\nInvalid free trial end date time.<br>\nInvalid free trial start/end time.<br>\nToo long trial duration.\n\t"
        '400':
          description: |+
            **HTTP Status Code:** `400`<br> **Error Code:** `2100`<br> Invalid parameter: first_name<br>
            Invalid parameter: last_name<br>Invalid parameter: email<br>Invalid parameter: country<br>Invalid parameter: address
            Invalid parameter: city<br>Invalid parameter: phone_number<br>Invalid parameter: state<br>Invalid parameter: zip<br>Invalid country parameter: {country}<br>Invalid state parameter: {state}<br>Invalid field: plan_bundle<br>Can’t subscribe to base plan and bundle plan at the same time.<br>Cannot add plan for a sub account which is paid by self.<br>Cannot enable free trial again for sub account.<br>You cannot add a sub account because your master account owner prevented you from adding one.<br>
            Cannot add plan for Sub account which is not free plan.<br>Error getting bundle.<br>Cannot process account.<br>Invalid host number.<br>Account doesn’t have the permission to purchase this plan.<br>There was a conflict in processing this request. Zoom Room plan {planCode} is already included in the bundle plan.<br>There was a conflict in processing this request. Room Connector plan {planCode} is already included in the bundle plan.<br>There was a conflict in processing this request. Large meeting plan {planCode} is already included in bundle plan.<br>There was a conflict in processing this request. Webinar plan {planCode} is already included in the bundle plan.<br>Recording plan {planCode} conflict with bundle plan.<br>Invalid Cloud Recording Plan: {plan_recording}
            Audio conferencing plan {planCode} conflict with bundle plan.<br>Invalid Audio Conferencing Plan: {planCode}<br>At least one option from among the Toll-free, Premium and Call-out must be provided.<br>Failed to add zuora plans<br>Invalid Base Plan: {subAccountId}


        '404':
          description: |+
            **HTTP Status Code:** `404`<br> **Error Code:** `1001`<br> User does not exist.<br>
            **Error Code:** `2001`<br> Account does not exist: {subAccountId}.<br>

  '/accounts/{accountId}/plans/base':
    put:
      summary: Update a base plan
      description: |-
        Update a base plan of a sub account.

        This API can only be used by master accounts that pay all billiing charges of their associated Pro or higher sub accounts. Zoom allows only [approved partners](https://marketplace.zoom.us/docs/api-reference/master-account-apis) to use master APIs and manage sub accounts' subscriptions. Email the partner programs team at **partner-success@zoom.us** for more details.<br><br>
        **Scopes:** `billing:master`<br><br>
        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>
        **Prerequisites:**<br>
        * The sub account must have a Pro or a higher plan.

      tags:
        - Billing
      operationId: accountPlanBaseUpdate
      parameters:
        - $ref: '#/parameters/AccountId'
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AccountPlanBaseRequired'
          x-examples:
            application/json:
              type: string
              hosts: integer
      responses:
        '200':
          description: |+
            **Error Code:** `200`
            Free trial and VIP account can't update sub plan.<br>
            You do not have a subscription yet.<br>

        '204':
          description: |-
            **HTTPS Status Code:** `204`<br>
            Base plan updated.
          examples: {}
        '300':
          description: |
            **Error Code:** `300`<br>
            Insufficient number of hosts for business plan type.<br>
            Insufficient number of hosts for education plan type.<br>
            Plan types do not match, oldPlanType: {oldPlanType} newPlanType: {newPlanType}.<br>
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>
            **Error Code:** `2100`<br>
            This sub account is on self pay mode.<br>
            Cannot makes updates when account is subscribed to a bundle plan.<br>
            This account is not under a free trial plan.<br>
            The account currently has {0} paid users, you should change the user type to basic and reduce the number of paid users before performing this action.
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            **Error Code:** `1001`<br>
            User does not exist.
            **Error Code:** `2001`<br>
            Account does not exist: {subAccountId}.
  '/accounts/{accountId}/plans/addons':
    post:
      summary: Subscribe additional plan
      description: |+
        Subscribe a sub account to a Zoom addon plan. This API can only be used by master accounts that pay all billiing charges of their associated Pro or higher sub accounts. Zoom allows only [approved partners](https://marketplace.zoom.us/docs/api-reference/master-account-apis) to use master APIs and manage sub accounts' subscriptions. Email the partner programs team at **partner-success@zoom.us** for more details.<br><br>
        <br>**Prerequisites:**<br>
        * Pro or a higher plan with master account option enabled.
        * The sub account must be a paid account. The billing charges for the sub account must be paid by its master account.<br><br>

        **Scopes**: `billing:master`<br>
        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>

      tags:
        - Billing
      operationId: accountPlanAddonCreate
      parameters:
        - $ref: '#/parameters/AccountId'
        - in: body
          name: body
          required: true
          schema:
            oneOf:
              - $ref: '#/definitions/AccountPlanRequired'
              - type: object
                properties:
                  type:
                    type: string
                    description: Zoom Phone Plan `plan_phone`
                  plan_details:
                    $ref: '#/definitions/PhonePlan'
                description: Zoom Phone Plan Object
                required:
                  - type
                  - plan_details
          x-examples:
            application/json:
              type: string
              hosts: integer
      responses:
        '201':
          description: Account plans updated.
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>
            **Error Code:** `2100`<br>
            This sub account is on self pay mode.<br>
            Cannot update Additional plan for a sub account under free plan.<br>
            Additional Zoom Rooms plan cannot be added to a sub account that already has a Zoom Rooms base plan.<br>
            This sub account already has the additional plan: {planCode}.
        '404':
          description: |
            **HTTP Status Code:** `404`<br>
            **Error Code:** `1001`<br>
            User does not exist.<br>
            **Error Code:** `2001`<br>
            Account does not exist: {subAccountId}.
    put:
      summary: Update an additional plan
      description: |-
        Update an additional plan for a sub account.

        This API can only be used by master accounts that pay all billiing charges of their associated Pro or higher sub accounts. Zoom allows only [approved partners](https://marketplace.zoom.us/docs/api-reference/master-account-apis) to use master APIs and manage sub accounts' subscriptions. Email the partner programs team at **partner-success@zoom.us** for more details.<br><br>
        <br>**Prerequisites:**<br>
        * Pro or a higher plan with master account enabled.
        * The sub account must be a paid account. The billing charges for the sub account must be paid by the master account.<br><br>

        **Scopes**: `billing:master`<br>
        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>



      tags:
        - Billing
      operationId: accountPlanAddonUpdate
      parameters:
        - $ref: '#/parameters/AccountId'
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AccountPlanRequired'
          x-examples:
            application/json:
              type: string
              hosts: integer
      responses:
        '200':
          description: |
            **Error Code:** `200`<br>
            Free trial and VIP accounts can't update sub plans.<br>
            You don’t have subscription for ({oldPlanCode}) yet.
        '204':
          description: |-
            **HTTP Status Code:** `204`<br>
            Additional plan updated for the account.
        '300':
          description: |-
            **Error Code:** `300`<br>
            Plan types do not match, oldPlanType: {oldPlanType} newPlanType: {newPlanType}.
        '400':
          description: |
            **HTTP Status Code:** `400`<br>
            **Error Code:** `2100`
            <br>This sub account is on self pay mode.
            <br>Invalid Additional Plan Type: {newPlanCode}.
            <br>Cannot update Additional plan for a sub account under free plan.
            <br>Invalid plan type.
            <br>Account can’t buy this product.
            <br>Can not subscribe/update additional Audio Conferencing Pay As You Go Plan for a sub account whose base plan is not Business/Education plan.<br>
            **Error Code:** `3261`<br>
            Failed to change sub plan of account:{accountId}.<br>
            Must subscribe to a major plan first.
        '404':
          description: |
            **HTTP Status Code:** `404`<br>
            **Error Code:** `2001`<br>
            Account does not exist: {subAccountId}.<br>
            **Error Code:** `3200`<br>
            Cannot find Zuora subscription for account:{subAccountId}.
  /groups:
    get:
      summary: List groups
      description: |-
        List [groups](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-) under an account.

        **Prerequisite**: Pro or higher account.<br>
        **Scopes**: `group:read:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      tags:
        - Groups
      parameters: []
      operationId: groups
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            List of groups returned.<br>
            **Error Code:** `200`
            Only available for paid accounts.
          schema:
            $ref: '#/definitions/GroupList'
          examples:
            application/json:
              total_records: 2
              groups:
                - id: hFK_GtF_e_TaVA808
                  name: ipsum
                  total_members: 10
                - id: TaVA8QKik_123
                  name: awesomegroup
                  total_members: 0
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            **Error Code:** `4130`<br> A group with this {groupId} does not exist.
      security:
        - OAuth: []
    post:
      summary: Create a group
      description: |-
        Create a [group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-) under an account.

        You can add a maximum of 100 groups in one account per day. If you go over, you will get an error. You can add a maximum of 5000 groups in one account.

        **Prerequisite**: Pro or higher account.<br>
        **Scopes**: `group:write:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      tags:
        - Groups
      operationId: groupCreate
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                description: Group name.
          x-examples:
            application/json:
              name: myawesomegroup
      responses:
        '200':
          description: |-
            **Error Code:** `200`<br>
            Only available for Paid account,{accountId}
        '201':
          description: |-
            **HTTP Status Code:** `201`<br>
            Group created.
          headers:
            Content-Location:
              description: Location of created group
              type: string
          schema:
            type: object
            properties:
              id:
                type: string
                description: Group ID.
              name:
                type: string
                description: Group name.
              total_members:
                type: integer
                description: Group member count.
          examples:
            application/json:
              id: string
              name: string
              total_members: integer
        '300':
          description: |-
            **Error Code:** `300`<br>
            Missing field: name.
        '404':
          description: |+
            **HTTP Status Code:** `404`<br>**Error Code:** `4130`<br>A group with this {groupId} does not exist.



        '409':
          description: '**HTTP Status Code:** `409`<br> **Error Code:** `4132`<br> Group name {groupName} is already in use.'
        '429':
          description: |-
            **HTTP Status Code:** `429`<br>
            You have exceeded the daily rate limit ({0}) of Create a Group API request for this account. This limit resets at GMT 00:00:00.
      security:
        - OAuth: []
  '/groups/{groupId}':
    get:
      summary: Get a group
      description: |-
        Get a [group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-) under an account.

        **Prerequisite**: Pro, Business, or Education account<br>
        **Scopes**: `group:read:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      tags:
        - Groups
      operationId: group
      parameters:
        - $ref: '#/parameters/GroupId'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br> Group returned.<br>
            **Error Code:** `200`<br>
            Only available for Paid account,{accountId}.
          schema:
            type: object
            properties:
              id:
                type: string
                description: Group ID.
              name:
                type: string
                description: Group name.
              total_members:
                type: integer
                description: Total count of members in the group.
          examples:
            application/json:
              id: chfhfhhfh_TKikJIX0
              name: My test group
              total_members: 0
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>
            **Error Code:** `1010`<br>
            Group does not belong to your account.
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            Group not found.<br>
            **Error Code:** `4130`<br> A group with this {groupId} does not exist.
      security:
        - OAuth: []
    patch:
      summary: Update a group
      description: |-
        Update a [group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-) under your account.

        **Prerequisite**: Pro, Business, or Education account<br>
        **Scopes**: `group:write:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      tags:
        - Groups
      operationId: groupUpdate
      parameters:
        - $ref: '#/parameters/GroupId'
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                description: Group name. It must be unique to one account and less than 128 characters.
          x-examples:
            application/json:
              name: amazinggroup
      responses:
        '200':
          description: 'The group does not belong to this account:{accountId}.'
        '204':
          description: Group updated.
        '404':
          description: |-
            **Status Code:** `404`<br>
            Not found.<br>
            **Error Code:** `4130`<br>
            A group with this {groupId} does not exist.
        '409':
          description: |-
            **Status Code:** `409`<br>
            Conflict<br>
            **Error Code:** `4132`<br>
            Group name {groupName} is already in use.
      security:
        - OAuth: []
    delete:
      summary: Delete a group
      description: |-
        Delete a [group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-).

        **Prerequisite**: Pro, Business, or Education account<br>
        **Scopes**: `group:write:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      tags:
        - Groups
      operationId: groupDelete
      parameters:
        - $ref: '#/parameters/GroupId'
      responses:
        '200':
          description: |-
            **Error Code:** `200`<br>
            Only available for Paid account,{accountId}.
        '204':
          description: |-
            **HTTP Status Code:** `204`<br>
            Group deleted.
        '300':
          description: |-
            **Error Code:** `300`<br>
            Group member not found.
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            Group not found.<br>
            **Error Code:** `4130`<br>
            A group with this {groupId} does not exist.
      security:
        - OAuth: []
  '/groups/{groupId}/members':
    get:
      summary: 'List group members '
      description: |-
        List the members of a [group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-) under your account.

        **Prerequisite**: Pro, Business, or Education account<br>
        **Scopes**: `group:read:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      tags:
        - Groups
      operationId: groupMembers
      parameters:
        - $ref: '#/parameters/GroupId'
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/PageNumber'
        - $ref: '#/parameters/NextPageToken'
      responses:
        '200':
          description: '**HTTP Status Code:** `200`<br> Only available for paid account,{accountId}.'
          schema:
            type: object
            properties:
              members:
                type: array
                items:
                  type: object
                  properties:
                    email:
                      type: string
                      description: User's email address.
                    first_name:
                      type: string
                      description: First name of the user.
                    id:
                      type: string
                      description: 'Unique Identifier of the user. '
                    last_name:
                      type: string
                      description: Last name of the user.
                    type:
                      type: integer
                      description: 'User type: <br> `1` - Basic<br> `2` - Licensed<br> `3` - On-prem'
              page_count:
                type: integer
                description: The number of pages returned from this request.
              page_number:
                type: integer
                description: The page number of the current results.
              page_size:
                type: integer
                description: The number of records returned from a single API call.
              total_records:
                type: integer
                description: The total number of records available across all pages.
              next_page_token:
                type: string
                description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
          examples:
            application/json:
              members:
                - email: ''
                  first_name: Ram
                  id: '3542342'
                  last_name: Ghale
                  type: 1
              page_count: 1
              page_number: 1
              page_size: 1
              total_records: 1
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            Not found.<br>
            **Error Code:** `4130`<br>
            A group with this {groupId} does not exist.
      security:
        - OAuth: []
    post:
      summary: Add group members
      description: |-
        Add members to a [group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-) under your account.

        **Prerequisite**: Pro, Business, or Education account<br>
        **Scopes**: `group:write:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      tags:
        - Groups
      operationId: groupMembersCreate
      parameters:
        - $ref: '#/parameters/GroupId'
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              members:
                type: array
                description: List of Group members
                maximum: 30
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: User ID.
                    email:
                      type: string
                      description: User email. If the user ID is given then the user email should be ignored.
          x-examples:
            application/json:
              members:
                - id: '36565387'
                  email: memberemail@somecompany.com
      responses:
        '200':
          description: 'Only available for paid account,{accountId}.'
        '201':
          description: Member added.
          schema:
            properties:
              ids:
                type: string
              added_at:
                type: string
                format: date-time
          examples:
            application/json:
              ids: string
              added_at: 'string [date-time]'
        '404':
          description: |-
            **Status Code:** `404`<br>
            Not found.<br>
            **Error Code:** `4130`<br>
            A group with this {groupId} does not exist.
  '/groups/{groupId}/members/{memberId}':
    delete:
      summary: Delete a group member
      description: |-
        Delete a member from a [group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-) in a Zoom account.

        **Prerequisite**: Pro, Business, or Education account<br>
        **Scopes**: `group:write:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      tags:
        - Groups
      operationId: groupMembersDelete
      parameters:
        - $ref: '#/parameters/GroupId'
        - $ref: '#/parameters/MemberId'
      responses:
        '200':
          description: 'Only available for paid account,{accountId}.'
        '204':
          description: Group member deleted.
        '400':
          description: |-
            **Status Code:** `400`<br>
            Bad request.<br>
            **Error Code:** `1010`<br>
            Group does not belong to this account:{accountId}.
        '404':
          description: |-
            **Status Code:** `404`<br>
            Not found.<br>
            **Error Code:** `4130`<br>
            A group with this {groupId} does not exist.
      security:
        - OAuth: []
    parameters:
      - name: groupId
        in: path
        type: string
        required: true
      - name: memberId
        in: path
        type: string
        required: true
    patch:
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` **No Content**<br>
            Group member updated.
          schema: {}
        '400':
          description: |+
            **HTTP Status Code:** `400` **Bad Request**<br>
            **Error Code:** `200`<br>
             Only available for Paid account, {accountId}.<br><br>
             **Error Code:** `300`<br>
             The target_group_id can not be empty.<br><br>
             **Error Code:** `1010`<br>
             Group does not belong to this account:{accountId}.


        '404':
          description: |-
            **HTTP Status Code:** `404` **Not Found**<br>
            **Error Code:** `4130`<br>
            A group with this {groupId} does not exist.
      summary: Update a group member
      description: |-
        If a user is a member in multiple groups, you can [set a primary group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-#h_d07c7dcd-4fd8-485a-b5fe-a322e8d21c09) for the user. The group member will use the primary group's settings by default. However, if settings are locked in other groups, those settings will continue to be locked for that user. By default, the primary group is the first group that user is added to.<br><br>
        Use this API to perform either of the following tasks:
        * Simultaneously remove a member from one group and move the member to a different group.
        * Set a primary group for the user<br><br>
        **Prerequisites:**
        * Pro or higher account<br> **Scopes:** `group:write:admin`

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      operationId: updateAGroupMember
      tags:
        - Groups
      security:
        - OAuth: []
      parameters:
        - in: path
          name: groupId
          type: string
          required: true
          description: 'Unique Identifier of the group. Can be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups) API.<br> To change a member''s primary group, provide the groupId of the member''s current primary group as the value of this field.<br> To remove a member from one group and move the member to another group, provide the groupId of the group from which the member is to be moved.'
        - in: path
          name: memberId
          type: string
          required: true
          description: 'Unique Identifier of the group member. Can be retrieved by calling the [List Group Members](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groupmembers) API.'
        - in: body
          name: body
          schema:
            type: object
            properties:
              action:
                type: string
                description: |
                  Specify the type of action to be performed:<br><br>
                  `move`: Simultaneously remove a member from one group and move the member to a different group.<br>
                  `set_primary`: Set a primary group for the user.
                enum:
                  - move
                  - set_primary
              target_group_id:
                type: string
                description: |-
                  Can be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups) API.<br>

                  To move a user, use this field to specify the groupId of the group where the member is to be moved.<br>

                  To set a primary group for the user, provide the groupId of the group which is going to be the primary group.
            required:
              - action
          x-examples:
            application/json:
              action: set_primary
              target_group_id: ifghhgt546pidatat
  /h323/devices:
    get:
      summary: List H.323/SIP devices
      description: |-
        A H.323 or SIP device can make a video call to a [Room Connector](https://support.zoom.us/hc/en-us/articles/201363273-Getting-Started-With-H-323-SIP-Room-Connector) to join a Zoom cloud meeting. A Room Connector can also call out to a H.323 or SIP device to join a Zoom cloud meeting. Use this API to list all H.323/SIP Devices on a Zoom account.<br><br>
        **Scopes:** `h323:read:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>
      tags:
        - Devices
      parameters:
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/PageNumber'
        - $ref: '#/parameters/NextPageToken'
      operationId: deviceList
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            List of H.323/SIP devices returned.<br>
            **Error Code:** `200`<br>
            No permission.
          schema:
            $ref: '#/definitions/DeviceList'
          examples:
            application/json:
              page_count: 1
              page_number: 1
              page_size: 1
              total_records: 1
              devices:
                - id: abceHewahkrehwiK
                  name: api_test_20190508
                  protocol: H.323
                  ip: 127.0.0.1
                  encryption: auto
      security:
        - OAuth: []
    post:
      summary: Create a H.323/SIP device
      description: |-
        A H.323 or SIP device can make a video call to a [Room Connector](https://support.zoom.us/hc/en-us/articles/201363273-Getting-Started-With-H-323-SIP-Room-Connector) to join a Zoom cloud meeting. A Room Connector can also call out to a H.323 or SIP device to join a Zoom cloud meeting. Use this API to add a H.323/SIP device to your Zoom account<br><br>
        **Scopes:** `h323:write:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` <br>
      tags:
        - Devices
      operationId: deviceCreate
      parameters:
        - in: body
          name: body
          required: true
          description: H.323/SIP device.
          schema:
            $ref: '#/definitions/Device'
          x-examples:
            application/json:
              name: api_test
              protocol: H.323
              ip: 127.0.0.1
              encryption: auto
      responses:
        '200':
          description: |-
            **Error Code:** `200`<br>
            No permission.
        '201':
          description: |-
            **HTTP Status Code:** `201`<br>
            H.323/SIP device created.
          headers:
            Content-Location:
              description: Location of created device
              type: string
          schema:
            allOf:
              - type: object
                properties:
                  id:
                    type: string
                    description: Device ID.
              - $ref: '#/definitions/Device'
          examples:
            application/json:
              id: string
              name: string
              protocol: string
              ip: string
              encryption: string
        '404':
          description: |
            **HTTP Status Code:** `404`<br>
            **Error Code:** `2020`<br>
            H.323 device's display name:{displayName} is already in use.
      security:
        - OAuth: []
  '/h323/devices/{deviceId}':
    patch:
      summary: Update a H.323/SIP device
      description: |-
        A H.323 or SIP device can make a video call to a [Room Connector](https://support.zoom.us/hc/en-us/articles/201363273-Getting-Started-With-H-323-SIP-Room-Connector) to join a Zoom cloud meeting. A Room Connector can also call out to a H.323 or SIP device to join a Zoom cloud meeting. Use this API to edit information of a H.323/SIP device from your Zoom account.<br><br>
        **Scopes:** `h323:write:admin`<br>
         <br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      tags:
        - Devices
      operationId: deviceUpdate
      parameters:
        - $ref: '#/parameters/DeviceId'
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Device'
          x-examples:
            application/json:
              name: MyCoolDevice
              protocol: H.323
              ip: 127.0.0.1
              encryption: auto
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`<br>
            H.323/SIP device updated.
          examples: {}
        '300':
          description: |-
            **Error Code:** `300`<br>
            H.323 Device does not exist: {deviceId}.
        '404':
          description: |
            **HTTP Status Code:** `404`<br>
            **Error Code:** `2020`<br>
            H.323 device's display name:{displayName} is already in use.
    delete:
      summary: Delete a H.323/SIP device
      description: |-
        A H.323 or SIP device can make a video call to a [Room Connector](https://support.zoom.us/hc/en-us/articles/201363273-Getting-Started-With-H-323-SIP-Room-Connector) to join a Zoom cloud meeting. A Room Connector can also call out to a H.323 or SIP device to join a Zoom cloud meeting. Use this API to delete a H.323/SIP device from your Zoom account.<br><br>
        **Scopes:** `h323:write:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>
      tags:
        - Devices
      operationId: deviceDelete
      parameters:
        - $ref: '#/parameters/DeviceId'
      responses:
        '200':
          description: You do not have the permission to delete this device.
        '204':
          description: H.323/SIP device deleted.
        '300':
          description: 'H.323 device does not exist: {deviceId}.'
        '404':
          description: H.323/SIP device not found.
  /tracking_fields:
    get:
      summary: List tracking fields
      description: |-
        [Tracking fields](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields) allow you to analyze usage by various fields within an organization.<br> Use this API to list all the tracking fields on your Zoom account.<br><br>
        **Scopes:** `trackingfield:read:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>
        **Prerequisites:**
        * Business, Education, API or higher plan
      tags:
        - TrackingField
      parameters: []
      operationId: trackingfieldList
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            List of Tracking Fields returned.
          schema:
            $ref: '#/definitions/TrackingFieldList'
          examples:
            application/json: |-
              {
                "total_records": 1,
                "tracking_fields": [
                {
                "id": "3746374637",
                "field": "Meeting Purpose",
                "required": true,
                "visible": false,
                "recommended_values": [
                  "Support",
                  "Onboarding",
                  "Sales",
                  "Other"
                ]
              }
              }
      security:
        - OAuth: []
    post:
      summary: Create a tracking field
      description: |-
        [Tracking fields](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields) allow you to analyze usage by various fields within an organization.<br> Use this API to create a new tracking field.<br><br>
        **Scope:** `trackingfield:write:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>
        **Prerequisites:**
        * Business, Education, API or higher plan
      tags:
        - TrackingField
      operationId: trackingfieldCreate
      parameters:
        - in: body
          name: body
          required: true
          description: Tracking Field
          schema:
            $ref: '#/definitions/TrackingField'
          x-examples:
            application/json:
              field: Meeting Purpose
              required: true
              visible: false
              recommended_values:
                - Support
                - Onboarding
                - Sales
                - Other
      responses:
        '201':
          description: |-
            **HTTP Status Code:** `201`<br>
            Tracking Field created
          headers:
            Content-Location:
              description: Location of created tracking field
              type: string
          schema:
            allOf:
              - properties:
                  id:
                    type: string
                    description: Tracking Field ID
              - $ref: '#/definitions/TrackingField'
      security:
        - OAuth: []
  '/tracking_fields/{fieldId}':
    get:
      summary: Get a tracking field
      description: |
        [Tracking fields](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields) allow you to analyze usage by various fields within an organization.<br><br> When scheduling a meeting, the tracking field will be included in the meeting options.<br>Use this API to get information on a tracking field.<br><br>
        **Scopes:** `trackingfield:read:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>
        **Prerequisites:**
        * Business, Education, API or higher plan
      tags:
        - TrackingField
      operationId: trackingfieldGet
      parameters:
        - in: path
          name: fieldId
          description: The Tracking Field ID
          type: string
          required: true
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Tracking Field object returned
          schema:
            allOf:
              - properties:
                  id:
                    type: string
                    description: Tracking Field ID
              - $ref: '#/definitions/TrackingField'
          examples:
            application/json:
              id: fdfgdfgr23gr1
              field: Meeting Purpose
              required: true
              visible: false
              recommended_values:
                - Support
                - Onboarding
                - Sales
                - Other
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            Tracking Field not found
      security:
        - OAuth: []
    patch:
      summary: Update a tracking field
      description: |-
        [Tracking fields](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields) allow you to analyze usage by various fields within an organization.<br> Use this API to update a tracking field.<br><br>
        **Scope:** `trackingfield:write:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>
        **Prerequisites:**
        * Business, Education, API or higher plan
      tags:
        - TrackingField
      operationId: trackingfieldUpdate
      parameters:
        - in: path
          name: fieldId
          description: The Tracking Field ID
          type: string
          required: true
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TrackingField'
          x-examples:
            application/json:
              field: Meeting Purpose
              required: true
              visible: false
              recommended_values:
                - Support
                - Onboarding
                - Sales
                - Other
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`<br>
            Tracking Field updated
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            Tracking Field not found
      security:
        - OAuth: []
    delete:
      summary: Delete a tracking field
      description: |-
        [Tracking fields](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields) allow you to analyze usage by various fields within an organization.<br> Use this API to delete a tracking field.<br><br>
        **Scope:** `trackingfield:write:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>
        **Prerequisites:**
        * Business, Education, API or higher plan
      tags:
        - TrackingField
      operationId: trackingfieldDelete
      parameters:
        - in: path
          name: fieldId
          description: The Tracking Field ID
          type: string
          required: true
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`<br>
            Tracking Field deleted
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            Tracking Field not found
      security:
        - OAuth: []
  /im/groups:
    get:
      summary: List IM directory groups
      description: |-
        List [IM directory groups](https://support.zoom.us/hc/en-us/articles/203749815-IM-Management).<br><br>
        **Scopes**: `imgroup:read:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      tags:
        - IM Groups
      operationId: imGroups
      parameters: []
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` <br>
            List of groups returned.
            **Error Code:** `200` <br>
            List of IM groups returned.<br>
            Only available for paid account:{accountId}.
          schema:
            $ref: '#/definitions/IMGroupList'
          examples:
            application/json:
              page_count: '1'
              page_number: '1'
              page_size: '1'
              total_records: '1'
              groups:
                - id: sjvfkjfew34535
                  name: MyAdminDirectoryGroup
                  total_members: '10'
                  type: shared
                  search_by_domain: 'true'
                  search_by_account: 'false'
                  search_by_ma_account: 'false'
        '404':
          description: |-
            **HTTP Status Code:** `404` <br>
            **Error Code:** `4130` <br>
            Group does not exist:{groupId}.
    post:
      summary: Create an IM directory group
      description: |-
        Create an [IM directory group](https://support.zoom.us/hc/en-us/articles/203749815-IM-Management) under your account.<br><br>
        **Scopes**: `imgroup:write:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      tags:
        - IM Groups
      operationId: imGroupCreate
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                description: 'Group name: must be unique to one account.'
                maxLength: 128
              type:
                type: string
                description: 'IM Group types:<br>`normal` - Only members can see automatically see the other members of this group. Other people can search for members within this group. <br>`shared` - Everyone under an account can see the group members automatically.<br>`restricted` - Nobody can see the group or search for members except the members in the group.'
                default: normal
                enum:
                  - normal
                  - shared
                  - restricted
                x-enum-descriptions:
                  - Only members can see the group automatically. Other people can search members in the group.
                  - All people in the account can see the group and members automatically
                  - Nobody can see the group or search members except the members in the group
              search_by_domain:
                type: boolean
                description: Members can search for others in the same email domain.
              search_by_account:
                type: boolean
                description: Members can search for others under same account.
              search_by_ma_account:
                type: boolean
                description: 'Members can search for others under same master account, including all sub accounts.'
          x-examples:
            application/json:
              name: MyAdminDirectoryGroup
              type: shared
              search_by_domain: 'true'
              search_by_account: 'false'
              search_by_ma_account: 'false'
      responses:
        '200':
          description: |-
            **Error Code:** `200` <br>
            Only available for paid account:{accountId}.
        '201':
          description: |-
            **HTTP Status Code:** `201`<br>
            IM Group created.
          headers:
            Content-Location:
              description: Location of created IM Group
              type: string
          schema:
            type: object
            properties:
              id:
                type: string
                description: Group ID.
              name:
                type: string
                description: Group name.
              total_members:
                type: integer
                description: Group member count.
              search_by_domain:
                type: boolean
                description: Members can search for others in the same email domain.
              search_by_account:
                type: boolean
                description: Members can search for others under same account.
              search_by_ma_account:
                type: boolean
                description: 'Members can search for others under same master account, including all sub accounts.'
          examples:
            application/json: {}
            new:
              id: string
              name: string
              total_members: integer
              search_by_domain: boolean
              search_by_account: boolean
              search_by_ma_account: boolean
        '404':
          description: |-
            **HTTP Status Code:** `404` <br>
            **Error Code:** `4130` <br>
            Group does not exist:{groupId}.
        '409':
          description: |-
            **HTTP Status Code:** `409` <br>
            **Error Code:** `4132` <br>
            Group name {groupName} is already in use.
  '/im/groups/{groupId}':
    get:
      summary: Retrieve an IM directory group
      description: |-
        Retrieve an [IM directory group](https://support.zoom.us/hc/en-us/articles/203749815-IM-Management) under your account.<br><br>
        Scopes: `imgroup:read:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      tags:
        - IM Groups
      operationId: imGroup
      parameters:
        - $ref: '#/parameters/GroupId'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` <br>
            IM group object returned.<br>
            **Error Code:** `200` <br>
            Only available for paid account:{accountId}.
          schema:
            allOf:
              - type: object
                properties:
                  id:
                    type: string
                    description: Group ID.
              - $ref: '#/definitions/IMGroup'
          examples:
            application/json:
              id: string
              name: string
              total_members: integer
              type: string
              search_by_domain: boolean
              search_by_account: boolean
              search_by_ma_account: boolean
        '300':
          description: |-
            **Error Code:** `300` <br>
            Missing field: name.
        '404':
          description: |-
            **HTTP Status Code:** <br>
            IM Group not found.<br>
            **Error Code:** `4130` <br>
            Group does not exist:{groupId}.
    patch:
      summary: Update an IM directory group
      description: |-
        Update an [IM directory group](https://support.zoom.us/hc/en-us/articles/203749815-IM-Management) under your account.<br><br>
        **Scopes**: `imgroup:write:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      tags:
        - IM Groups
      operationId: imGroupUpdate
      parameters:
        - $ref: '#/parameters/GroupId'
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                description: 'Group name: must be unique to one account.'
                maxLength: 128
              type:
                type: string
                description: 'IM Group types:<br>`normal` - Only group members can automatically see others in their group. Other people can search for members in the group.<br>`shared` - Everyone under the account can see the group and members automatically.<br>`restricted` - Nobody can see the group or search for members except for the members in the group.'
                enum:
                  - normal
                  - shared
                  - restricted
                x-enum-descriptions:
                  - Only members can see the group automatically. Other people can search members in the group.
                  - All people in the account can see the group and members automatically
                  - Nobody can see the group or search members except the members in the group
              search_by_domain:
                type: boolean
                description: Members can search for others in the same email domain.
              search_by_account:
                type: boolean
                description: Members can search for others under same account.
              search_by_ma_account:
                type: boolean
                description: 'Members can search for others under same master account, including all sub accounts.'
          x-examples:
            application/json:
              name: string
              type: string
              search_by_domain: boolean
              search_by_account: boolean
              search_by_ma_account: boolean
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` <br>
            IM group updated.
          examples: {}
        '300':
          description: |-
            **Error Code:** `300` <br>
            Missing field: name
        '404':
          description: |-
            **HTTP Status Code:** `404` <br>
            IM Group not found.
            **Error Code:** `4130`<br>
            Group does not exist:{groupId}.
    delete:
      summary: Delete an IM directory group
      description: |-
        Delete an [IM directory group](https://support.zoom.us/hc/en-us/articles/203749815-IM-Management) under your account.<br><br>
        Scopes: `imgroup:write:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      tags:
        - IM Groups
      operationId: imGroupDelete
      parameters:
        - $ref: '#/parameters/GroupId'
      responses:
        '204':
          description: |+
            **HTTP Status Code:** `204` <br>
            IM group deleted.

          examples: {}
        '300':
          description: |-
            **Error Code:** `300` <br>
            Missing field: name.
        '404':
          description: |-
            **HTTP Status Code:** `404` <br>
            IM Group not found.
            **Error Code:** `4130` <br>
            Group does not exist:{groupId}.
  '/im/groups/{groupId}/members':
    get:
      summary: List IM directory group members
      description: |-
        List the members of an [IM directory group](https://support.zoom.us/hc/en-us/articles/203749815-IM-Management).<br><br>
        **Scope:** `imgroup:read:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      tags:
        - IM Groups
      operationId: imGroupMembers
      parameters:
        - $ref: '#/parameters/GroupId'
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/PageNumber'
        - $ref: '#/parameters/NextPageToken'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` <br>
            IM group member list returned.<br>
            **Error Code:** `200` <br>
            Only available for paid account:{accountId}.
          schema:
            $ref: '#/definitions/GroupMemberList'
          examples:
            application/json:
              page_count: '1'
              page_number: '1'
              page_size: '1'
              total_records: '1'
              members:
                - id: dlfjdhq3430394
                  email: fidsgkrdjksagf@someemail.dsfjksdh
                  first_name: Rahul
                  last_name: Ghimire
                  type: '2'
        '300':
          description: |-
            **Error Code:** `300` <br>
            Missing field: name.
        '404':
          description: |-
            **HTTP Status Code:** `404` <br>
            IM Group not found.
      security:
        - OAuth: []
    post:
      summary: Add IM directory group members
      description: |-
        Add members to an [IM directory group](https://support.zoom.us/hc/en-us/articles/203749815-IM-Management) under an account.<br><br>
        **Scope:** `imgroup:write:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      tags:
        - IM Groups
      operationId: imGroupMembersCreate
      parameters:
        - $ref: '#/parameters/GroupId'
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              members:
                type: array
                description: List of IM group members.
                maximum: 10
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: User ID.
                    email:
                      type: string
                      description: 'User email. If the user ID is given then ignore the user email. '
          x-examples:
            application/json: |-
              {
                "members": [
                  {
                    "id": "dlfjdhq3430jh394",
                    "email": "fidsgkrcbdjksagf@someemail.dsfjksdh",
                  }
                ]
              }
      responses:
        '200':
          description: |-
            **Error Code:** `200` <br>
            Only available for paid account:{accountId}.
        '201':
          description: |-
            **HTTP Status Code:** `201` <br>
            Member added.
          schema:
            properties:
              ids:
                type: string
              added_at:
                type: string
                format: date-time
          examples:
            application/json:
              ids: string
              added_at: 'string [date-time]'
        '300':
          description: |-
            **Error Code:** `300` <br>
            Missing field: name.
        '404':
          description: |-
            **HTTP Status Code:** `404` <br>
            IM Group not found
      security:
        - OAuth: []
  '/im/groups/{groupId}/members/{memberId}':
    delete:
      summary: Delete an IM directory group member
      description: |-
        Delete a member from an [IM directory group](https://support.zoom.us/hc/en-us/articles/203749815-IM-Management) under an account.<br><br>
        Scopes: `imgroup:write:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      tags:
        - IM Groups
      operationId: imGroupMembersDelete
      parameters:
        - $ref: '#/parameters/GroupId'
        - $ref: '#/parameters/MemberId'
      responses:
        '200':
          description: |-
            **Error Code:** `200` <br>
            Only available for paid account, {accountId}.
        '204':
          description: |-
            **HTTP Status Code:** `204` <br>
            IM group member deleted.
        '300':
          description: |-
            **Error Code:** `300` <br>
            Missing field: name.<br>
            Can not delete account from default group:{groupId}.
        '404':
          description: |-
            **HTTP Status Code:** `404` <br>
            IM Group or IM Group member not found.<br>
            **Error Code:** `4130` <br>
            Group does not exist:{groupId}.
      security:
        - OAuth: []
  /im/chat/sessions:
    get:
      summary: Get IM chat sessions
      description: |-
        Retrieve IM Chat sessions for a specified period of time. <aside>Note: This API only supports Oauth2.</aside><br>

        **Scopes:** `imchat:read, imchat:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`

         Please see our [announcements page related to this deprecation](https://marketplace.zoom.us/docs/guides/stay-up-to-date/announcements#im-api-notice).
      tags:
        - IM Chat
      operationId: imChatSessions
      parameters:
        - $ref: '#/parameters/FromDate'
        - $ref: '#/parameters/ToDate'
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/NextPageToken'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` <br>
            Archived IM chat sessions returned.
          schema:
            allOf:
              - type: object
                properties:
                  from:
                    type: string
                    format: date
                    description: Start date.
                  to:
                    type: string
                    format: date
                    description: End date.
              - $ref: '#/definitions/PaginationToken4IMChat'
              - type: object
                properties:
                  sessions:
                    type: array
                    description: Array of session objects.
                    items:
                      type: object
                      properties:
                        session_id:
                          type: string
                          description: IM chat session ID.
                        type:
                          type: string
                          description: IM chat session type.
                          enum:
                            - Group
                            - '1:1'
                        name:
                          type: string
                          description: Meeting topic.
                        last_message_sent_time:
                          type: string
                          format: date-time
                          description: Last message sent time.
          examples:
            application/json:
              from: '2019-08-31'
              to: '2019-09-12'
              page_size: 30
              next_page_token: vsdfjesfdhs
              sessions:
                - session_id: dkhfgjd
                  type: Group
                  name: API overview meeting
                  last_message_sent_time: '2016-12-16T05:04:08.470Z'
        '300':
          description: |-
            **Error Code:** `300` <br>
            The next page token is invalid or expired. <br>
            Report requested exceeds 6 month limit.
      security:
        - OAuth: []
      deprecated: true
  '/im/chat/sessions/{sessionId}':
    get:
      summary: Get IM chat messages
      description: |+
        Retrieve IM chat messages for a specified period of time. <aside>Note: This API only supports oauth2.</aside><br><br>

        **Scopes:** `imchat:read`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>

        Please see our [announcements page related to this deprecation](https://marketplace.zoom.us/docs/guides/stay-up-to-date/announcements#im-api-notice).


      tags:
        - IM Chat
      operationId: imChatMessages
      parameters:
        - $ref: '#/parameters/SessionId'
        - $ref: '#/parameters/FromDate'
        - $ref: '#/parameters/ToDate'
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/NextPageToken'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` <br>
            Archived IM chat messages returned.
          schema:
            allOf:
              - type: object
                properties:
                  session_id:
                    type: string
                    description: IM chat session ID.
                  from:
                    type: string
                    format: date
                    description: Start date.
                  to:
                    type: string
                    format: date
                    description: End date.
              - $ref: '#/definitions/PaginationToken4IMChat'
              - type: object
                properties:
                  messages:
                    type: array
                    description: Array of session objects.
                    items:
                      type: object
                      properties:
                        message:
                          type: string
                          description: IM chat message content.
                        sender:
                          type: string
                          description: IM chat message sender.
                        date_time:
                          type: string
                          format: date-time
                          description: IM chat message sent time.
                        action:
                          type: string
                          description: IM chat message action.
                        action_time:
                          type: string
                          format: date-time
                          description: Action time.
          examples:
            application/json:
              session_id: string
              from: 'string [date]'
              to: 'string [date]'
              page_size: integer
              next_page_token: string
              messages:
                - message: string
                  sender: string
                  date_time: 'string [date-time]'
                  action: string
                  action_time: 'string [date-time]'
        '300':
          description: |-
            **Error Code:**`300` <br>
            The next page token is either invalid or has expired.<br>
            Report requested exceeds 6 month limit.
      deprecated: true
  '/users/{userId}/meetings':
    get:
      summary: List meetings
      description: |-
        List all the meetings that were scheduled for a user (meeting host). This API only supports scheduled meetings and thus, details on instant meetings are not returned via this API.<br><br>
        **Scopes:** `meeting:read:admin` `meeting:read`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      tags:
        - Meetings
      operationId: meetings
      parameters:
        - $ref: '#/parameters/UserId'
        - $ref: '#/parameters/MeetingType'
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/NextPageToken'
        - in: query
          name: page_number
          type: string
          description: The page number of the current page in the returned records.
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            List of meeting objects returned.
          schema:
            title: Group List
            description: List of meetings.
            allOf:
              - description: Pagination Object.
                properties:
                  page_count:
                    type: integer
                    description: The number of pages returned for the request made.
                  page_number:
                    type: integer
                    description: The page number of the current results.
                    default: 1
                  page_size:
                    type: integer
                    description: The number of records returned with a single API call.
                    default: 30
                    maximum: 300
                  total_records:
                    type: integer
                    description: The total number of all the records available across pages.
                  next_page_token:
                    type: string
                    description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
              - properties:
                  meetings:
                    type: array
                    description: List of Meeting objects.
                    items:
                      allOf:
                        - properties:
                            uuid:
                              type: string
                              description: Unique Meeting ID. Each meeting instance will generate its own Meeting UUID.
                            id:
                              type: integer
                              description: Meeting ID - also known as the meeting number in long (int64) format.
                              format: int64
                            host_id:
                              type: string
                              description: ID of the user who is set as the host of the meeting.
                            topic:
                              type: string
                              description: Meeting topic.
                            type:
                              type: integer
                              description: 'Meeting Types:<br>`1` - Instant meeting.<br>`2` - Scheduled meeting.<br>`3` - Recurring meeting with no fixed time.<br>`8` - Recurring meeting with fixed time.'
                              enum:
                                - 1
                                - 2
                                - 3
                                - 8
                              x-enum-descriptions:
                                - Instant Meeting
                                - Scheduled Meeting
                                - Recurring Meeting with no fixed time
                                - Recurring Meeting with fixed time
                            start_time:
                              type: string
                              format: date-time
                              description: Meeting start time.
                            duration:
                              type: integer
                              description: Meeting duration.
                            timezone:
                              type: string
                              description: 'Timezone to format the meeting start time. '
                            created_at:
                              type: string
                              format: date-time
                              description: 'Time of creation. '
                            join_url:
                              type: string
                              description: URL using which participants can join a meeting.
                            agenda:
                              type: string
                              description: 'Meeting description. The length of agenda gets truncated to 250 characters when you list all meetings for a user. To view the complete agenda of a meeting, retrieve details for a single meeting [here](https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/meeting).'
                            pmi:
                              type: string
                              description: '[Personal meeting ID](https://support.zoom.us/hc/en-us/articles/201362843-What-is-Personal-Meeting-ID-PMI-and-Personal-Link-). This field is only returned if PMI was used to schedule the meeting.'
                      type: object
            type: object
          examples:
            application/json:
              page_count: 1
              page_number: 1
              page_size: 30
              total_records: 4
              meetings:
                - uuid: mlghmfghlBBB
                  id: 11111
                  host_id: abckjdfhsdkjf
                  topic: Zoom Meeting
                  type: 2
                  start_time: '2019-08-16T02:00:00Z'
                  duration: 30
                  timezone: America/Los_Angeles
                  created_at: '2019-08-16T01:13:12Z'
                  join_url: 'https://zoom.us/j/11111'
                - uuid: J8H8eavweUcd321==
                  id: 2222
                  host_id: abckjdfhsdkjf
                  topic: TestMeeting
                  type: 2
                  start_time: '2019-08-16T19:00:00Z'
                  duration: 60
                  timezone: America/Los_Angeles
                  agenda: RegistrationDeniedTest
                  created_at: '2019-08-16T18:30:46Z'
                  join_url: 'https://zoom.us/j/2222'
                - uuid: SGVTAcfSfCbbbb
                  id: 33333
                  host_id: abckjdfhsdkjf
                  topic: My Meeting
                  type: 2
                  start_time: '2019-08-16T22:00:00Z'
                  duration: 60
                  timezone: America/Los_Angeles
                  created_at: '2019-08-16T21:15:56Z'
                  join_url: 'https://zoom.us/j/33333'
                - uuid: 64123avdfsMVA==
                  id: 44444
                  host_id: abckjdfhsdkjf
                  topic: MyTestPollMeeting
                  type: 2
                  start_time: '2019-08-29T18:00:00Z'
                  duration: 60
                  timezone: America/Los_Angeles
                  created_at: '2019-08-29T17:32:33Z'
                  join_url: 'https://zoom.us/j/4444'
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            User ID not found.<br>
            **Error Code:** `1001`<br>
            User {userId} not exist or not belong to this account.<br>
      security:
        - OAuth: []
    post:
      summary: Create a meeting
      description: "[Create a meeting](https://support.zoom.us/hc/en-us/articles/201362413-Scheduling-meetings) for a user. <br>This API has a daily rate limit of 100 requests per day. Therefore, only 100 **Create a Meeting** API requests are permitted within a 24 hour window for a user.<br>\n\n<aside>The <code>start_url</code> of a meeting is a URL using which a host or an alternative host can start a meeting. The expiration time for the <code>start_url</code> field is two hours for all regular users. \n\t\nFor custCreate meeting hosts( i.e., users created using the <code>custCreate</code> option via the [Create Users](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usercreate) API), the expiration time of the <code>start_url</code> field is 90 days from the generation of the <code>start_url</code>.\n\t\nFor security reasons, the recommended way to retrieve the updated value for the <code>start_url</code> field programmatically (after expiry) is by calling the [Retrieve a Meeting API](https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/meeting) and referring to the value of the <code>start_url</code> field in the response.</aside><br><br>\nScopes: `meeting:write:admin` `meeting:write`\n \n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`"
      tags:
        - Meetings
      operationId: meetingCreate
      parameters:
        - $ref: '#/parameters/UserId'
        - in: body
          name: body
          required: true
          description: Meeting object.
          schema:
            type: object
            $ref: '#/definitions/MeetingCreate'
            properties:
              schedule_for:
                type: string
                description: Email or userId if you want to schedule meeting for another user.
          x-examples:
            application/json:
              topic: string
              type: integer
              start_time: 'string [date-time]'
              duration: integer
              schedule_for: string
              timezone: string
              password: string
              agenda: string
              recurrence:
                type: integer
                repeat_interval: integer
                weekly_days: string
                monthly_day: integer
                monthly_week: integer
                monthly_week_day: integer
                end_times: integer
                end_date_time: 'string [date-time]'
              settings:
                host_video: boolean
                participant_video: boolean
                cn_meeting: boolean
                in_meeting: boolean
                join_before_host: boolean
                mute_upon_entry: boolean
                watermark: boolean
                use_pmi: boolean
                approval_type: integer
                registration_type: integer
                audio: string
                auto_recording: string
                enforce_login: boolean
                enforce_login_domains: string
                alternative_hosts: string
                global_dial_in_countries:
                  - string
                registrants_email_notification: boolean
      responses:
        '201':
          description: |-
            **HTTP Status Code:** `201`<br>
            Meeting created.
          headers:
            Content-Location:
              description: Location of created Meeting
              type: string
          schema:
            allOf:
              - type: object
                properties:
                  id:
                    type: integer
                    description: '[Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in "**long**" format(represented as int64 data type in JSON), also known as the meeting number.'
                    format: int64
                  assistant_id:
                    type: string
                    description: 'Unique identifier of the scheduler who scheduled this meeting on behalf of the host. This field is only returned if you used "schedule_for" option in the [Create a Meeting API request](https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/meetingcreate).'
                  host_email:
                    type: string
                    description: Email address of the meeting host.
                    format: email
                  registration_url:
                    type: string
                    description: URL using which registrants can register for a meeting. This field is only returned for meetings that have enabled registration.
              - $ref: '#/definitions/MeetingInfo'
          examples:
            application/json:
              created_at: '2019-09-05T16:54:14Z'
              duration: 60
              host_id: AbcDefGHi
              id: 1100000
              join_url: 'https://zoom.us/j/1100000'
              settings:
                alternative_hosts: ''
                approval_type: 2
                audio: both
                auto_recording: local
                close_registration: false
                cn_meeting: false
                enforce_login: false
                enforce_login_domains: ''
                global_dial_in_countries:
                  - US
                global_dial_in_numbers:
                  - city: New York
                    country: US
                    country_name: US
                    number: +1 1000200200
                    type: toll
                  - city: San Jose
                    country: US
                    country_name: US
                    number: +1 6699006833
                    type: toll
                  - city: San Jose
                    country: US
                    country_name: US
                    number: +1 408000000
                    type: toll
                breakout_room:
                  enable: false
                  rooms:
                    - name: room1
                      participants:
                        - james.user01@somemail1234.com
                        - james.user02@somemail1234.com
                    - name: room2
                      participants:
                        - james.user03@somemail1234.com
                  host_video: false
                  in_meeting: false
                  join_before_host: true
                  mute_upon_entry: false
                  participant_video: false
                  registrants_confirmation_email: true
                  use_pmi: false
                  waiting_room: false
                  watermark: false
                  registrants_email_notification: true
                start_time: '2019-08-30T22:00:00Z'
                start_url: 'https://zoom.us/s/1100000?iIifQ.wfY2ldlb82SWo3TsR77lBiJjR53TNeFUiKbLyCvZZjw'
                status: waiting
                timezone: America/New_York
                topic: API Test
                type: 2
                uuid: ng1MzyWNQaObxcf3+Gfm6A==
        '300':
          description: |
            **HTTP Status Code:** `300`<br>
            Invalid enforce_login_domains, separate multiple domains by semicolon.<br>
            A maximum of {rateLimitNumber} meetings can be created/updated for a single user in one day.
        '404':
          description: |
            **HTTP Status Code:** `404` **Not Found**<br>
            User not found.<br>

            **Error Code:** `1001`<br> User {userId} not exist or not belong to this account.
  '/meetings/{meetingId}':
    get:
      summary: Get a meeting
      description: |+
        Retrieve the details of a meeting.<br><br>
        **Scopes:** `meeting:read:admin` `meeting:read`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`

      tags:
        - Meetings
      operationId: meeting
      parameters:
        - $ref: '#/parameters/MeetingId'
        - in: query
          name: occurrence_id
          description: 'Meeting Occurrence ID. Provide this field to view meeting details of a particular occurrence of the [recurring meeting](https://support.zoom.us/hc/en-us/articles/214973206-Scheduling-Recurring-Meetings).'
          type: string
        - in: query
          name: show_previous_occurrences
          type: boolean
          description: 'Set the value of this field to `true` if you would like to view meeting details of all previous occurrences of a [recurring meeting](https://support.zoom.us/hc/en-us/articles/214973206-Scheduling-Recurring-Meetings). '
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Meeting object returned.
          schema:
            allOf:
              - type: object
                properties:
                  uuid:
                    type: string
                    description: |
                      Unique meeting ID. Each meeting instance will generate its own Meeting UUID (i.e., after a meeting ends, a new UUID will be generated for the next instance of the meeting). You can retrieve a list of UUIDs from past meeting instances using [this API](https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/pastmeetings) . Please double encode your UUID when using it for API calls if the UUID begins with a '/'or contains '//' in it.
                  id:
                    type: integer
                    description: '[Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in "**long**" format(represented as int64 data type in JSON), also known as the meeting number.'
                    format: int64
                  host_id:
                    type: string
                    description: ID of the user who is set as host of meeting.
                  assistant_id:
                    type: string
                    description: 'Unique identifier of the scheduler who scheduled this meeting on behalf of the host. This field is only returned if you used "schedule_for" option in the [Create a Meeting API request](https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/meetingcreate).'
                  host_email:
                    type: string
                    description: Email address of the meeting host.
                    format: email
              - $ref: '#/definitions/MeetingInfoGet'
          examples:
            application/json:
              agenda: API overview
              created_at: '2019-09-09T15:54:24Z'
              duration: 60
              host_id: ABcdofjdogh11111
              id: 1234555466
              join_url: 'https://zoom.us/j/1234555466'
              settings:
                alternative_hosts: kjxckfjxgfgjdfk@dkjfhdskhf.com
                approval_type: 2
                audio: both
                auto_recording: local
                close_registration: false
                cn_meeting: false
                enforce_login: false
                enforce_login_domains: mycompanydomain.com
                global_dial_in_countries:
                  - US
                global_dial_in_numbers:
                  - city: New York
                    country: US
                    country_name: US
                    number: +1 000011100
                    type: toll
                  - city: San Jose
                    country: US
                    country_name: US
                    number: +1 6699006833
                    type: toll
                  - city: San Jose
                    country: US
                    country_name: US
                    number: +1 221122112211
                    type: toll
                host_video: false
                in_meeting: false
                join_before_host: true
                mute_upon_entry: false
                participant_video: false
                registrants_confirmation_email: true
                use_pmi: false
                waiting_room: false
                watermark: false
                registrants_email_notification: true
              start_time: '2019-08-30T22:00:00Z'
              start_url: 'https://zoom.us/1234555466/cdknfdffgggdfg4MDUxNjY0LCJpYXQiOjE1NjgwNDQ0NjQsImFpZCI6IjRBOWR2QkRqVHphd2J0amxoejNQZ1EiLCJjaWQiOiIifQ.Pz_msGuQwtylTtYQ'
              status: waiting
              timezone: America/New_York
              topic: My API Test
              type: 2
              uuid: iAABBBcccdddd7A==
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>
            **Error Code:** `1010`<br>
            User not found on this account: {accountId}.<br>**Error Code:** `3000`<br>
            Cannot access webinar info.
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            Meeting not found.<br>
            **Error Code:** `1001`<br>
            User not exist: {userId}.<br>**Error Code:** `3001`<br>
            Meeting {meetingId} is not found or has expired.
      security:
        - OAuth: []
    patch:
      summary: Update a meeting
      description: |+
        Update the details of a meeting.<br>This API has a rate limit of 100 requests per day. Therefore, a meeting can only be updated for a maximum of 100 times within a 24 hour window.<br>
        **Scopes:** `meeting:write:admin` `meeting:write`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`

      tags:
        - Meetings
      operationId: meetingUpdate
      parameters:
        - $ref: '#/parameters/MeetingId'
        - in: body
          name: body
          required: true
          description: Meeting
          schema:
            allOf:
              - type: object
                properties:
                  schedule_for:
                    type: string
                    description: Email or userId if you want to schedule meeting for another user.
              - $ref: '#/definitions/MeetingUpdate'
          x-examples:
            application/json:
              topic: Michael API Test
              type: 2
              start_time: '2019-08-30T18:00:00'
              duration: 60
              timezone: America/New_York
              password: abcd
              agenda: My Meeting
              settings:
                host_video: false
                in_meeting: false
                join_before_host: true
                mute_upon_entry: false
                participant_video: false
                registrants_confirmation_email: true
                use_pmi: false
                waiting_room: false
                watermark: false
                approval_type: 0
                alternative_hosts: mycohost@someemail.com
                global_dial_in_countries:
                  - city: San Jose
                    country: US
                    country_name: US
                    number: +1 1212121212121212
                    type: toll
        - in: query
          name: occurrence_id
          type: string
          description: 'Meeting occurrence id. Support change of agenda, start_time, duration, settings: {host_video, participant_video, join_before_host, mute_upon_entry, waiting_room, watermark, auto_recording}'
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`<br>
            Meeting updated.
          examples: {}
        '300':
          description: |
            **Error Code:** `300`<br>
            Invalid enforce_login_domains, separate multiple domains by semicolon.<br>
            A maximum of {rateLimitNumber} meetings can be created/updated for a single user in one day.
        '400':
          description: |
            **HTTP Status Code:** `400`<br>
            **Error Code:** `1010`<br>
            User not found on this account: {accountId}.<br>
            **Error Code:** `3000`<br>
            Cannot access meeting information.<br>
            **Error Code:** `3003`<br>
            You are not the meeting host.
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            Meeting not found.<br>
            **Error Code:** `1001`<br>
            User does not exist: {userId}.<br>
            **Error Code:** `3001`<br>
            A meeting with this {meetingId} is not found or has expired.
      security:
        - OAuth: []
    delete:
      summary: Delete a meeting
      description: |+
        Delete a meeting.<br><br>
        **Scopes:** `meeting:write:admin` `meeting:write`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`

      tags:
        - Meetings
      operationId: meetingDelete
      parameters:
        - $ref: '#/parameters/MeetingId'
        - $ref: '#/parameters/OccurrenceId'
        - in: query
          name: schedule_for_reminder
          type: boolean
          description: |-
            `true`: Notify host and alternative host about the meeting cancellation via email.
            `false`: Do not send any email notification.
        - in: query
          name: cancel_meeting_reminder
          type: string
          description: |-
            `true`: Notify registrants about the meeting cancellation via email.

            `false`: Do not send any email notification to meeting registrants.

            The default value of this field is `false`.
      responses:
        '204':
          description: |-
            **HTTP Status Code**: `204` <br>
            Meeting deleted.
        '400':
          description: |+
            **HTTP Status Code**: `400` <br>
            **Error Code**: `1010` <br>
            User does not belong to this account: {accountId}.<br>
            **Error Code**: `3000` <br>Cannot access meeting information.<br>Invalid occurrence_id.<br>
            **Error Code**: `3002` <br>
            Sorry, you cannot delete this meeting since it is in progress.<br>**Error Code**: `3003` <br>You are not the meeting host.<br>
            **Error Code**: `3007` <br>Sorry, you cannot delete this meeting since it has ended.<br>**Error Code**: `3018` <br>
            Not allowed to delete PMI.<br>**Error Code**: `3037` <br>Not allowed to delete PAC.



        '404':
          description: |-
            **HTTP Status Code**: `404` <br>
            Meeting not found.
            **Error Code**: `1001` <br>
            User does not exist: {userId}.<br>
            **Error Code**: `3001` <br>
            Meeting with this {meetingId} is not found or has expired.
      security:
        - OAuth: []
  '/meetings/{meetingId}/status':
    put:
      summary: Update meeting status
      description: |-
        Update the status of a meeting.<br><br>
        **Scopes:** `meeting:write:admin` `meeting:write`
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      tags:
        - Meetings
      operationId: meetingStatus
      parameters:
        - $ref: '#/parameters/MeetingId'
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              action:
                type: string
                description: |
                  `end` - End a meeting.<br>
                  `recover` - [Recover](https://support.zoom.us/hc/en-us/articles/360038297111-Recover-a-deleted-meeting) a deleted meeting.
                enum:
                  - end
                  - recover
          x-examples:
            application/json:
              action: end
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`<br>
            Meeting updated.
          examples: {}
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>
            **Error Code:** `1010`<br>
            User does not belong to this account: {accountId}.
            **Error Code:** `3000`<br>
            Cannot access meeting info.
            **Error Code:** `3003`<br>
            You're not the meeting host.
            **Error Code:** `3063`<br>
            Can not end on-premise user's meeting: {meetingId}.
        '404':
          description: |+
            **HTTP Status Code:** `404`<br>
            Meeting not found.<br>
            **Error Code:** `1001`<br>
            Meeting host does not exist: {userId}.

      security:
        - OAuth: []
  '/meetings/{meetingId}/registrants':
    get:
      summary: List meeting registrants
      description: |-
        A host or a user with admin permission can require [registration for a Zoom meeting](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings). Use this API to list users that have registered for a meeting.<br><br>
        **Scopes**: `meeting:read:admin` `meeting:read`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      tags:
        - Meetings
      operationId: meetingRegistrants
      parameters:
        - $ref: '#/parameters/MeetingId'
        - $ref: '#/parameters/OccurrenceId'
        - $ref: '#/parameters/RegistrantStatus'
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/PageNumber'
        - $ref: '#/parameters/NextPageToken'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Successfully listedd meeting registrants.
          schema:
            $ref: '#/definitions/MeetingRegistrantList'
          examples:
            application/json:
              page_count: 1
              page_number: 1
              page_size: 1
              total_records: 1
              registrants:
                - email: somemeail@emailprovider.com
                  first_name: Tim
                  last_name: S.
                  id: zjkfsdfjdfhg
                  address: 11111 Awesome St
                  city: Paris
                  country: France
                  zip: '11000'
                  state: Ile-de-France
                  phone: '00000'
                  industry: Tech
                  org: Growth
                  job_title: Developer
                  purchasing_time_frame: Within a month
                  role_in_purchase_process: Not involved
                  no_of_employees: 1-20
                  comments: Love using Zoom APIs
                  custom_questions:
                    - title: Did you enjoy the registration process?
                      value: 'Yes, alot.'
                    - title: Would you like to register for our next meeting?
                      value: Absolutely.
                  status: approved
                  create_time: '2012-04-14T16:55:30.231Z'
                  join_url: 'https://success.zoom.us/j/0000000000000'
        '300':
          description: |
            **Error Code:** `300`<br>
            Meeting {meetingId} is not found or has expired.<br>
            This meeting has not set registration as required: {meetingId}.
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>
            **Error Code:** `1010`<br>
            User does not belong to this account: {accountId}.<br>
            **Error Code:** `3003`<br>
            You are not the meeting host.<br>
            **Error Code:** `3000`<br>
            Cannot access meeting info.
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            Meeting not found.<br>
            **Error Code:** `1001`<br>
            Meeting host does not exist: {userId}.
      security:
        - OAuth: []
    post:
      summary: Add meeting registrant
      description: |-
        Register a participant for a meeting.<br><br> Note that there is a maximum limit of 4999 registrants per meeting and users will see an error if the capacity has reached.

        **Prerequisite:**<br>
        * Host user type must be "Licensed".

        **Scopes:** `meeting:write:admin` `meeting:write`
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      tags:
        - Meetings
      operationId: meetingRegistrantCreate
      parameters:
        - $ref: '#/parameters/MeetingId'
        - in: query
          name: occurrence_ids
          type: string
          description: Occurrence IDs. You can find these with the meeting get API. Multiple values separated by comma.
        - in: body
          name: body
          required: true
          schema:
            description: ' Registrant.'
            allOf:
              - $ref: '#/definitions/Registrant'
              - properties:
                  language:
                    type: string
                    description: |-
                      Registrant's language preference for confirmation  emails. The value can be one of the following:
                      `en-US`,`de-DE`,`es-ES`,`fr-FR`,`jp-JP`,`pt-PT`,`ru-RU`,`zh-CN`, `zh-TW`, `ko-KO`, `it-IT`, `vi-VN`.
              - properties:
                  auto_approve:
                    type: boolean
            type: Object
          x-examples:
            application/json:
              email: myemail@mycompany.com
              first_name: Mike
              last_name: Brown
              address: 123 Main ST
              city: San Jose
              country: US
              zip: '95550'
              state: CA
              phone: 111-444-4444
              industry: Tech
              org: IT
              job_title: DA
              purchasing_time_frame: More Than 6 Months
              role_in_purchase_process: Influencer
              no_of_employees: 1-20
              comments: Excited to host you.
              custom_questions:
                - title: Favorite thing about Zoom
                  value: Meet Happy
      responses:
        '201':
          description: |-
            **HTTP Status Code:** `201`<br>
            Registration created.
          schema:
            type: object
            properties:
              id:
                type: integer
                description: '[Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in "**long**" format(represented as int64 data type in JSON), also known as the meeting number.'
                format: int64
              join_url:
                type: string
                description: |-
                  Unique URL for this registrant to join the meeting. This URL should only be shared with the registrant for whom the API request was made.
                  If the meeting was [created](https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/meetingcreate) with manual approval type (`approval_type`: 1), the join URL will not be returned in the response.
              registrant_id:
                type: string
                description: Unique identifier of the registrant.
              start_time:
                type: string
                description: The start time for the meeting.
              topic:
                type: string
                description: Topic of the meeting.
          examples:
            application/json:
              id: 85746065
              join_url: amet
              registrant_id: a
              start_time: culpa mollit
              topic: reprehenderit ea ut ex Excepteur
        '300':
          description: |-
            **Error Code:** `300`<br>
            Meeting {meetingId} is not found or has expired.
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>
            **Error Code:** `1010`<br>
            User does not belong to this account: {accountId}.<br>
            **Error Code:** `3003`<br>
            You are not the meeting host.<br>
            **Error Code:** `3043`<br>
            Meeting has reached maximum attendee capacity.<br>
            **Error Code:** `3000`<br>
            Cannot access meeting info.
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            Meeting not found.<br>
            **Error Code:** `1001`<br>
            Meeting host does not exist: {userId}.
      security:
        - OAuth: []
  '/meetings/{meetingId}/registrants/{registrantId}':
    delete:
      summary: Delete a meeting registrant
      description: |-
        Delete a meeting registrant.<br><br>
        **Scopes**: `meeting:write:admin` `meeting:write`<br>
         <br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      tags:
        - Meetings
      operationId: meetingregistrantdelete
      parameters:
        - in: query
          name: occurrence_id
          type: string
          description: The meeting occurence ID.
        - in: path
          name: meetingId
          type: integer
          required: true
          description: The meeting ID.
        - in: path
          name: registrantId
          type: string
          required: true
          description: The meeting registrant ID.
      responses:
        '204':
          description: |-
            **HTTP status code:** `204` <br>
            OK
        '400':
          description: |-
            **HTTP status code:** `400` <br>
            Bad Request<br>

            **Error code:** `200`<br>
            Only available for paid users: {0}.<br>

            **Error code:** `300`<br>
            The value that you entered for the Registrant ID field is invalid. Enter a valid value and try again.<br>

            **Error code:** `404` <br>
            Registration has not been enabled for this meeting: {0}.<br>

            **Error code:** `1001` <br>
            User {userId} does not exist or does not belong to this account.<br>

            **Error code:** `3000` <br>
            Cannot access webinar info. ***Note:** Zoom throws this error when the meetingId is a webinarId.*<br>
            Registrant {0} was not found.

            **Error code:** `3001` <br>
            Meeting does not exist: {0}.
  '/meetings/{meetingId}/registrants/status':
    put:
      summary: Update registrant's status
      description: |-
        Update a meeting registrant's status by either approving, cancelling or denying a registrant from joining the meeting.<br><br>
        **Scopes:** `meeting:write:admin` `meeting:write`
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      tags:
        - Meetings
      operationId: meetingRegistrantStatus
      parameters:
        - $ref: '#/parameters/MeetingId'
        - $ref: '#/parameters/OccurrenceId'
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/RegistrantStatus'
          x-examples:
            application/json:
              action: approve
              registrants:
                - id: '173525362'
                  email: someemail@companyname.com
                - id: '156234353456'
                  email: anotheremail@companyname.com
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`<br>
            Registrant status updated.
        '300':
          description: |-
            **Error Code:** `300`<br>
            This meeting has not set registration as required:{meetingId}.
        '400':
          description: |+
            **HTTP Status Code:** `400`<br>
            **Error Code:** `1010`<br>
            User does not belong to this account: {accountId}.<br>
            **Error Code:** `3000`<br>
            Cannot access meeting information.<br>
            **Error Code:** `3003`<br>
            You're not the meeting host.

        '404':
          description: |
            **HTTP Status Code:** `404`<br>
            Meeting or registrant not found.
            **Error Code:** `1001`<br>
            User does not exist: {userId}.<br>
      security:
        - OAuth: []
  '/past_meetings/{meetingUUID}':
    get:
      summary: Get past meeting details
      description: |-
        Get details on a past meeting. <br><br>
        **Scopes:** `meeting:read:admin` `meeting:read`

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
        > **Note**: Please double encode your UUID when using this API if the UUID begins with a '/'or contains '//' in it.
      tags:
        - Meetings
      operationId: pastMeetingDetails
      parameters:
        - $ref: '#/parameters/MeetingUUID'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Meeting details returned.
          schema:
            type: object
            properties:
              uuid:
                type: string
                format: uuid
                description: Meeting UUID.
              id:
                type: integer
                description: '[Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in "**long**" format(represented as int64 data type in JSON), also known as the meeting number.'
                format: int64
              host_id:
                type: string
                description: Host ID.
              type:
                type: integer
                description: Meeting type.
              topic:
                type: string
                description: Meeting topic.
              user_name:
                type: string
                description: User display name.
              user_email:
                type: string
                description: User email.
              start_time:
                type: string
                format: date-time
                description: Meeting start time (GMT).
              end_time:
                type: string
                format: date-time
                description: Meeting end time (GMT).
              duration:
                type: integer
                description: Meeting duration.
              total_minutes:
                type: integer
                description: Sum of meeting minutes from all participants in the meeting.
              participants_count:
                type: integer
                description: Number of meeting participants.
          examples:
            application/json:
              uuid: 'string [uuid]'
              id: integer
              host_id: integer
              type: integer
              topic: string
              user_name: string
              user_email: string
              start_time: 'string [date-time]'
              end_time: 'string [date-time]'
              duration: integer
              total_minutes: integer
              participants_count: integer
        '400':
          description: |
            **HTTP Status Code:** `400`<br>
            Meeting not found<br><br>
            **Error Code:** `1010`<br>
            User not exist: {userId}<br><br>
            User {userId} not exist or not belong to this account.<br><br>
            **Error Code:** `300`<br>
            Cannot access meeting info.<br><br>
            **Error Code:** `200`<br>
            Only available for paid account: {accountId}
        '404':
          description: |
            **HTTP Status Code:** `404`<br>
            Meeting not found<br><br>
            **Error Code:** `3001`<br>
            This meeting is not available or ID is not valid.<br>
            Meeting ID is invalid or not end.
      security:
        - OAuth: []
  '/past_meetings/{meetingUUID}/participants':
    get:
      summary: Get past meeting participants
      description: |
        Retrieve information on participants from a past meeting. <br><br>
        **Scopes:** `meeting:read:admin` `meeting:read`

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
        **Prerequisites:**<br>
        * Paid account on a Pro or higher plan.

        <br> <br>  **Note**: Please double encode your UUID when using this API if the UUID begins with a '/'or contains '//' in it.
      tags:
        - Meetings
      operationId: pastMeetingParticipants
      parameters:
        - $ref: '#/parameters/MeetingUUID'
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/NextPageToken'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Meeting participants' report returned.
          schema:
            allOf:
              - $ref: '#/definitions/PaginationToken'
              - type: object
                properties:
                  participants:
                    type: array
                    description: Array of meeting participant objects.
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: 'Universally unique identifier of the Participant. It is the same as the User ID of the participant if the participant joins the meeting by logging into Zoom. If the participant joins the meeting without logging in, the value of this field will be blank.'
                        name:
                          type: string
                          description: Participant display name.
                        user_email:
                          type: string
                          description: Email address of the user. This field will be returned if the user logged into Zoom to join the meeting.
          examples:
            application/json:
              page_count: 1
              page_size: 30
              total_records: 1
              next_page_token: aliqua
              participants:
                - id: 8b29rgg4bb
                  name: Ram Shekhar
                  user_email: ram.shekhar.123@fkdngfjg.fdghdfgj
        '400':
          description: |+
            **HTTP Status Code:** `400`<br>
            **Error Code:** `1010`<br>
            User {userId} not exist or not belong to this account.<br><br>
            **Error Code:** `300`<br>
            Cannot access meeting information.<br><br>
            **Error Code:** `200`<br>
            Only available for paid account: {accountId}

        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            Meeting not found<br>
            **Error Code:** `1001`<br>
            User {userId} not exist or not belong to this account.<br>
            User not exist: {userId}<br><br>
            **Error Code:** `3001`<br>
            This meeting is not available or ID is not valid.<br>
            Meeting ID is invalid or not end.
      security:
        - OAuth: []
  '/past_meetings/{meetingId}/instances':
    get:
      summary: List ended meeting instances
      description: |-
        Get a list of ended meeting instances<br><br>
        **Scopes:** `meeting:read:admin` `meeting:read`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      tags:
        - Meetings
      operationId: pastMeetings
      parameters:
        - $ref: '#/parameters/MeetingId'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            List of ended meeting instances returned.
          schema:
            $ref: '#/definitions/MeetingInstances'
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            Meeting not found.
      security:
        - OAuth: []
  '/meetings/{meetingId}/polls':
    get:
      summary: List meeting polls
      description: |-
        Polls allow the meeting host to survey attendees. Use this API to list [polls](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings) of a meeting.<br><br>

        **Scopes**: `meeting:read:admin` `meeting:read`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>
        **Prerequisites**:<br>
        * Host user type must be **Pro** or higher plan.
        * Meeting must be a scheduled meeting. Instant meetings do not have polling features enabled.
      tags:
        - Meetings
      operationId: meetingPolls
      parameters:
        - $ref: '#/parameters/MeetingId'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** <br>
            List polls of a Meeting  returned
          schema:
            $ref: '#/definitions/PollList'
          examples:
            application/json:
              total_records: 1
              polls:
                - id: YB33NcABCdg_g1AAAxTQ
                  title: Meeting Usefulness
                  status: notstart
                  questions:
                    - name: How useful was this meeting?
                      type: multiple
                      answers:
                        - Extremely useful
                        - Somewhat useful
                        - Not useful at all
        '404':
          description: |-
            **Error Code:** `404`
            Meeting Poll not found
      security:
        - OAuth: []
    post:
      summary: Create a meeting poll
      description: |-
        Polls allow the meeting host to survey attendees. Use this API to create a [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings) for a meeting.<br><br>

        **Scopes**: `meeting:write:admin` `meeting:write`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>
        **Prerequisites**:<br>
        * Host user type must be **Pro** or higher plan.
        * Polling feature must be enabled in the host's account.
        * Meeting must be a scheduled meeting. Instant meetings do not have polling features enabled.
      tags:
        - Meetings
      operationId: meetingPollCreate
      parameters:
        - $ref: '#/parameters/MeetingId'
        - in: body
          name: body
          required: true
          description: Meeting poll object
          schema:
            allOf:
              - $ref: '#/definitions/Poll'
          x-examples:
            application/json:
              title: Meeting Usefulness
              questions:
                - name: How useful was this meeting?
                  type: multiple
                  answers:
                    - Extremely useful
                    - Somewhat useful
                    - Not useful at all
      responses:
        '201':
          description: |-
            **HTTP Status Code:** `201` <br>
            Meeting Poll Created
          headers:
            Content-Location:
              description: Location of created Meeting Poll
              type: string
          schema:
            allOf:
              - type: object
                properties:
                  id:
                    type: string
                    description: Meeting Poll ID
                  status:
                    type: string
                    description: 'Status of the Meeting Poll:<br>`notstart` - Poll not started<br>`started` - Poll started<br>`ended` - Poll ended<br>`sharing` - Sharing poll results'
                    enum:
                      - notstart
                      - started
                      - ended
                      - sharing
                    x-enum-descriptions:
                      - Poll not start
                      - Poll started
                      - Poll ended
                      - Poll is sharing
              - $ref: '#/definitions/Poll'
          examples:
            application/json:
              id: abcdaaaeefffhhh
              status: notstart
              title: Meeting Usefulness
              questions:
                - name: How useful was this meeting?
                  type: multiple
                  answers:
                    - Extremely useful
                    - Somewhat useful
                    - Not useful at all
        '404':
          description: |-
            **Error Code:** `404` <br>
            Meeting not found
      security:
        - OAuth: []
  '/meetings/{meetingId}/polls/{pollId}':
    get:
      summary: Get a meeting poll
      description: |+
        Polls allow the meeting host to survey attendees. Use this API to get information about a specific meeting [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings).<br><br>
        **Scopes**: `meeting:read:admin` `meeting:read`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`


      tags:
        - Meetings
      operationId: meetingPollGet
      parameters:
        - $ref: '#/parameters/MeetingId'
        - in: path
          name: pollId
          description: The poll ID
          type: string
          required: true
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` <br>
            Meeting Poll object returned
          schema:
            allOf:
              - type: object
                properties:
                  id:
                    type: string
                    description: Meeting Poll ID
                  status:
                    type: string
                    description: 'Status of the Meeting Poll:<br>`notstart` - Poll not started<br>`started` - Poll started<br>`ended` - Poll ended<br>`sharing` - Sharing poll results'
                    enum:
                      - notstart
                      - started
                      - ended
                      - sharing
                    x-enum-descriptions:
                      - Poll not start
                      - Poll started
                      - Poll ended
                      - Poll is sharing
              - $ref: '#/definitions/Poll'
          examples:
            application/json:
              id: abcdaaaeefffhhh
              status: notstart
              title: Meeting Usefulness
              questions:
                - name: How useful was this meeting?
                  type: multiple
                  answers:
                    - Extremely useful
                    - Somewhat useful
                    - Not useful at all
        '404':
          description: |-
            **Error Code:** `404` <br>
            Meeting Poll not found.
      security:
        - OAuth: []
    put:
      summary: Update a meeting poll
      description: |+
        Polls allow the meeting host to survey attendees. Use this API to update information of a specific meeting [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings)<br><br>
        **Scopes**: `meeting:write:admin` `meeting:write`

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`

      tags:
        - Meetings
      operationId: meetingPollUpdate
      parameters:
        - $ref: '#/parameters/MeetingId'
        - in: path
          name: pollId
          description: The poll ID
          type: string
          required: true
        - in: body
          name: body
          required: true
          description: Meeting Poll
          schema:
            allOf:
              - $ref: '#/definitions/Poll'
          x-examples:
            application/json:
              title: Meeting Usefulness
              questions:
                - name: Would you like to use our service again?
                  type: multiple
                  answers:
                    - Definitely
                    - Probably
                    - Not going to use it again
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` <br>
            Meeting Poll Updated
        '404':
          description: |-
            **Error Code:** `404` <br>
            Meeting Poll not found
      security:
        - OAuth: []
    delete:
      summary: Delete a meeting poll
      description: |-
        Polls allow the meeting host to survey attendees. Use this API to delete a meeting [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings).<br>
        **Scopes**: `meeting:write:admin` `meeting:write`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` <br>
        **Prerequisites**:<br>
        * Host user type must be **Pro**.
        * Polling feature should be enabled in the host's account.
        * Meeting must be a scheduled meeting. Instant meetings do not have polling features enabled.
      tags:
        - Meetings
      operationId: meetingPollDelete
      parameters:
        - $ref: '#/parameters/MeetingId'
        - in: path
          name: pollId
          description: The poll ID
          type: string
          required: true
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` <br>
            Meeting Poll deleted
        '404':
          description: |-
            **Error Code:** `404`
            Meeting Poll not found
      security:
        - OAuth: []
  '/meetings/{meetingId}/registrants/questions':
    get:
      summary: 'List registration questions '
      description: |+
        List registration questions that will be displayed to users while [registering for a meeeting](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings).<br>

        **Scopes:** `meeting:read`, `meeting:read:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`

      tags:
        - Meetings
      operationId: meetingRegistrantsQuestionsGet
      parameters:
        - $ref: '#/parameters/MeetingId'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Meeting Registrant Question object returned
          schema:
            allOf:
              - $ref: '#/definitions/MeetingRegistrantQuestions'
          examples:
            application/json:
              questions:
                - field_name: address
                  required: true
              custom_questions:
                - title: How long have you been working?
                  type: short
                  required: false
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            Meeting not found
      security:
        - OAuth: []
    patch:
      summary: Update registration questions
      description: |+
        Update registration questions that will be displayed to users while [registering for a meeeting](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings).<br><br>
        **Scopes:** `meeting:write`, `meeting:write:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`


      tags:
        - Meetings
      operationId: meetingRegistrantQuestionUpdate
      parameters:
        - $ref: '#/parameters/MeetingId'
        - in: body
          name: body
          required: true
          description: Meeting Registrant Questions
          schema:
            allOf:
              - $ref: '#/definitions/MeetingRegistrantQuestions'
          x-examples:
            application/json:
              questions:
                - field_name: address
                  required: true
              custom_questions:
                - title: How long have you been working?
                  type: short
                  required: true
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`<br>
            Meeting Registrant Questions Updated
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            Meeting not found.
      security:
        - OAuth: []
  '/users/{userId}/recordings':
    get:
      summary: List all recordings
      description: |-
        When a user records a meeting or a webinar by choosing the **Record to the Cloud** option, the video, audio, and chat text are recorded in the Zoom cloud.

        Use this API to list all [Cloud recordings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording) of a user.<br>
        > To access a user's password protected cloud recording, add an "access_token" parameter to the download URL and provide either the [JWT](https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-jwt-app) or the user's OAuth access token as the value of the "access_token" parameter.
        <br>

        **Scopes:** `recording:read:admin` `recording:read`  <br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>
        **Prerequisites:**
        * Pro or a higher plan.
        * Cloud Recording must be enabled on the user's account.
      tags:
        - Cloud Recording
      operationId: recordingsList
      parameters:
        - $ref: '#/parameters/UserId'
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/NextPageToken'
        - $ref: '#/parameters/Mc'
        - $ref: '#/parameters/Trash'
        - in: query
          name: from
          type: string
          format: date
          description: |-
            The start date in 'yyyy-mm-dd' UTC format for the date range for which you would like to retrieve recordings. The maximum range can be a month. If no value is provided for this field, the default will be current date. For example, if you make the API request on June 30, 2020, without providing the “from” and “to” parameters, by default the value of 'from' field will be “2020-06-30” and the value of the 'to' field will be “2020-07-01”.

            **Note**: The "trash" files cannot be filtered by date range and thus, the "from" and "to" fields should not be used for trash files.
        - in: query
          name: to
          type: string
          format: date
          description: 'End date in ''yyyy-mm-dd'' ''yyyy-mm-dd'' UTC format. '
        - $ref: '#/parameters/trash_type'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            List of recording objects returned.
          schema:
            $ref: '#/definitions/RecordingMeetingList'
          examples:
            application/json:
              from: '2019-08-15'
              to: '2019-09-15'
              page_count: 1
              page_size: 30
              total_records: 1
              next_page_token: ''
              meetings:
                - uuid: gkABCDEnCkPuA==
                  id: 1000000000000
                  account_id: AbcjxkfhdEEE
                  host_id: z8dfkgABBBBBBBfp8uQ
                  topic: MyTestPollMeeting
                  type: 2
                  start_time: '2019-08-29T21:54:49Z'
                  timezone: America/Los_Angeles
                  duration: 1
                  total_size: 47383
                  recording_count: 1
                  share_url: 'https://api.zoom.us/recording/share/IABCDJDKDJEEEEEk_GwfdggdgkTziMw'
                  recording_files:
                    - id: 589ABBBBB-8718e
                      meeting_id: gkABCDEnCkPuA==
                      recording_start: '2019-08-29T21:54:55Z'
                      recording_end: '2019-08-29T21:55:24Z'
                      file_type: M4A
                      file_size: 10098
                      play_url: 'https://api.zoom.us/recording/play/pfA2AvvvvvAnAzOibbbbELxl'
                      download_url: 'https://api.zoom.us/recording/download/pfA2AvvvvvAnAzOibbbbELxl'
                      status: completed
                      recording_type: audio_only
                    - meeting_id: gkABCDEnCkPuA==
                      recording_start: '2019-08-29T21:54:55Z'
                      recording_end: '2019-08-29T21:55:24Z'
                      file_type: TIMELINE
                      download_url: 'https://api.zoom.us/recording/download/cc33ekldfdjfhf3-aaaaa'
                    - id: 96119b=kdfhf791
                      meeting_id: gkABCDEnCkPuA==
                      recording_start: '2019-08-29T21:54:55Z'
                      recording_end: '2019-08-29T21:55:24Z'
                      file_type: MP4
                      file_size: 37285
                      play_url: 'https://api.zoom.us/recording/play/abcdkjfhdhfdhfj'
                      download_url: 'https://api.zoom.us/recording/download/abcdkjfhdhfdhfj'
                      status: completed
                      recording_type: shared_screen_with_speaker_view
        '404':
          description: |
            **HTTP Status Code:** `404` **Not Found**<br><br>
            **Error Code:** `1001`<br>
            User {userId} not exist or not belong to this account.
      security:
        - OAuth: []
  '/meetings/{meetingId}/recordings':
    get:
      summary: Get meeting recordings
      description: |+
        Get all the [recordings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording#h_7420acb5-1897-4061-87b4-5b76e99c03b4) from a meeting or Webinar instance.<br><br> The recording files can be downloaded via the `download_url` property listed in the response.

        > To access a password protected cloud recording, add an "access_token" parameter to the download URL and provide OAuth access token or [JWT](https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-jwt-app) as the value of the "access_token".
        <br>

        **Scopes:** `recording:read:admin` `recording:read`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`

      tags:
        - Cloud Recording
      operationId: recordingGet
      parameters:
        - $ref: '#/parameters/MeetingId4Recording'
      responses:
        '200':
          description: |
            **Error Code:** `200` <br>
            You do not have the right permissions.
            **HTTP Status Code:** `200`<br>
            Recording object returned.<br>
          schema:
            allOf:
              - $ref: '#/definitions/RecordingMeeting'
          examples:
            application/json:
              uuid: gkABCDEbbbbbbbkPuA==
              id: 68000000031879
              account_id: EABkdslfBBBdk
              host_id: z8yBXksaAAjdhfsfdfkjgg
              topic: MyTestPollMeeting
              type: 2
              start_time: '2019-08-29T21:54:49Z'
              timezone: America/Los_Angeles
              duration: 1
              total_size: 47383
              recording_count: 3
              share_url: 'https://api.zoom.us/recording/share/abcdkhfdbbfdjbg'
              recording_files:
                - id: 96119skjlfhdshkjf-djkfndjf0-f791
                  meeting_id: gkABCDEbbbbbbbkPuA==
                  recording_start: '2019-08-29T21:54:55Z'
                  recording_end: '2019-08-29T21:55:24Z'
                  file_type: MP4
                  file_size: 37285
                  play_url: 'https://api.zoom.us/recording/play/Qg75t7xZBtEbAkjdlgbfdngBBBB'
                  download_url: 'https://api.zoom.us/recording/download/Qg75t7xZBtEbAkjdlgbfdngBBBB'
                  status: completed
                  recording_type: shared_screen_with_speaker_view
                - id: 5890sfjkdsf-aaaakdf-fbbb618718e
                  meeting_id: gkABCDEbbbbbbbkPuA==
                  recording_start: '2019-08-29T21:54:55Z'
                  recording_end: '2019-08-29T21:55:24Z'
                  file_type: M4A
                  file_size: 10098
                  play_url: 'https://api.zoom.us/recording/play/ABdkEEEfhlgldfjkglfghlkfdklhsg'
                  download_url: 'https://api.zoom.us/recording/download/ABdkEEEfhlgldfjkglfghlkfdklhsg'
                  status: completed
                  recording_type: audio_only
                - meeting_id: gkABCDEbbbbbbbkPuA==
                  recording_start: '2019-08-29T21:54:55Z'
                  recording_end: '2019-08-29T21:55:24Z'
                  file_type: TIMELINE
                  download_url: 'https://api.zoom.us/recording/download/e2ed-dlkjgdfkgh-kslsdbsjf1a'
        '400':
          description: |-
            **HTTP Status Code:** `400` <br>
            **Error Code:** `1010`<br>
            User not found on this account: {accountId}.
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            Meeting recording not found.<br>
            **Error Code:** `1001`<br>
            User {userId} does not exist or does not belong to this account.<br>
            **Error Code:** `3301`<br>
            There is no recording for this meeting.
      security:
        - OAuth: []
    delete:
      summary: Delete meeting recordings
      description: |
        Delete all recording files of a meeting.<br><br>

        **Scopes:** `recording:write:admin` `recording:write`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>
        **Prerequisites**:
        * Cloud Recording should be enabled on the user's account.<br>
      tags:
        - Cloud Recording
      operationId: recordingDelete
      parameters:
        - $ref: '#/parameters/MeetingId4Recording'
        - $ref: '#/parameters/RecordingDeleteAction'
      responses:
        '200':
          description: |-
            **Error Code:** `200` <br>
            You do not have the right permission.
        '204':
          description: |-
            **HTTP Status Code:** `204` <br>
            Meeting recording deleted.
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>
            **Error Code:** `1010`<br>
            User does not belong to this account: {accountId}.
        '404':
          description: |
            **HTTP Status Code:** `404` <br>
            Meeting recording not found
            **Error Code:** `1001` <br> User {userId} does not exist or does not belong to this account.<br>
            **Error Code:** `3301`<br>There is no recording for this meeting.
      security:
        - OAuth: []
  '/meetings/{meetingId}/recordings/{recordingId}':
    delete:
      summary: Delete a meeting recording file
      description: |-
        Delete a sprecific recording file from a meeting.<br><br>
        **Scopes**: `recording:write:admin` `recording:write`<br>
         <br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      tags:
        - Cloud Recording
      operationId: recordingDeleteOne
      parameters:
        - $ref: '#/parameters/MeetingId4Recording'
        - $ref: '#/parameters/RecordingId'
        - $ref: '#/parameters/RecordingDeleteAction'
      responses:
        '200':
          description: |-
            **Error Code:** `200`<br>
            You do not have the right permissions.
        '204':
          description: |-
            **HTTP Status Code:** `204` <br>
            Meeting recording file deleted.
        '400':
          description: |-
            **HTTP Status Code:** `400` <br> **Error Code:** `1010` <br>
            User does not belong to this account: {accountId}.<br>
            **Error Code:** `3303` <br>
            You can not delete an uncompleted meeting.
        '404':
          description: |
            **HTTP Status Code:** `404` <br>
            Meeting recording file not found<br>
            **Error Code:** `1001` <br>
            User {userId} does not exist or does not belong to this account.<br>
            **Error Code:** `3301` <br> There is no recording for this meeting.
      security:
        - OAuth: []
  '/meetings/{meetingId}/recordings/status':
    put:
      summary: Recover meeting recordings
      description: |-
        Zoom allows users to recover recordings from trash for up to 30 days from the deletion date. Use this API to recover all deleted [Cloud Recordings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording) of a specific meeting.<br><br>
        **Scopes**: `recording:write:admin` `recording:write`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>
        **Prerequisites**:<br>
        * A Pro user with Cloud Recording enabled.
      tags:
        - Cloud Recording
      operationId: recordingStatusUpdate
      parameters:
        - $ref: '#/parameters/MeetingId4Recording'
        - in: body
          name: body
          required: true
          schema:
            properties:
              action:
                type: string
                enum:
                  - recover
                x-enum-descriptions:
                  - recover meeting recording
          x-examples:
            application/json:
              action: recover
      responses:
        '200':
          description: |-
            **Error Code:** `200`<br>
            You do not have the right permissions.
        '204':
          description: |-
            **HTTP Status Code:** `204` <br>
            Deleted recordings of the meeting recovered.
          examples: {}
        '400':
          description: |-
            **HTTP Status Code:** `400` <br>
            **Error Code:** `1010`<br>
            User does not belong to this account: {accountId}.
        '404':
          description: |+
            **HTTP Status Code:** `404` <br>
            Meeting recording not found.<br> **Error Code:** `1001`<br>  User does not exist: {userId}.<br>
            **Error Code:** `3301`<br>There is no recording for this meeting.



      security:
        - OAuth: []
  '/meetings/{meetingId}/recordings/{recordingId}/status':
    put:
      summary: Recover a single recording
      description: |
        Zoom allows users to recover recordings from trash for up to 30 days from the deletion date. Use this API to recover a single recording file from the meeting.<br>
        **Scopes:** `recording:write:admin` `recording:write`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>
      tags:
        - Cloud Recording
      operationId: recordingStatusUpdateOne
      parameters:
        - $ref: '#/parameters/MeetingId4Recording'
        - $ref: '#/parameters/RecordingId'
        - in: body
          name: body
          required: true
          schema:
            properties:
              action:
                type: string
                enum:
                  - recover
                x-enum-descriptions:
                  - recover meeting recording
          x-examples:
            application/json:
              action: recover
      responses:
        '204':
          description: |+
            **HTTP Status Code:** `204` <br> Meeting recording recovered.

        '400':
          description: |-
            **HTTP Status Code:** `400` <br>
            **Error Code:** `1010` <br>
            User does not belong to this account: {accountId}.
        '404':
          description: |-
            **HTTP Status Code:** `404` <br>Meeting recording not found.<br>
            **Error Code:** `1001` <br> User {userId} does not exist or does not belong to this account.<br>
            **Error Code:** `3301`There is no recording for this meeting.
      security:
        - OAuth: []
  '/meetings/{meetingId}/recordings/settings':
    get:
      summary: Get meeting recording settings
      description: |-
        Retrieve settings applied to a meeting's [Cloud Recording](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording).<br><br>
        **Scopes**: `recording:read:admin` `recording:read`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` <br>
      tags:
        - Cloud Recording
      operationId: recordingSettingUpdate
      parameters:
        - $ref: '#/parameters/MeetingId4Recording'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` <br>
            Meeting recording settings returned
          schema:
            $ref: '#/definitions/RecordingSettings'
          examples:
            application/json:
              share_recording: none
              recording_authentication: true
              authentication_option: abc
              authentication_domains: ccc.com
              viewer_download: false
              password: dAbyzK1
              on_demand: false
              approval_type: 1
              send_email_to_host: true
              show_social_share_buttons: true
        '404':
          description: |-
            **HTTP Status Code:** `404` <br>
            Meeting recording not found.
      security:
        - OAuth: []
    patch:
      summary: Update meeting recording settings
      description: |-
        Update settings applied to a meeting's [Cloud Recording](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording)<br><br>
        **Scopes**: `recording:write:admin` `recording:write`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` <br>
      tags:
        - Cloud Recording
      operationId: recordingSettingsUpdate
      parameters:
        - $ref: '#/parameters/MeetingId4Recording'
        - in: body
          name: body
          required: true
          description: Meeting recording Settings
          schema:
            $ref: '#/definitions/RecordingSettings'
          x-examples:
            application/json:
              share_recording: internally
              recording_authentication: true
              authentication_option: abc
              authentication_domains: ccc.com
              viewer_download: false
              password: 18idxa
              on_demand: true
              approval_type: 1
              send_email_to_host: true
              show_social_share_buttons: true
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` <br>
            Meeting recording setting's updated
        '404':
          description: |-
            **HTTP Status Code:** `404` <br>
            Meeting recording not found.
      security:
        - OAuth: []
  '/meetings/{meetingId}/recordings/registrants':
    get:
      summary: List recording registrants
      description: |
        Cloud Recordings of past Zoom Meetings can be made [on-demand](https://support.zoom.us/hc/en-us/articles/360000488283-On-demand-Recordings). Users should be [registered](https://marketplace.zoom.us/docs/api-reference/zoom-api/cloud-recording/meetingrecordingregistrantcreate) to view these recordings.

        Use this API to list registrants of **On-demand Cloud Recordings** of a past meeting.<br>
        **Scopes:** `recording:read:admin`, `recording:read`.<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      tags:
        - Cloud Recording
      operationId: meetingRecordingRegistrants
      parameters:
        - $ref: '#/parameters/MeetingId'
        - $ref: '#/parameters/RegistrantStatus'
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/PageNumber'
        - $ref: '#/parameters/NextPageToken'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Registrants returned.
          schema:
            $ref: '#/definitions/MeetingRecordingRegistrantList'
          examples:
            application/json:
              page_count: 0
              page_number: 1
              page_size: 30
              total_records: 1
              registrants:
                - id: sskldsbdABBBBBBBB
                  first_name: Shri
                  last_name: Shree
                  email: shriee@somekindofmail.com
                  address: dsdsfsf st
                  city: Paris
                  country: France
                  zip: '3555354'
                  state: astate
                  phone: '000000'
                  industry: sfsdf
                  org: dsadsfsf
                  job_title: sfsdfsdf
                  purchasing_time_frame: Within a month
                  role_in_purchase_process: Influencer
                  no_of_employees: '40'
                  comments: Amazing!
                  custom_questions: []
                  status: approved
                  create_time: '2019-08-29T23:04:08Z'
                  share_url: 'https://zoom.us/recording/share/IlA1ABCDDJHKNDkkkkkkkTziMw'
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            Meeting recording not found.
      security:
        - OAuth: []
    post:
      summary: Create a recording registrant
      description: |+
        Cloud Recordings of past Zoom Meetings can be made [on-demand](https://support.zoom.us/hc/en-us/articles/360000488283-On-demand-Recordings). Users should be [registered](https://marketplace.zoom.us/docs/api-reference/zoom-api/cloud-recording/meetingrecordingregistrantcreate) to view these recordings.

        Use this API to register a user to gain access to **On-demand Cloud Recordings** of a past meeting.<br>
        **Scopes:** `recording:write:admin`, `recording:write`.<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`

      tags:
        - Cloud Recording
      operationId: meetingRecordingRegistrantCreate
      parameters:
        - $ref: '#/parameters/MeetingId'
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/MeetingRegistrant'
          x-examples:
            application/json:
              email: mmyemaill@mycompanydomain.com
              first_name: Samriddhi
              last_name: Harris
              address: 123 Main St
              city: San Jose
              country: US
              zip: '95550'
              state: CA
              phone: 000-444-4444
              industry: Tech
              org: IT
              job_title: DA
              purchasing_time_frame: More Than 6 Months
              role_in_purchase_process: Influencer
              no_of_employees: 1-20
              comments: Welcome to the meeting recording
              custom_questions:
                - title: Favorite thing about Zoom
                  value: Meet Happy
      responses:
        '201':
          description: |-
            **HTTP Status Code:** `201` <br>
            Registration submitted.
          schema:
            type: object
            properties:
              registrant_id:
                type: string
                description: Registrant ID
              id:
                type: integer
                description: '[Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in "**long**" format(represented as int64 data type in JSON), also known as the meeting number.'
                format: int64
              topic:
                type: string
                description: Meeting Topic
              share_url:
                type: string
                description: 'Share URL for the on-demand recording. This includes the “tk” token for the registrant. This is similar to the token that Zoom returns in the URL response to join a registered meeting, for example: `url?tk=xxxx`. Except while the meeting registration token can be used to join the meeting, this token can only be used to watch the recording.'
          examples:
            application/json:
              registrant_id: veniamKIW1Sonseq
              id: 12345666
              topic: cupidatat dolore quis minim aliquip
              share_url: 'https://zoom.us/recording/share/IpAAABBBBBBA1aqqkzFFgiJ2jpR'
        '404':
          description: |-
            **HTTP Status Code:** `404` <br>
            Meeting recording not found
      security:
        - OAuth: []
  '/meetings/{meetingId}/recordings/registrants/status':
    put:
      summary: Update registrant's status
      description: |
        A registrant can either be approved or denied from viewing the [on-demand](https://support.zoom.us/hc/en-us/articles/360000488283-On-demand-Recordings) recording.
        Use this API to update a registrant's status.

        **Scopes:** `recording:write:admin`, `recording:write`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      tags:
        - Cloud Recording
      operationId: meetingRecordingRegistrantStatus
      parameters:
        - $ref: '#/parameters/MeetingId'
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/RecordingRegistrantStatus'
          x-examples:
            application/json:
              action: approve
              registrants:
                - id: '644339795'
                - id: '44220011'
                - id: '55226611'
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`<br>
            Registrant status updated.
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            Meeting recording or Registrant not found
      security:
        - OAuth: []
  '/meetings/{meetingId}/recordings/registrants/questions':
    get:
      summary: Get registration questions
      description: |
        For [on-demand](https://support.zoom.us/hc/en-us/articles/360000488283-On-demand-Recordings) meeting recordings, you can include fields with questions that will be shown to registrants when they register to view the recording.

        Use this API to retrieve a list of questions that are displayed for users to complete when registering to view the recording of a specific meeting.<br>
        **Scopes:** `recording:read:admin`, `recording:read`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      tags:
        - Cloud Recording
      operationId: recordingRegistrantsQuestionsGet
      parameters:
        - $ref: '#/parameters/MeetingId4Recording'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Recording Registrant Question object returned.
          schema:
            $ref: '#/definitions/RecordingRegistrantQuestions'
          examples:
            application/json:
              questions:
                - field_name: address
                  required: false
              custom_questions:
                - title: Would you like us to contact you for a survey?
                  type: multiple
                  required: false
                  answers:
                    - 'Yes'
                    - 'No'
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            Meeting recording or registrant not found.
      security:
        - OAuth: []
    patch:
      summary: Update registration questions
      description: |
        For [on-demand](https://support.zoom.us/hc/en-us/articles/360000488283-On-demand-Recordings) meeting recordings, you can include fields with questions that will be shown to registrants when they register to view the recording.

        Use this API to update registration questions that are to be answered by users while registering to view a recording.<br>
        **Scopes:** `recording:write:admin`, `recording:write`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>
      tags:
        - Cloud Recording
      operationId: recordingRegistrantQuestionUpdate
      parameters:
        - $ref: '#/parameters/MeetingId4Recording'
        - in: body
          name: body
          required: true
          description: Recording Registrant Questions
          schema:
            allOf:
              - $ref: '#/definitions/RecordingRegistrantQuestions'
          x-examples:
            application/json:
              questions:
                - field_name: job_title
                  required: true
                - field_name: last_name
                  required: true
              custom_questions:
                - title: Are you looking for a job?
                  type: short
                  required: false
                - title: What kind of job are you looking for?
                  type: multiple
                  required: false
                  answers:
                    - Full-time
                    - Part-time
                    - Internship
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `200`<br>
            Recording Registrant Questions Updated
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            Meeting recording or Registrant not found
      security:
        - OAuth: []
  /metrics/meetings:
    get:
      summary: List meetings
      description: |-
        List total live or past meetings that occurred during a specified period of time. This overview will show if features such as audio, video, screen sharing, and recording were being used in the meeting. You can also see the license types of each user on your account.<br> You can specify a monthly date range for the dashboard data using the `from` and `to` query parameters. The month should fall within the last six months.<br>
        **Scopes:** `dashboard_meetings:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Resource-intensive`<br><br>
        **Prerequisites:** <br>
        * Business or a higher plan.<br><br>
      tags:
        - Dashboards
      operationId: dashboardMeetings
      parameters:
        - $ref: '#/parameters/MeetingTypePast'
        - $ref: '#/parameters/FromDate'
        - $ref: '#/parameters/ToDate'
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/NextPageToken'
        - in: query
          name: include_fields
          type: string
          enum:
            - tracking_fields
          description: Set the value of this field to "tracking_fields" if you would like to include tracking fields of each meeting in the response.
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Meetings returned.<br>
            Only available for paid accounts that have dashboard feature enabled.
          schema:
            allOf:
              - type: object
                properties:
                  from:
                    type: string
                    format: date
                    description: Start date for this report in 'yyyy-mm-dd' format.
                  to:
                    type: string
                    format: date
                    description: End date for this report in 'yyyy-mm-dd' format.
              - $ref: '#/definitions/PaginationToken'
              - type: object
                properties:
                  meetings:
                    type: array
                    description: Array of meeting objects.
                    items:
                      $ref: '#/definitions/listmeetingmetrics'
          examples:
            application/json:
              from: 'string [date]'
              to: 'string [date]'
              page_count: integer
              page_size: integer
              total_records: integer
              next_page_token: string
              meetings:
                - uuid: 'string [uuid]'
                  id: integer
                  topic: string
                  host: string
                  email: string
                  user_type: string
                  start_time: 'string [date-time]'
                  end_time: 'string [date-time]'
                  duration: string
                  participants: integer
                  has_pstn: boolean
                  has_voip: boolean
                  has_3rd_party_audio: boolean
                  has_video: boolean
                  has_screen_share: boolean
                  has_recording: boolean
                  has_sip: boolean
        '300':
          description: |-
            **Error Code:** `300`<br>
            The next page token is invalid or expired.
      security:
        - OAuth: []
  '/metrics/meetings/{meetingId}':
    get:
      summary: Get meeting details
      description: |-
        Get details on live or past meetings. This overview will show if features such as audio, video, screen sharing, and recording were being used in the meeting. You can also see the license types of each user on your account.<br> You can specify a monthly date range for the dashboard data using the `from` and `to` query parameters. The month should fall within the last six months.  <br>
        **Scopes:** `dashboard_meetings:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>
        **Prerequisites:** <br>
        * Business or a higher plan.
      tags:
        - Dashboards
      operationId: dashboardMeetingDetail
      parameters:
        - $ref: '#/parameters/MeetingId4Metrics'
        - $ref: '#/parameters/MeetingTypePast3'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Meeting returned.<br>
            Only available for paid accounts that have enabled the dashboard feature.
          schema:
            $ref: '#/definitions/MeetingMetric'
          examples:
            application/json:
              uuid: carreter@-2c9b447f3
              id: 33281536
              topic: My meeting
              host: cool host
              email: so@djkfsfj.gh
              user_type: Pro|Webinar100
              start_time: '2007-06-16T16:55:42.078Z'
              end_time: '2007-06-16T16:59:42.078Z'
              duration: '30'
              participants: 4874645
              has_pstn: false
              has_voip: false
              has_3rd_party_audio: false
              has_video: false
              has_screen_share: false
              has_recording: false
              has_sip: false
              in_room_participants: 3
        '300':
          description: |-
            **Error Code:** `300`<br>
            Can not access webinar info, {meetingId}.
        '404':
          description: |
            **HTTP Status Code:** `404`<br>
            **Error Code:** `3001`<br>
            Meeting ID is invalid or the meeting has not ended yet.<br>
            This meeting's details are not available.
      security:
        - OAuth: []
  '/metrics/meetings/{meetingId}/participants':
    get:
      summary: List meeting participants
      description: |-
        Get a list of participants from live or past meetings.<br><br>
        If you do not provide the `type` query parameter, the default value will be set to `live` and thus, you will only see metrics for participants in a live meeting, if any meeting is currently being conducted. To view metrics on past meeting participants, provide the appropriate value for `type`. <br> You can specify a monthly date range for the dashboard data using the `from` and `to` query parameters. The month should fall within the last six months.

        **Scopes:** `dashboard_meetings:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>
        **Prerequisites:** Business or a higher plan.
      tags:
        - Dashboards
      operationId: dashboardMeetingParticipants
      parameters:
        - $ref: '#/parameters/MeetingId4Metrics'
        - $ref: '#/parameters/MeetingTypePast3'
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/NextPageToken'
        - in: query
          name: include_fields
          type: string
          description: 'Provide `registrant_id` as the value for this field if you would like to see the registrant ID attribute in the response of this API call. A registrant ID is a unique identifier of a [meeting registrant](https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/meetingregistrants). This is not supported for `live` meeting types.'
          enum:
            - registrant_id
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Meeting participants returned.<br>
            Only available for paid accounts that have enabled the dashboard feature.
          schema:
            allOf:
              - $ref: '#/definitions/PaginationToken'
              - type: object
                properties:
                  participants:
                    type: array
                    description: 'Array of participant session objects. If a participant left a meeting and rejoined the same meeting, their information will appear multiple times (as many times as they joined the meeting).'
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: 'Universally unique identifier of the Participant. It is the same as the User ID of the participant if the participant joins the meeting by logging into Zoom. If the participant joins the meeting without logging in, the value of this field will be blank.'
                        user_id:
                          type: string
                          description: Participant ID. This is a unique ID assigned to the participant joining a meeting and is valid for that meeting only.
                        user_name:
                          type: string
                          description: Participant display name.
                        device:
                          type: string
                          description: |-
                            The type of device using which the participant joined the meeting. The possible values for this field are:
                            * `Phone`: Participant joined via PSTN.
                            * `H.323/SIP`: Participant joined via an H.323 or SIP device.
                            * `Windows`: Participant joined via VoIP using a Windows device.
                            * `Mac`: Participant joined via VoIP using a Mac device.
                            * `iOS`: Participant joined via VoIP using an iOS device.
                            * `Android`: Participant joined via VoIP using an Android device.
                        ip_address:
                          type: string
                          description: Participant's IP address.
                        location:
                          type: string
                          description: Participant's location.
                        network_type:
                          type: string
                          description: Participant's network type.
                          enum:
                            - Wired
                            - Wifi
                            - PPP
                            - Cellular (3G and 4G)
                            - Others
                        microphone:
                          type: string
                          description: The type of Microphone that participant used during the meeting.
                        speaker:
                          type: string
                          description: The type of speaker participant used during the meeting.
                        camera:
                          type: string
                          description: The type of camera used by participant during the meeting.
                        data_center:
                          type: string
                          description: Data Center where participant's meeting data is stored.
                        connection_type:
                          type: string
                          description: Participant connection type.
                        join_time:
                          type: string
                          format: date-time
                          description: The time at which participant joined the meeting.
                        leave_time:
                          type: string
                          format: date-time
                          description: 'The time at which a participant left the meeting. For live meetings, this field will only be returned if a participant has left the ongoing meeting.'
                        share_application:
                          type: boolean
                          description: 'Indicates whether or not a user selected to share an iPhone/iPad app during the screenshare. '
                        share_desktop:
                          type: boolean
                          description: 'Indicates whether or not a user selected to share their desktop during the screenshare. '
                        share_whiteboard:
                          type: boolean
                          description: 'Indicates whether or not a user selected to share their whiteboard during the screenshare. '
                        recording:
                          type: boolean
                          description: Indicates whether or not recording was used during the meeting.
                        pc_name:
                          type: string
                          description: Name of Participant's PC.
                        domain:
                          type: string
                          description: Participant's PC domain.
                        mac_addr:
                          type: string
                          description: Participant's MAC address.
                        harddisk_id:
                          type: string
                          description: Participant's hard disk ID.
                        version:
                          type: string
                          description: Participant's Zoom Client version.
                        in_room_participants:
                          type: integer
                          description: The number of participants who joined via Zoom Room.
                        leave_reason:
                          type: string
                          description: Possible reasons for why participant left the meeting.
                        email:
                          type: string
                          description: Email address of the participant.
                          format: email
                        registrant_id:
                          type: string
                          description: Unique identifier of the registrant. This field is only returned if you entered "registrant_id" as the value of `include_fields` query parameter. This is not supported for `live` meeting types.
                        audio_quality:
                          type: string
                          description: Audio quality of the participant.
                          enum:
                            - ' '
                            - good
                            - fair
                            - poor
                            - bad
                        video_quality:
                          type: string
                          description: Video quality of the participant.
                          enum:
                            - ' '
                            - good
                            - fair
                            - poor
                            - bad
                        screen_share_quality:
                          type: string
                          description: Screen share quality of the participant.
                          enum:
                            - ' '
                            - good
                            - fair
                            - poor
                            - bad
                        customer_key:
                          type: string
                          description: 'Another identifier for the participant. Can be a number or characters, maximum length of 15 characters. '
                          maxLength: 15
                        status:
                          type: string
                          description: |-
                            Indicates whether the participant is in the waiting room or in the meeting.

                            The value of this field can be `in_meeting` or `in_waiting_room`.
                          enum:
                            - in_meeting
                            - in_waiting_room
          examples:
            application/json:
              page_count: 1
              page_size: 30
              total_records: 2
              next_page_token: ''
              participants:
                - id: d52f19c548b88490b5d16fcbd38
                  user_id: 32dsfsd4g5gd
                  user_name: dojo
                  device: WIN
                  ip_address: 127.0.0.1
                  location: New York
                  network_type: Wired
                  microphone: Plantronics BT600
                  camera: FaceTime HD Camera
                  speaker: Plantronics BT600
                  data_center: SC
                  connection_type: P2P
                  join_time: '2019-09-07T13:15:02.837Z'
                  leave_time: '2019-09-07T13:15:09.837Z'
                  share_application: false
                  share_desktop: true
                  share_whiteboard: true
                  recording: false
                  status: in_waiting_room
                  pc_name: dojo's pc
                  domain: Dojo-workspace
                  mac_addr: ' 00:0a:95:9d:68:16'
                  harddisk_id: sed proident in
                  version: 4.4.55383.0716
                  leave_reason: 'Dojo left the meeting.<br>Reason: Host ended the meeting.'
                - id: z8aaaaaaCfp8uQ
                  user_id: '1670000000'
                  user_name: Rea
                  device: Android
                  ip_address: 120.000.000
                  location: San Jose (US)
                  network_type: Wifi
                  data_center: SC
                  connection_type: UDP
                  join_time: '2019-08-02T15:31:48Z'
                  leave_time: '2019-08-02T16:04:12Z'
                  share_application: false
                  share_desktop: false
                  share_whiteboard: false
                  recording: false
                  pc_name: Rea's PC
                  domain: Rea-workspace
                  mac_addr: ''
                  harddisk_id: ''
                  version: 4.4.55383.0716
                  leave_reason: 'Rea left the meeting.<br>Reason: Host closed the meeting.'
        '300':
          description: |-
            **Error Code:** `300`<br>
            Can not access webinar info.<br>
            {meetingId} or the next page token is either invalid or expired.
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            **Error Code:** `3001`<br>
            Meeting ID is invalid or has not ended.
      security:
        - OAuth: []
  '/metrics/meetings/{meetingId}/participants/{participantId}/qos':
    get:
      summary: Get meeting participant QoS
      description: |-
        Retrieve the quality of service for participants from live or past meetings. This data indicates the connection quality for sending/receiving video, audio, and shared content. If nothing is being sent or received at that time, no information will be shown in the fields. <br><br>
        **Scopes:** `dashboard_meetings:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`
      tags:
        - Dashboards
      operationId: dashboardMeetingParticipantQOS
      parameters:
        - $ref: '#/parameters/MeetingId4Metrics'
        - $ref: '#/parameters/ParticipantId'
        - $ref: '#/parameters/MeetingTypePast2'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Meeting participant QOS returned.<br>
            Only available for paid account that have enabled the dashboard feature.
          schema:
            $ref: '#/definitions/QOSParticipant'
          examples:
            application/json:
              user_id: 'string [uuid]'
              user_name: string
              device: string
              ip_address: string
              location: string
              join_time: 'string [date-time]'
              leave_time: 'string [date-time]'
              pc_name: string
              domain: string
              mac_addr: string
              harddisk_id: string
              version: string
              user_qos:
                - date_time: 'string [date-time]'
                  audio_input:
                    bitrate: string
                    latency: string
                    jitter: string
                    avg_loss: string
                    max_loss: string
                  audio_output:
                    bitrate: string
                    latency: string
                    jitter: string
                    avg_loss: string
                    max_loss: string
                  video_input:
                    bitrate: string
                    latency: string
                    jitter: string
                    avg_loss: string
                    max_loss: string
                    resolution: string
                    frame_rate: string
                  video_output:
                    bitrate: string
                    latency: string
                    jitter: string
                    avg_loss: string
                    max_loss: string
                    resolution: string
                    frame_rate: string
                  as_input:
                    bitrate: string
                    latency: string
                    jitter: string
                    avg_loss: string
                    max_loss: string
                    resolution: string
                    frame_rate: string
                  as_output:
                    bitrate: string
                    latency: string
                    jitter: string
                    avg_loss: string
                    max_loss: string
                    resolution: string
                    frame_rate: string
                  cpu_usage:
                    zoom_min_cpu_usage: string
                    zoom_avg_cpu_usage: string
                    zoom_max_cpu_usage: string
                    system_max_cpu_usage: string
        '300':
          description: |-
            **Error Code:** `300`<br>
            Can not access webinar info, {meetingId}.
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            **Error Code:** `3001`<br>
            This meeting's detail info is not available.<br>
            This meeting has not ended yet or the Meeting ID is invalid.
      security:
        - OAuth: []
  '/metrics/meetings/{meetingId}/participants/qos':
    get:
      summary: List meeting participants QoS
      description: |-
        Get a list of meeting participants from live or past meetings along with the quality of service they recieve during the meeting such as connection quality for sending/receiving video, audio, and shared content.<br>If you do not provide the `type` query parameter, the default value will be set to `live` and thus, you will only see metrics for participants in a live meeting, if any meeting is currently being conducted. To view metrics on past meeting participants, provide the appropriate value for `type`.<br> <br> You can specify a monthly date range for the dashboard data using the `from` and `to` query parameters. The month should fall within the last six months.<br><br>
        **Scopes:** `dashboard_meetings:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>
        **Prerequisites:** <br>
        * Business or a higher plan.
      tags:
        - Dashboards
      operationId: dashboardMeetingParticipantsQOS
      parameters:
        - $ref: '#/parameters/MeetingId4Metrics'
        - $ref: '#/parameters/MeetingTypePast2'
        - $ref: '#/parameters/PageSize4Qos'
        - $ref: '#/parameters/NextPageToken'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Meeting participants returned.<br>
            Only available for paid accounts that have enabled the dashboard feature.
          schema:
            $ref: '#/definitions/QOSParticipantList'
          examples:
            application/json:
              page_count: 'integer [int64]'
              page_size: integer
              total_records: 'integer [int64]'
              next_page_token: string
              participants:
                - user_id: 'string [uuid]'
                  user_name: string
                  device: string
                  ip_address: string
                  location: string
                  join_time: 'string [date-time]'
                  leave_time: 'string [date-time]'
                  pc_name: string
                  domain: string
                  mac_addr: string
                  harddisk_id: string
                  version: string
                  user_qos:
                    - date_time: 'string [date-time]'
                      audio_input:
                        bitrate: string
                        latency: string
                        jitter: string
                        avg_loss: string
                        max_loss: string
                      audio_output:
                        bitrate: string
                        latency: string
                        jitter: string
                        avg_loss: string
                        max_loss: string
                      video_input:
                        bitrate: string
                        latency: string
                        jitter: string
                        avg_loss: string
                        max_loss: string
                        resolution: string
                        frame_rate: string
                      video_output:
                        bitrate: string
                        latency: string
                        jitter: string
                        avg_loss: string
                        max_loss: string
                        resolution: string
                        frame_rate: string
                      as_input:
                        bitrate: string
                        latency: string
                        jitter: string
                        avg_loss: string
                        max_loss: string
                        resolution: string
                        frame_rate: string
                      as_output:
                        bitrate: string
                        latency: string
                        jitter: string
                        avg_loss: string
                        max_loss: string
                        resolution: string
                        frame_rate: string
                      cpu_usage:
                        zoom_min_cpu_usage: string
                        zoom_avg_cpu_usage: string
                        zoom_max_cpu_usage: string
                        system_max_cpu_usage: string
        '300':
          description: |-
            **Error Code:** `300`<br>
            Can not access webinar info, {meetingId}.<br>
            The next page token is either invalid or expired.
        '404':
          description: |
            **HTTP Status Code:** `404`<br>
            **Error Code:** `3001`<br>
            This meeting's detail info is not available.<br>
            The Meeting ID is not valid or the meeting has not ended yet.
      security:
        - OAuth: []
  '/metrics/meetings/{meetingId}/participants/sharing':
    get:
      summary: Get sharing/recording details
      description: |-
        Retrieve the sharing and recording details of participants from live or past meetings.<br>
        **Scopes:** `dashboard_meetings:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>
        **Prerequisites:** <br>
        * Business or a higher plan.
      tags:
        - Dashboards
      operationId: dashboardMeetingParticipantShare
      parameters:
        - $ref: '#/parameters/MeetingId4Metrics'
        - $ref: '#/parameters/MeetingTypePast2'
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/PageToken'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Meeting participants returned.
          schema:
            allOf:
              - $ref: '#/definitions/PaginationToken'
              - type: object
                properties:
                  participants:
                    type: array
                    description: Array of participants.
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: 'Universally unique identifier of the Participant. It is the same as the User ID of the participant if the participant joins the meeting by logging into Zoom. If the participant joins the meeting without logging in, the value of this field will be blank.'
                        user_id:
                          type: string
                          description: Participant ID. This is a unique ID assigned to the participant joining a meeting and is valid for that meeting only.
                        user_name:
                          type: string
                          description: Participant display name.
                        details:
                          type: array
                          description: Array of sharing and recording details.
                          items:
                            type: object
                            properties:
                              content:
                                type: string
                                description: Type of content shared.
                              start_time:
                                type: string
                                description: Start time of sharing.
                              end_time:
                                type: string
                                description: End time of sharing.
          examples:
            application/json:
              page_count: integer
              page_size: integer
              total_records: integer
              next_page_token: string
              participants:
                - id: string
                  user_id: string
                  user_name: string
                  details:
                    - content: string
                      start_time: string
                      end_time: string
        '300':
          description: |-
            **Error Code:** `300`<br>
            Can not access webinar info, {meetingId}.
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            **Error Code:** `3001`<br>
            This meeting's detail info is not available or ID is not valid.
      security:
        - OAuth: []
  /metrics/webinars:
    get:
      summary: List webinars
      description: |+
        List all the live or past webinars from a specified period of time. <br><br>
        **Scopes:** `dashboard_webinars:read:admin`<br>
        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Resource-intensive`<br>
        **Prerequisites:**<br>
        * Business, Education or API Plan with Webinar add-on.


      tags:
        - Dashboards
      operationId: dashboardWebinars
      parameters:
        - $ref: '#/parameters/WebinarTypePast'
        - $ref: '#/parameters/FromDate'
        - $ref: '#/parameters/ToDate'
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/NextPageToken'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Meetings returned.<br>
            Only available for paid accounts that have enabled the Dashboard feature.
          schema:
            allOf:
              - type: object
                properties:
                  from:
                    type: string
                    format: date
                    description: Start date for this report in 'yyyy-mm-dd' format.
                  to:
                    type: string
                    format: date
                    description: End date for this report in 'yyyy-mm-dd' format.
              - $ref: '#/definitions/PaginationToken'
              - type: object
                properties:
                  webinars:
                    type: array
                    description: Array of webinar objects.
                    items:
                      $ref: '#/definitions/WebinarMetric'
          examples:
            application/json:
              from: 'string [date]'
              to: 'string [date]'
              page_count: integer
              page_size: integer
              total_records: integer
              next_page_token: string
              webinars:
                - uuid: 'string [uuid]'
                  id: integer
                  topic: string
                  host: string
                  email: string
                  user_type: string
                  start_time: 'string [date-time]'
                  end_time: 'string [date-time]'
                  duration: string
                  participants: integer
                  has_pstn: boolean
                  has_voip: boolean
                  has_3rd_party_audio: boolean
                  has_video: boolean
                  has_screen_share: boolean
                  has_recording: boolean
                  has_sip: boolean
        '300':
          description: |-
            **Error Code:** `200`<br>
            The next page token is invalid or has expired.
      security:
        - OAuth: []
  '/metrics/webinars/{webinarId}':
    get:
      summary: Get webinar details
      description: |+
        Retrieve details from live or past webinars.<br><br>
        **Scopes:** `dashboard_webinars:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>
        **Prerequisites:**<br>
        * Business, Education or API Plan with Webinar add-on.

      tags:
        - Dashboards
      operationId: dashboardWebinarDetail
      parameters:
        - $ref: '#/parameters/WebinarId4Metrics'
        - $ref: '#/parameters/WebinarTypePast2'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Webinar details returned.<br>
            Only available for paid accounts that have enabled the Dashboard feature.
          schema:
            $ref: '#/definitions/WebinarMetric'
          examples:
            application/json: |-
              {
                  "uuid": "CJaaaaaaaEV6A==",
                  "id": 00001,
                  "topic": "MyTestWebinar",
                  "host": "Henry Chao",
                  "email": "hc@sdfdfdsfdfsdf.com",
                  "user_type": "Pro|Webinar1000",
                  "start_time": "2019-07-16T17:14:39Z",
                  "end_time": "2019-07-16T17:26:20Z",
                  "duration": 12,
                  "participants": 1,
                  "has_pstn": false,
                  "has_voip": false,
                  "has_3rd_party_audio": false,
                  "has_video": false,
                  "has_screen_share": false,
                  "has_recording": false,
                  "has_sip": false
              }
        '300':
          description: |-
            **Error Code:** `200`<br>
            Can not access webinar info, {webinarId}.
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            **Error Code:** `3001`<br>
            The webinar has not ended yet or the Webinar ID is not valid.<br>
            This webinar's detail is not available.
      security:
        - OAuth: []
  '/metrics/webinars/{webinarId}/participants':
    get:
      summary: Get webinar participants
      description: |+
        Retrieve details on participants from live or past webinars.<br><br>
        **Scopes:** `dashboard_webinars:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>
        **Prerequisites:**<br>
        * Business, Education or API Plan with Webinar add-on.

      tags:
        - Dashboards
      operationId: dashboardWebinarParticipants
      parameters:
        - $ref: '#/parameters/WebinarId4Metrics'
        - $ref: '#/parameters/WebinarTypePast2'
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/NextPageToken'
        - in: query
          name: include_fields
          type: string
          description: |+
            Provide 'registrant_id' as the value for this field if you would like to see the registrant ID attribute in the response of this API call. A registrant ID is a unique identifier of a [webinar registrant](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/webinarregistrants).<br>

          enum:
            - registrant_id
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Webinar participants returned.
          schema:
            allOf:
              - $ref: '#/definitions/PaginationToken'
              - type: object
                properties:
                  participants:
                    type: array
                    description: Array of user objects.
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: 'Universally unique identifier of the Participant. It is the same as the User ID of the participant if the participant joins the meeting by logging into Zoom. If the participant joins the meeting without logging in, the value of this field will be blank.'
                        user_id:
                          type: string
                          description: Participant ID. This is a unique ID assigned to the participant joining a meeting and is valid for that meeting only.
                        user_name:
                          type: string
                          description: Participant display name.
                        device:
                          type: string
                          description: |-


                            The type of device using which the participant joined the webinar. The possible values for this field are:
                            * `Phone`: Participant joined via PSTN.
                            * `H.323/SIP`: Participant joined via an H.323 or SIP device.
                            * `Windows`: Participant joined via VoIP using a Windows device.
                            * `Mac`: Participant joined via VoIP using a Mac device.
                            * `iOS`: Participant joined via VoIP using an iOS device.
                            * `Android`: Participant joined via VoIP using an Android device.
                        ip_address:
                          type: string
                          description: Participant IP address.
                        location:
                          type: string
                          description: Participant location.
                        network_type:
                          type: string
                          description: Participant network type.
                        microphone:
                          type: string
                          description: Participant microphone.
                        speaker:
                          type: string
                          description: Participant speaker.
                        data_center:
                          type: string
                          description: Participant data center.
                        connection_type:
                          type: string
                          description: Participant connection type.
                        join_time:
                          type: string
                          format: date-time
                          description: Participant join time.
                        leave_time:
                          type: string
                          format: date-time
                          description: Participant leave time.
                        share_application:
                          type: boolean
                          description: Did the participant share an application?
                        share_desktop:
                          type: boolean
                          description: Did the participant share their desktop?
                        share_whiteboard:
                          type: boolean
                          description: Did the participant share their whiteboard?
                        recording:
                          type: boolean
                          description: Participant record?
                        pc_name:
                          type: string
                          description: Participant PC name.
                        domain:
                          type: string
                          description: Participant domain.
                        mac_addr:
                          type: string
                          description: Participant MAC address.
                        harddisk_id:
                          type: string
                          description: Participant hard disk ID.
                        version:
                          type: string
                          description: Participant version.
                        leave_reason:
                          type: string
                          description: |
                            Possible reasons for why a participant left the Webinar.
                        email:
                          type: string
                          description: Email address of the participant.
                        registrant_id:
                          type: string
                          description: Unique identifier of the registrant. This field is only returned if you entered "registrant_id" as the value of `include_fields` query parameter.
                        audio_quality:
                          type: string
                          description: Audio quality of the participant.
                          enum:
                            - ' '
                            - good
                            - fair
                            - poor
                            - bad
                        video_quality:
                          type: string
                          description: Video quality of the participant.
                          enum:
                            - ' '
                            - good
                            - fair
                            - poor
                            - bad
                        screen_share_quality:
                          type: string
                          description: Screen share quality of the participant.
                          enum:
                            - ' '
                            - good
                            - fair
                            - poor
                            - bad
                        customer_key:
                          type: string
                          description: 'Another identifier for the participant. Can be a number or characters, maximum length of 15 characters. '
                          maxLength: 15
          examples:
            application/json:
              page_count: integer
              page_size: integer
              total_records: integer
              next_page_token: string
              participants:
                - id: 'string [uuid]'
                  user_id: string
                  user_name: string
                  device: string
                  ip_address: string
                  location: string
                  network_type: string
                  microphone: string
                  speaker: string
                  data_center: string
                  connection_type: string
                  join_time: 'string [date-time]'
                  leave_time: 'string [date-time]'
                  share_application: boolean
                  share_desktop: boolean
                  share_whiteboard: boolean
                  recording: boolean
                  pc_name: string
                  domain: string
                  mac_addr: string
                  harddisk_id: string
                  version: string
                  leave_reason: string
        '300':
          description: |-
            **Error Code:** `300`<br>
            Can not access webinar info, {webinarId}.
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            **Error Code:** `3001`<br>
            This webinar's detail info is not available or ID is not valid.
      security:
        - OAuth: []
  '/metrics/webinars/{webinarId}/participants/{participantId}/qos':
    get:
      summary: Get webinar participant QoS
      description: |
        Retrieve details on the quality of service that participants from live or past webinars recieved.<br>This data indicates the connection quality for sending/receiving video, audio, and shared content. If nothing is being sent or received at that time, no information will be shown in the fields.<br>
        **Scopes:** `dashboard_webinars:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy` <br>
        **Prerequisites:** <br>
        * Business, Education or API Plan with Zoom Rooms set up.
      tags:
        - Dashboards
      operationId: dashboardWebinarParticipantQOS
      parameters:
        - $ref: '#/parameters/WebinarId4Metrics'
        - $ref: '#/parameters/ParticipantId'
        - $ref: '#/parameters/WebinarTypePast2'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Webinar participant QOS returned.
          schema:
            $ref: '#/definitions/QOSParticipant'
          examples:
            application/json:
              user_id: 'string [uuid]'
              user_name: string
              device: string
              ip_address: string
              location: string
              join_time: 'string [date-time]'
              leave_time: 'string [date-time]'
              pc_name: string
              domain: string
              mac_addr: string
              harddisk_id: string
              version: string
              user_qos:
                - date_time: 'string [date-time]'
                  audio_input:
                    bitrate: string
                    latency: string
                    jitter: string
                    avg_loss: string
                    max_loss: string
                  audio_output:
                    bitrate: string
                    latency: string
                    jitter: string
                    avg_loss: string
                    max_loss: string
                  video_input:
                    bitrate: string
                    latency: string
                    jitter: string
                    avg_loss: string
                    max_loss: string
                    resolution: string
                    frame_rate: string
                  video_output:
                    bitrate: string
                    latency: string
                    jitter: string
                    avg_loss: string
                    max_loss: string
                    resolution: string
                    frame_rate: string
                  as_input:
                    bitrate: string
                    latency: string
                    jitter: string
                    avg_loss: string
                    max_loss: string
                    resolution: string
                    frame_rate: string
                  as_output:
                    bitrate: string
                    latency: string
                    jitter: string
                    avg_loss: string
                    max_loss: string
                    resolution: string
                    frame_rate: string
                  cpu_usage:
                    zoom_min_cpu_usage: string
                    zoom_avg_cpu_usage: string
                    zoom_max_cpu_usage: string
                    system_max_cpu_usage: string
        '300':
          description: |-
            **Error Code:** `300`<br>
            Can not access webinar info, {webinarId}.
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            **Error Code:** `3001`<br>
            This webinar's detail info is not available or ID is not valid.
      security:
        - OAuth: []
  '/metrics/webinars/{webinarId}/participants/qos':
    get:
      summary: List webinar participant QoS
      description: |+
        Retrieve a list of participants from live or past webinars and the quality of service they received.<br>This data indicates the connection quality for sending/receiving video, audio, and shared content. If nothing is being sent or received at that time, no information will be shown in the fields.<br>
        **Scopes:** `dashboard_webinars:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>
        **Prerequisites:**
        * Business, Education or API Plan with Webinar add-on.

      tags:
        - Dashboards
      operationId: dashboardWebinarParticipantsQOS
      parameters:
        - $ref: '#/parameters/WebinarId4Metrics'
        - $ref: '#/parameters/WebinarTypePast2'
        - $ref: '#/parameters/PageSize4Qos'
        - $ref: '#/parameters/NextPageToken'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Webinar participants returned.<br>
            Only available for paid accounts that have enabled the Dashboard feature.
          schema:
            $ref: '#/definitions/QOSParticipantList'
          examples:
            application/json:
              page_count: 'integer [int64]'
              page_size: integer
              total_records: 'integer [int64]'
              next_page_token: string
              participants:
                - user_id: 'string [uuid]'
                  user_name: string
                  device: string
                  ip_address: string
                  location: string
                  join_time: 'string [date-time]'
                  leave_time: 'string [date-time]'
                  pc_name: string
                  domain: string
                  mac_addr: string
                  harddisk_id: string
                  version: string
                  user_qos:
                    - date_time: 'string [date-time]'
                      audio_input:
                        bitrate: string
                        latency: string
                        jitter: string
                        avg_loss: string
                        max_loss: string
                      audio_output:
                        bitrate: string
                        latency: string
                        jitter: string
                        avg_loss: string
                        max_loss: string
                      video_input:
                        bitrate: string
                        latency: string
                        jitter: string
                        avg_loss: string
                        max_loss: string
                        resolution: string
                        frame_rate: string
                      video_output:
                        bitrate: string
                        latency: string
                        jitter: string
                        avg_loss: string
                        max_loss: string
                        resolution: string
                        frame_rate: string
                      as_input:
                        bitrate: string
                        latency: string
                        jitter: string
                        avg_loss: string
                        max_loss: string
                        resolution: string
                        frame_rate: string
                      as_output:
                        bitrate: string
                        latency: string
                        jitter: string
                        avg_loss: string
                        max_loss: string
                        resolution: string
                        frame_rate: string
                      cpu_usage:
                        zoom_min_cpu_usage: string
                        zoom_avg_cpu_usage: string
                        zoom_max_cpu_usage: string
                        system_max_cpu_usage: string
        '300':
          description: |-
            **Error Code:** `300`<br>
            Can not access webinar info, {webinarId}.
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            **Error Code:** `3001`<br>
            This webinar's detail is not available or the Webinar ID is not valid.<br>
            This webinar has not ended yet.
      security:
        - OAuth: []
  '/metrics/webinars/{webinarId}/participants/sharing':
    get:
      summary: Get sharing/recording details
      description: |+
        Retrieve the sharing and recording details of participants from live or past webinars. <br><br>
        **Scopes:** `dashboard_webinars:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy` <br>
        **Prerequisites:**<br>
        * Business, Education or API Plan with Webinar add-on.

      tags:
        - Dashboards
      operationId: dashboardWebinarParticipantShare
      parameters:
        - $ref: '#/parameters/WebinarId4Metrics'
        - $ref: '#/parameters/WebinarTypePast2'
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/PageToken'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Webinar participants returned.<br>
            Only available for paid accounts that have enabled the Dashboard feature.
          schema:
            allOf:
              - $ref: '#/definitions/PaginationToken'
              - type: object
                properties:
                  participants:
                    type: array
                    description: Array of participants.
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: 'Universally unique identifier of the Participant. It is the same as the User ID of the participant if the participant joins the meeting by logging into Zoom. If the participant joins the meeting without logging in, the value of this field will be blank.'
                        user_id:
                          type: string
                          description: Participant ID. This is a unique ID assigned to the participant joining a meeting and is valid for that meeting only.
                        user_name:
                          type: string
                          description: Participant display name.
                        details:
                          type: array
                          description: Array of sharing and recording details.
                          items:
                            type: object
                            properties:
                              content:
                                type: string
                                description: Type of content shared.
                              start_time:
                                type: string
                                description: Start time of sharing.
                              end_time:
                                type: string
                                description: End time of sharing.
          examples:
            application/json:
              page_count: integer
              page_size: integer
              total_records: integer
              next_page_token: string
              participants:
                - id: string
                  user_id: string
                  user_name: string
                  details:
                    - content: string
                      start_time: string
                      end_time: string
        '300':
          description: |-
            **Error Code:** `300`<br>
            Can not access webinar info, {webinarId}.
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            **Error Code:** `3001`<br>
            This webinar's detail info is not available or ID is not valid.<br>
            This webinar has not ended yet.
      security:
        - OAuth: []
  /metrics/zoomrooms:
    get:
      summary: List Zoom Rooms
      description: |+
        List information on all Zoom Rooms in an account.<br><br>
        **Scopes:** `dashboard_zr:read:admin`

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Resource-intensive`<br>
         **Prerequisites:**<br>
        * Business, Education or API Plan with Zoom Rooms set up.


      tags:
        - Dashboards
      operationId: dashboardZoomRooms
      parameters:
        - $ref: '#/parameters/PageSize'
        - in: query
          name: page_number
          type: integer
          description: The page number of the current page in the returned records.
          default: 1
        - in: query
          name: next_page_token
          type: string
          description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            List of Zoom rooms returned.<br>
            Only available for paid accounts that have enabled the Dashboard feature.
          schema:
            $ref: '#/definitions/ZoomRoomList'
          examples:
            application/json:
              page_count: 1
              page_number: 1
              page_size: 30
              total_records: 1
              zoom_rooms:
                - id: EbgjgjhghZY9wh0A
                  room_name: testZoomRoom
                  calendar_name: ghjghdjd@sjdfhjdf.gjgg
                  email: ghjghdjd@sjdfhjdf.gjgg
                  account_type: Work Email
                  status: Offline
                  device_ip: 'Computer : 10.10.26.49'
                  camera: Integrated Webcam
                  microphone: Microphone Array (Realtek Audio)
                  speaker: Speakers / Headphones (Realtek Audio)
                  last_start_time: '2019-08-29T16:37:07Z'
                  issues:
                    - Zoom room is offline
                  health: critical
      security:
        - OAuth: []
  '/metrics/zoomrooms/{zoomroomId}':
    get:
      summary: Get Zoom Rooms details
      description: |
        The Zoom Rooms dashboard metrics lets you know the type of configuration a Zoom room has and details on the meetings held in that room.

        Use this API to retrieve information on a specific room.<br><br>
        **Scopes:** `dashboard_zr:read:admin`<br> <br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`**Prerequisites:**<br>
        * Business, Education or API Plan with Zoom Rooms set up.
      tags:
        - Dashboards
      operationId: dashboardZoomRoom
      parameters:
        - $ref: '#/parameters/ZoomRoomId'
        - $ref: '#/parameters/FromDate'
        - $ref: '#/parameters/ToDate'
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/NextPageToken'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Zoom room returned.<br>
            Only available for paid accounts that have enabled the Dashboard feature.
          schema:
            allOf:
              - title: Zoom Room
                description: Zoom room.
                properties:
                  id:
                    type: string
                    description: Zoom room ID.
                  room_name:
                    type: string
                    description: Zoom room name.
                  calender_name:
                    type: string
                    description: Zoom calendar name.
                  email:
                    type: string
                    description: Zoom room email.
                  account_type:
                    type: string
                    description: Zoom room email type.
                  status:
                    type: string
                    description: Zoom room status.
                  device_ip:
                    type: string
                    description: Zoom room device IP.
                  camera:
                    type: string
                    description: Zoom room camera.
                  microphone:
                    type: string
                    description: Zoom room microphone.
                  speaker:
                    type: string
                    description: Zoom room speaker.
                  last_start_time:
                    type: string
                    description: Zoom room last start time.
                  location:
                    type: string
                    description: Zoom room location.
                  issues:
                    type: array
                    description: Issues encountered by the Zoom Room.
                    items:
                      type: string
                  health:
                    type: string
                    description: Health of the Zoom Room.
              - properties:
                  live_meeting:
                    $ref: '#/definitions/MeetingMetric'
                  past_meetings:
                    allOf:
                      - properties:
                          from:
                            type: string
                            format: date
                            description: Start date for this report in 'yyyy-mm-dd' format.
                          to:
                            type: string
                            format: date
                            description: End date for this report in 'yyyy-mm-dd' format.
                      - $ref: '#/definitions/PaginationToken'
                      - properties:
                          meetings:
                            type: array
                            description: Array of meeting objects.
                            items:
                              $ref: '#/definitions/MeetingMetric'
                    type: object
            type: object
          examples:
            application/json:
              account_type: Work Email
              calendar_name: testZoomRoom
              camera: Integrated Webcam
              device_ip: 'Computer : 10.10.10.10; Controller : 11.11.11.11'
              email: hdfjdfs@someemail.dhfdhfd
              health: critical
              id: fdjdsfdYYYYY
              issues:
                - Zoom room is offline
              last_start_time: '2020-01-30T17:47:47Z'
              live_meeting: {}
              microphone: Microphone Array (Realtek Audio)
              past_meetings:
                from: '2020-03-01'
                meetings: []
                next_page_token: ''
                page_count: 0
                page_size: 30
                to: '2020-03-02'
                total_records: 0
              room_name: testZoomRoom
              speaker: Speakers / Headphones (Realtek Audio)
              status: Offline
        '300':
          description: |-
            **Error Code:** `300`<br>
            The next page token is either invalid or has expired.
      security:
        - OAuth: []
  /metrics/crc:
    get:
      summary: Get CRC port usage
      description: |-
        A Cloud Room Connector allows H.323/SIP endpoints to connect to a Zoom meeting.

        Use this API to get the hour by hour CRC Port usage for a specified period of time. <aside class='notice'>We will provide the report for a maximum of one month. For example, if "from" is set to "2017-08-05" and "to" is set to "2017-10-10", we will adjust "from" to "2017-09-10".</aside><br><br>
        **Prerequisites:**<br>
        * Business, Education or API Plan.
        * Room Connector must be enabled on the account.<br><br>
        **Scopes:** `dashboard_crc:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`
      tags:
        - Dashboards
      operationId: dashboardCRC
      parameters:
        - $ref: '#/parameters/FromDate'
        - $ref: '#/parameters/ToDate'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            CRC usage returned.<br>
            Only available for paid accounts that have enabled the Dashboard feature.
          schema:
            allOf:
              - properties:
                  from:
                    type: string
                    format: date
                    description: Start date for this report.
                  to:
                    type: string
                    format: date
                    description: End date for this report.
              - properties:
                  crc_ports_usage:
                    type: array
                    items:
                      type: object
                      properties:
                        date_time:
                          type: string
                          description: The date and time of the port usage.
                          format: date-time
                        crc_ports_hour_usage:
                          type: array
                          items:
                            type: object
                            properties:
                              hour:
                                type: string
                                description: 'Hour in the day, during which the CRC was used. For example if the CRC was used at 11 pm, the value of this field will be 23.'
                              max_usage:
                                type: integer
                                description: The maximum number of concurrent ports that are being used in that hour.
                              total_usage:
                                type: integer
                                description: The total number of H.323/SIP connections in that hour.
            type: object
          examples:
            application/json:
              from: '2019-04-03'
              to: '2019-04-04'
              crc_ports_usage:
                - date_time: '2019-05-01T15:13:39.424Z'
                  crc_ports_hour_usage:
                    - hour: sed
                      max_usage: 8
                      total_usage: 14
      security:
        - OAuth: []
  /metrics/im:
    get:
      summary: Get IM metrics
      description: |+
        Get [metrics](https://support.zoom.us/hc/en-us/articles/204654719-Dashboard#h_cc7e9749-1c70-4afb-a9a2-9680654821e4) on how users are utilizing the Zoom Chat Client.<br><br> <br> You can specify a monthly date range for the dashboard data using the `from` and `to` query parameters. The month should fall within the last six months.
        **Scope:** `dashboard_im:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Resource-intensive`<br>
        **Prerequisites:**<br>
        * Business or a higher plan.

      tags:
        - Dashboards
      operationId: dashboardIM
      parameters:
        - $ref: '#/parameters/FromDate'
        - $ref: '#/parameters/ToDate'
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/NextPageToken'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            IM details returned.<br>
            Only available for paid accounts that have enabled the dashboard feature.
          schema:
            allOf:
              - type: object
                properties:
                  from:
                    type: string
                    format: date
                    description: Start date for this report.
                  to:
                    type: string
                    format: date
                    description: End date for this report.
              - $ref: '#/definitions/PaginationToken'
              - type: object
                properties:
                  users:
                    type: array
                    items:
                      type: object
                      properties:
                        user_id:
                          type: string
                          description: User ID.
                        user_name:
                          type: string
                          description: User display name.
                        email:
                          type: string
                          description: User email.
                          format: email
                        total_send:
                          type: integer
                          description: Total number of messages sent by the user.
                        total_receive:
                          type: integer
                          description: Total number of messages received by the user.
                        group_send:
                          type: integer
                          description: Total number of messages sent by the user in channels.
                        group_receive:
                          type: integer
                          description: Total number of messages received by the user in channels.
                        calls_send:
                          type: integer
                          description: Total number of instant meeting calls made by the user.
                        calls_receive:
                          type: integer
                          description: Total number of instant meeting calls received by the user.
                        files_send:
                          type: integer
                          description: Total number of files sent by the user.
                        files_receive:
                          type: integer
                          description: Total number of files received by the user.
                        images_send:
                          type: integer
                          description: Total number of images sent by the user.
                        images_receive:
                          type: integer
                          description: Total number of images received by the user.
                        voice_send:
                          type: integer
                          description: Total number of voice files sent by the user.
                        voice_receive:
                          type: integer
                          description: Total number of voice files received by the user.
                        videos_send:
                          type: integer
                          description: Total number of video files sent by the user.
                        videos_receive:
                          type: integer
                          description: 'Total number of video files received by the user. '
                        emoji_send:
                          type: integer
                          description: Total number of emojis sent by the user.
                        emoji_receive:
                          type: integer
                          description: Total number of emojis received by the user.
          examples:
            application/json:
              from: '2019-04-09'
              to: '2019-05-09'
              page_count: 1
              page_size: 1
              total_records: 1
              users:
                - user_id: sdfjk393lklrf
                  user_name: culpa ipsum
                  email: ipsum@ipsumemailksfj.sfhkf
                  total_send: 20
                  total_receive: 30
                  group_send: 5
                  group_receive: 5
                  calls_send: 1
                  calls_receive: 5
                  files_send: 3
                  files_receive: 8
                  images_send: 5
                  images_receive: 2
                  voice_send: 0
                  voice_receive: 3
                  videos_send: 1
                  videos_receive: 2
                  emoji_send: 4
                  emoji_receive: 5
      security:
        - OAuth: []
  /metrics/client/feedback:
    get:
      summary: List Zoom meetings client feedback
      description: |-
        Retrieve survey results from [Zoom meetings client feedback](https://support.zoom.us/hc/en-us/articles/115005855266-End-of-Meeting-Feedback-Survey#h_e30d552b-6d8e-4e0a-a588-9ca8180c4dbf). <br> You can specify a monthly date range for the dashboard data using the `from` and `to` query parameters. The month should fall within the last six months.

        **Prerequisites:**
        * Business or higher account
        * [Feedback to Zoom](https://support.zoom.us/hc/en-us/articles/115005838023) enabled.

        **Scope:** `account:read:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`
      tags:
        - Dashboards
      operationId: dashboardClientFeedback
      parameters:
        - $ref: '#/parameters/FromDate'
        - $ref: '#/parameters/ToDate'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Client Feedback details returned.
          schema:
            type: object
            properties:
              from:
                type: string
                format: date
                description: Start date for this report
              to:
                type: string
                format: date
                description: End date for this report
              total_records:
                type: integer
                description: The number of all records available across pages
              client_feedbacks:
                type: array
                items:
                  type: object
                  properties:
                    feedback_id:
                      type: string
                      description: Feedback Id
                    feedback_name:
                      type: string
                      description: Feedback Name
                    participants_count:
                      type: integer
                      description: The number of participants that upvoted the feedback.
          examples:
            application/json:
              from: '2013-03-16'
              to: '2013-04-16'
              total_records: 2
              client_feedbacks:
                - feedback_id: '53532100000'
                  feedback_name: Poor audio quality.
                  participants_count: 1
                - feedback_id: '53532100000'
                  feedback_name: They could not hear us.
                  participants_count: 2
      security:
        - OAuth: []
  /metrics/zoomrooms/issues:
    get:
      summary: Get top 25 issues of Zoom Rooms
      description: |+
        Get top 25 issues of Zoom Rooms.<br>
        **Scopes:** `dashboard_zr:read:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>
         **Prerequisites:**<br>
        * Business, Education or API Plan with Zoom Rooms set up.

      tags:
        - Dashboards
      operationId: dashboardZoomRoomIssue
      parameters:
        - $ref: '#/parameters/FromDate'
        - $ref: '#/parameters/ToDate'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Zoom Room Issue details returned
          schema:
            allOf:
              - properties:
                  from:
                    type: string
                    format: date
                    description: Start date for this report
                  to:
                    type: string
                    format: date
                    description: End date for this report
                  total_records:
                    type: integer
                    description: The number of all records available across pages
              - properties:
                  issues:
                    type: array
                    items:
                      type: object
                      properties:
                        issue_name:
                          type: string
                          description: |-
                            Issue Name.<br> The value of the this field could be one of the following:<br>
                            * `Room Controller disconnected`<br>
                            * `Room Controller connected`
                            * `Selected camera has disconnected`
                            * `Selected camera is reconnected`
                            * `Selected microphone has disconnected`
                            * `Selected microphone is reconnected`
                            * `Selected speaker has disconnected`
                            * `Selected speaker is reconnected`
                            * `Zoom room is offline`
                            * `Zoom room is online`
                            * `High CPU usage is detected`
                            * `Low bandwidth network is detected`
                            * `{name} battery is low`
                            * `{name} battery is normal`
                            * `{name} disconnected`
                            * `{name} connected`
                            * `{name} is not charging`

                            Possible values for {name}: <br>
                            * Zoom Rooms Computer
                            * Controller
                            * Scheduling Display
                        zoom_rooms_count:
                          type: integer
                          description: Zoom Room Count of Issue
            type: object
          examples:
            application/json:
              from: '2019-08-15'
              to: '2019-09-15'
              total_records: 2
              room_issues:
                - issue_name: Controller disconnected
                  zoom_rooms_count: 1
                - issue_name: Controller is not charging
                  zoom_rooms_count: 1
      security:
        - OAuth: []
  /metrics/issues/zoomrooms:
    get:
      summary: Get top 25 Zoom Rooms with issues
      description: |-
        Get information on top 25 Zoom Rooms with issues in a month. The month specified with the "from" and "to" range should fall within the last six months.<br>
        **Scope:** `dashboard_home:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>
        **Prerequisites:**<br>
        * Business or a higher plan.
        * Zoom Room must be enabled in the account.
      tags:
        - Dashboards
      operationId: dashboardIssueZoomRoom
      parameters:
        - $ref: '#/parameters/FromDate'
        - $ref: '#/parameters/ToDate'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Zoom Room with issue details returned
          schema:
            allOf:
              - properties:
                  from:
                    type: string
                    format: date
                    description: Start date for this report
                  to:
                    type: string
                    format: date
                    description: End date for this report
                  total_records:
                    type: integer
                    description: The number of all records available across pages
              - properties:
                  zoom_rooms:
                    type: array
                    items:
                      properties:
                        id:
                          type: string
                          description: Zoom Room ID
                        room_name:
                          type: string
                          description: Zoom Room Name
                        issues_count:
                          type: integer
                          description: Issue Count of Zoom Room
      security:
        - OAuth: []
  '/metrics/issues/zoomrooms/{zoomroomId}':
    get:
      summary: Get issues of Zoom Rooms
      description: |-
        Get information about the issues that occured on the Top 25 **Zoom Rooms with issues** in an acount. <br> You can specify a monthly date range for the dashboard data using the `from` and `to` query parameters. The month should fall within the last six months.

        **Scope:** `dashboard_home:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>
        **Prerequisites:** <br>
        * Business or a higher plan.
        * Zoom Room must be enabled in the account.
      tags:
        - Dashboards
      operationId: dashboardIssueDetailZoomRoom
      parameters:
        - $ref: '#/parameters/ZoomRoomId'
        - $ref: '#/parameters/FromDate'
        - $ref: '#/parameters/ToDate'
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/NextPageToken'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Zoom Room with issue details returned
          schema:
            allOf:
              - type: object
                properties:
                  from:
                    type: string
                    format: date
                    description: Start date for this report
                  to:
                    type: string
                    format: date
                    description: End date for this report
              - $ref: '#/definitions/PaginationToken'
              - type: object
                properties:
                  issue_details:
                    type: array
                    items:
                      type: object
                      properties:
                        issue:
                          type: string
                          description: |-
                            Zoom Room Issue Detail.<br> The value of the this field could be one of the following:<br>
                            * `Room Controller disconnected`<br>
                            * `Room Controller connected`
                            * `Selected camera has disconnected`
                            * `Selected camera is reconnected`
                            * `Selected microphone has disconnected`
                            * `Selected microphone is reconnected`
                            * `Selected speaker has disconnected`
                            * `Selected speaker is reconnected`
                            * `Zoom room is offline`
                            * `Zoom room is online`
                            * `High CPU usage is detected`
                            * `Low bandwidth network is detected`
                            * `{name} battery is low`
                            * `{name} battery is normal`
                            * `{name} disconnected`
                            * `{name} connected`
                            * `{name} is not charging`

                            Possible values for {name}: <br>
                            * Zoom Rooms Computer
                            * Controller
                            * Scheduling Display
                        time:
                          type: string
                          format: date-time
                          description: Time at which the issue was encountered.
          examples:
            application/json:
              from: '2019-02-28'
              to: '2019-03-28'
              page_count: 1
              page_size: 1
              total_records: 1
              issue_details:
                - issue: Zoom room is offline
                  time: '2019-03-07T11:17:00.956Z'
      security:
        - OAuth: []
  /report/daily:
    get:
      summary: Get daily usage report
      description: |-
        Retrieve daily report to access the account-wide usage of Zoom services for each day in a given month. It lists the number of new users, meetings, participants, and meeting minutes.<br>
        **Prerequisites**<br>
        * Pro or higher plan.<br>
        **Scopes:** `report:read:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`
      tags:
        - Reports
      operationId: reportDaily
      parameters:
        - in: query
          name: year
          description: Year for this report
          type: integer
        - in: query
          name: month
          description: Month for this report
          type: integer
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Daily report retrieved.<br>
            This is only available for paid accounts:{accountId}.
          schema:
            properties:
              year:
                type: integer
                description: Year for this report.
              month:
                type: integer
                description: Month for this report.
              dates:
                type: array
                description: Array of date objects.
                items:
                  type: object
                  properties:
                    date:
                      type: string
                      format: date
                      description: Date for this object.
                    new_users:
                      type: integer
                      description: Number of new users on this date.
                    meetings:
                      type: integer
                      description: Number of meetings on this date.
                    participants:
                      type: integer
                      description: Number of participants on this date.
                    meeting_minutes:
                      type: integer
                      description: Number of meeting minutes on this date.
          examples:
            application/json:
              year: 2019
              month: 6
              dates:
                - date: '2019-06-01'
                  new_users: 3
                  meetings: 10
                  participants: 20
                  meeting_minutes: 100
                - date: '2019-06-02'
                  new_users: 0
                  meetings: 20
                  participants: 80
                  meeting_minutes: 200
                - date: '2019-06-03'
                  new_users: 10
                  meetings: 35
                  participants: 100
                  meeting_minutes: 380
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>
            **Error Code:** `300`<br>
            Daily report can only be provided for a month that falls within the recent 6 months.
      security:
        - OAuth: []
  /report/users:
    get:
      summary: Get active/inactive host reports
      description: |-
        A user is considered to be an active host during the month specified in the "from" and "to" range, if the user has hosted at least one meeting during this period. If the user didn't host any meetings during this period, the user is considered to be inactive.<br>The Active Hosts report displays a list of meetings, participants, and meeting minutes for a specific time range, up to one month. The month should fall within the last six months.<br>The Inactive Hosts report pulls a list of users who were not active during a specific period of time.
        Use this API to retrieve an active or inactive host report for a specified period of time. The time range for the report is limited to a month and the month should fall under the past six months. <br>You can specify the type of report and date range using the query parameters.<br>
        **Scopes:** `report:read:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>
        **Prerequisites:**<br>
        * Pro or higher plan.
      tags:
        - Reports
      operationId: reportUsers
      parameters:
        - in: query
          name: type
          description: Active or inactive hosts.<br>`active` - Active hosts. <br>`inactive` - Inactive hosts.
          type: string
          enum:
            - active
            - inactive
          x-enum-descriptions:
            - Active hosts
            - Inactive hosts
        - $ref: '#/parameters/FromDate'
        - $ref: '#/parameters/ToDate'
        - $ref: '#/parameters/PageSize'
        - in: query
          name: page_number
          type: integer
          default: 1
          description: The page number of the current page in the returned records.
        - in: query
          name: next_page_token
          type: string
          description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Active or inactive hosts report returned.<br>
            This is only available for paid account: {accountId}.
          schema:
            allOf:
              - properties:
                  from:
                    type: string
                    format: date
                    description: Start date for this report.
                  to:
                    type: string
                    format: date
                    description: End date for this report.
                  page_count:
                    type: integer
                    description: The number of pages returned for the request made.
                  page_number:
                    type: integer
                    description: The page number of the current results.
                    default: 1
                  page_size:
                    type: integer
                    description: The number of records returned with a single API call.
                    default: 30
                    maximum: 300
                  total_records:
                    type: integer
                    description: The total number of all the records available across pages.
                  next_page_token:
                    type: string
              - properties:
                  total_meetings:
                    type: integer
                    description: Number of meetings for this range.
                  total_participants:
                    type: integer
                    description: Number of participants for this range.
                  total_meeting_minutes:
                    type: integer
                    description: Number of meeting minutes for this range.
                  users:
                    type: array
                    description: Array of user objects.
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: User ID.
                        email:
                          type: string
                          description: User email.
                        user_name:
                          type: string
                          description: User display name.
                        type:
                          type: integer
                          description: User type.
                        dept:
                          type: string
                          description: User department.
                        meetings:
                          type: integer
                          description: Number of meetings for user.
                        participants:
                          type: integer
                          description: Number of participants in meetings for user.
                        meeting_minutes:
                          type: integer
                          description: Number of meeting minutes for user.
                        custom_attributes:
                          type: object
                          description: Custom attribute(s) that have been assigned to the user.
                          properties:
                            key:
                              type: string
                              description: Identifier for the custom attribute.
                            name:
                              type: string
                              description: Name of the custom attribute.
                            value:
                              type: string
                              description: Value of the custom attribute.
            type: object
          examples:
            application/json:
              from: '2019-08-14'
              to: '2019-09-14'
              page_count: 1
              page_number: 1
              page_size: 30
              total_records: 3
              total_meetings: 2
              total_participants: 10
              total_meeting_minutes: 10
              users:
                - id: BzBAAAAAAAfprg
                  email: reag12343@gmail.com
                  user_name: cbcvbvcbvbc
                  type: 1
                  dept: ''
                  meetings: 1
                  participants: 5
                  meeting_minutes: 5
                  last_client_version: 4.4.1242.0623(win)
                  last_login_time: '2019-09-13T16:21:40Z'
                  create_time: '2019-09-13T16:20:30Z'
                - id: 0CAAAAA6jxcA
                  email: mynewemailgoog@gmail.com
                  user_name: xgdzgdfg
                  type: 1
                  dept: Business
                  meetings: 0
                  participants: 0
                  meeting_minutes: 0
                  last_client_version: 4.4.1242.0623(win)
                  last_login_time: '2019-07-23T00:28:00Z'
                  create_time: '2019-07-23T00:27:34Z'
      security:
        - OAuth: []
  '/report/users/{userId}/meetings':
    get:
      summary: Get meeting reports
      description: |-
        Retrieve [report](https://support.zoom.us/hc/en-us/articles/216378603-Meeting-Reporting) on a past meeting for a specified period of time. The time range for the report is limited to a month and the month should fall under the past six months.

        Meetings will only be returned in the response if the meeting has two or more unique participants.  <br><br>
        **Scopes:** `report:read:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>
        **Prerequisites:**<br>
        * Pro or higher plan.
      tags:
        - Reports
      operationId: reportMeetings
      parameters:
        - $ref: '#/parameters/UserId'
        - $ref: '#/parameters/FromDate'
        - $ref: '#/parameters/ToDate'
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/NextPageToken'
        - in: query
          name: type
          type: string
          enum:
            - past
            - pastOne
          default: past
          description: 'The meeting types: <br>`past` - Past meetings.<br>`pastOne` - Past one user meetings. '
      responses:
        '200':
          description: |
            **HTTP Status Code:** `200`<br>
            Active or inactive hosts report returned.<br>
          schema:
            allOf:
              - $ref: '#/definitions/Pagination'
              - type: object
                properties:
                  from:
                    type: string
                    format: date
                    description: Start date for this report.
                  to:
                    type: string
                    format: date
                    description: End date for this report.
                  next_page_token:
                    type: string
                    description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
                  meetings:
                    type: array
                    description: Array of meeting objects.
                    items:
                      type: object
                      properties:
                        uuid:
                          type: string
                          format: uuid
                          description: 'Meeting UUID. Each meeting instance will generate its own UUID(i.e., after a meeting ends, a new UUID will be generated for the next instance of the meeting). Please double encode your UUID when using it for API calls if the UUID begins with a ''/'' or contains ''//'' in it.'
                        id:
                          type: integer
                          description: |
                            [Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-):            Unique identifier of the meeting in "**long**" format(represented as int64
                            data type in JSON), also known as the meeting number.
                        type:
                          type: integer
                          description: |-

                            Meeting Type:<br> `1` - Instant Meeting<br> `2` - Scheduled Meeting<br> `3` - Recurring Meeting with no fixed time.<br>
                            `4` - This value is returned if the meeting was started using a Personal Meeting ID. <br>
                            `8` - Recurring Meeting with a fixed time.
                        topic:
                          type: string
                          description: Meeting topic.
                        user_name:
                          type: string
                          description: User display name.
                        user_email:
                          type: string
                          description: User email.
                        start_time:
                          type: string
                          format: date-time
                          description: Meeting start time.
                        end_time:
                          type: string
                          format: date-time
                          description: Meeting end time.
                        duration:
                          type: integer
                          description: Meeting duration.
                        total_minutes:
                          type: integer
                          description: Sum of meeting minutes from all participants in the meeting.
                        participants_count:
                          type: integer
                          description: Number of meeting participants.
                        custom_keys:
                          type: array
                          maxItems: 10
                          description: Custom keys and values assigned to the meeting.
                          items:
                            type: object
                            properties:
                              key:
                                type: string
                                description: Custom key associated with the user.
                                maxLength: 64
                              value:
                                type: string
                                description: Value of the custom key associated with the user.
                                maxLength: 256
                        source:
                          type: string
                          description: Indicates whether the meeting was created directly through Zoom or through an API request.
          examples:
            application/json: |-
              {
                  "from": "2019-07-14",
                  "to": "2019-08-14",
                  "page_count": 1,
                  "page_size": 30,
                  "total_records": 9,
                  "next_page_token": "",
                  "meetings": [
                      {
                          "uuid": "/lqsAAAA5VBBBw==",
                          "id": 12345,
                          "host_id": "gdfg3434dsssfss",
                          "type": 2,
                          "topic": "MyTestMeetings",
                          "user_name": "Prashant Bhandari",
                          "user_email": "pb@hjdskfhds.fdskhfhds",
                          "start_time": "2019-07-15T23:24:52Z",
                          "end_time": "2019-07-15T23:30:19Z",
                          "duration": 6,
                          "total_minutes": 11,
                          "participants_count": 2
                      },
                      {
                          "uuid": "411bbbbbbcVyw==",
                          "id": 000000,
                          "host_id": "gdfg3434dsssfss",
                          "type": 2,
                          "topic": "My Meeting",
                          "user_name": "Raju Khanal",
                          "user_email": "srhkdjfh@jh.fsadghjm",
                          "start_time": "2019-07-16T17:14:39Z",
                          "end_time": "2019-07-16T17:26:20Z",
                          "duration": 12,
                          "total_minutes": 17,
                          "participants_count": 2
                      }
                  ]
              }
        '400':
          description: |+
            **HTTP Status Code:** `400` **Bad Request**<br>

            **Error Code:** `200`<br>
            This is only available for paid account:{accountId}.<br>

            **Error Code:** `300`<br>
            The next page token is invalid or expired.

        '404':
          description: |-
            **HTTP Status Code:** `404` **Not Found**
            <br>**Error Code:** `1001`<br>
            User {userId} not exist or not belong to this account.
  '/report/meetings/{meetingId}':
    get:
      summary: Get meeting detail reports
      description: |-
        Get a detailed report for a past meeting. <br>
        **Scopes:** `report:read:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>
        **Prerequisites:**<br>
        * Pro or a higher plan.<br>

      tags:
        - Reports
      operationId: reportMeetingDetails
      parameters:
        - $ref: '#/parameters/MeetingId4Metrics'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Meeting details returned.<br>
            This is only available for paid account.
          schema:
            type: object
            properties:
              uuid:
                type: string
                format: uuid
                description: 'Meeting UUID. Each meeting instance will generate its own UUID(i.e., after a meeting ends, a new UUID will be generated for the next instance of the meeting). Please double encode your UUID when using it for API calls if the UUID begins with a ''/'' or contains ''//'' in it.'
              id:
                type: integer
                description: '[Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in "**long**" format(represented as int64 data type in JSON), also known as the meeting number.'
                format: int64
              type:
                type: integer
                description: Meeting type.
              topic:
                type: string
                description: Meeting topic.
              user_name:
                type: string
                description: User display name.
              user_email:
                type: string
                description: User email.
              start_time:
                type: string
                format: date-time
                description: Meeting start time.
              end_time:
                type: string
                format: date-time
                description: Meeting end time.
              duration:
                type: integer
                description: Meeting duration.
              total_minutes:
                type: integer
                description: |-
                  Number of meeting minutes. This represents the total amount of meeting minutes attended by each participant including the host, for meetings hosted by the user. For instance if there were one host(named A) and one participant(named B) in a meeting, the value of total_minutes would be calculated as below:

                  **total_minutes** = Total Meeting Attendance Minutes of A + Total Meeting Attendance Minutes of B
              participants_count:
                type: integer
                description: Number of meeting participants.
              tracking_fields:
                type: array
                description: Tracking fields.
                items:
                  type: object
                  properties:
                    field:
                      type: string
                      description: Tracking fields type.
                    value:
                      type: string
                      description: Tracking fields value.
              dept:
                type: string
                description: Department of the host.
              custom_keys:
                type: array
                maxItems: 10
                description: Custom keys and values assigned to the meeting.
                items:
                  type: object
                  properties:
                    key:
                      type: string
                      description: Custom key associated with the user.
                      maxLength: 64
                    value:
                      type: string
                      description: Value of the custom key associated with the user.
                      maxLength: 256
          examples:
            application/json:
              uuid: sfsdfsdfc6122222d
              id: 1000000
              type: 2
              topic: Awesome meeting
              user_name: officia
              user_email: officia@sdhgdfgh.fsdfs
              start_time: '2019-07-14T09:05:19.754Z'
              end_time: '2019-08-14T09:05:19.754Z'
              duration: 11
              total_minutes: 11
              participants_count: 4
              tracking_fields:
                - field: Meeting Purpose
                  value: Sales
        '300':
          description: |-
            **HTTP Status Code:** `300`<br>
            Can not access meeting information:{meetingId}.
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>
            Bad request<br>
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            Meeting ID not found.<br>
            **Error Code:** `3001`<br>
            Meeting {meetingId} not found or has expired.<br>
      security:
        - OAuth: []
  '/report/meetings/{meetingId}/participants':
    get:
      summary: Get meeting participant reports
      description: |-
        Get participant report for a past meeting.<br><br>
        **Scopes:** `report:read:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>
        **Prerequisites:**<br>
        * Pro or a higher plan.<br>

      tags:
        - Reports
      operationId: reportMeetingParticipants
      parameters:
        - $ref: '#/parameters/MeetingId4Metrics'
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/NextPageToken'
        - in: query
          name: include_fields
          type: string
          description: |+
            Provide `registrant_id` as the value for this field if you would like to see the registrant ID attribute in the response of this API call. A registrant ID is a unique identifier of a [meeting registrant](https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/meetingregistrants).<br>

          enum:
            - registrant_id
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Meeting participants report returned.<br>
            This is only available for paid account.
          schema:
            allOf:
              - $ref: '#/definitions/PaginationToken'
              - type: object
                properties:
                  participants:
                    type: array
                    description: Array of meeting participant objects.
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: 'Universally unique identifier of the Participant. It is the same as the User ID of the participant if the participant joins the meeting by logging into Zoom. If the participant joins the meeting without logging in, the value of this field will be blank..'
                        user_id:
                          type: string
                          description: Participant ID. This is a unique ID assigned to the participant joining a meeting and is valid for that meeting only.
                        name:
                          type: string
                          description: Participant display name.
                        user_email:
                          type: string
                          description: Participant email.
                        join_time:
                          type: string
                          format: date-time
                          description: Participant join time.
                        leave_time:
                          type: string
                          format: date-time
                          description: Participant leave time.
                        duration:
                          type: integer
                          description: Participant duration.
                        registrant_id:
                          type: string
                          description: Unique identifier of the registrant. This field is only returned if you entered "registrant_id" as the value of `include_fields` query parameter.
                        customer_key:
                          type: string
                          description: 'Another identifier for the participant. Can be a number or characters, maximum length of 15 characters. '
                          maxLength: 15
          examples:
            application/json:
              page_count: '1'
              page_size: '30'
              total_records: '1'
              next_page_token: ''
              participants:
                - id: dskfjladjskfl
                  user_id: sdfjkldsfdfgdfg
                  name: Riya
                  user_email: riya@jdfghsdfgsd.fdjfhdf
                  join_time: '2019-02-01T12:34:12.660Z'
                  leave_time: '2019-03-01T12:34:12.660Z'
                  duration: '20'
        '300':
          description: |-
            **HTTP Status Code:** `300`<br>Cannot access meeting information:{meetingId}.<br>
            The next page token is either invalid or has expired.
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>
            Bad request<br>
            **Error Code:** `1010`<br>
            User does not belong to this account:{accountId}.<br>
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            Meeting ID not found.<br>
            **Error Code:** `3001`<br>
            Meeting  {MeetingId} not found or has expired.<br>
      security:
        - OAuth: []
  '/report/meetings/{meetingId}/polls':
    get:
      summary: Get meeting poll reports
      description: |-
        Retrieve a report of [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings) results for a past meeting. <br><br>
        **Scopes:** `report:read:admin`<br>

        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>
        **Prerequisites:**<br>
        * Pro or a higher plan.<br>

      tags:
        - Reports
      operationId: reportMeetingPolls
      parameters:
        - $ref: '#/parameters/MeetingId4Metrics'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Meeting polls report returned.<br>
            This is only available for paid account:{accountId}.
          schema:
            type: object
            properties:
              id:
                type: integer
                description: '[Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in "**long**" format(represented as int64 data type in JSON), also known as the meeting number.'
                format: int64
              uuid:
                type: string
                format: uuid
                description: 'Meeting UUID. Each meeting instance will generate its own UUID(i.e., after a meeting ends, a new UUID will be generated for the next instance of the meeting). Please double encode your UUID when using it for API calls if the UUID begins with a ''/'' or contains ''//'' in it.'
              start_time:
                type: string
                format: date-time
                description: Meeting start time.
              questions:
                type: array
                description: Array of meeting question objects.
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: 'Participant display name.<br> If "anonymous" option is enabled for a [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meet), the participant''s polling information will be kept anonymous and the value of `name` field will be "Anonymous Attendee".'
                    email:
                      type: string
                      description: Participant email.
                    question_details:
                      type: array
                      description: Array of questions from user.
                      items:
                        type: object
                        properties:
                          question:
                            type: string
                            description: Asked question.
                          answer:
                            type: string
                            description: Given answer.
                          polling_id:
                            type: string
                            description: Unique identifier of the poll.
                          date_time:
                            type: string
                            description: Date and time at which the answer to the poll was submitted.
                            format: date-time
          examples:
            application/json:
              id: 123456
              uuid: gsdjfhsdfkhjdsf
              status: ended
              start_time: '2019-02-01T12:34:12.660Z'
              title: Learn something new
              questions:
                - name: Sam S
                  email: myemail@jksdlfkjdf.djfk
                  question_details:
                    - question: How are you?
                      answer: I am wonderful.
        '404':
          description: |
            **HTTP Status Code:** `404`<br>
            Meeting ID not found.<br>
            **Error Code:** `3001`<br>
            Meeting  {meetingId} not found or has expired.<br>
      security:
        - OAuth: []
  '/report/webinars/{webinarId}':
    get:
      summary: Get webinar detail reports
      description: |-
        Retrieve a [report](https://support.zoom.us/hc/en-us/articles/201393719-Webinar-Reporting) containing past webinar details.  <br><br>
        **Scopes:** `report:read:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>
        **Prerequisites:**<br>
        * Pro or higher plan with Webinar add-on.
      tags:
        - Reports
      operationId: reportWebinarDetails
      parameters:
        - $ref: '#/parameters/WebinarId4Metrics'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Webinar details returned.<br>
            This is only available for paid account:{accountId}.
          schema:
            type: object
            properties:
              uuid:
                type: string
                format: uuid
                description: 'Webinar UUID. Each webinar instance will generate its own UUID(i.e., after a meeting ends, a new UUID will be generated when the next instance of the webinar starts). Double encode the UUID when using it for API calls if the UUID begins with a ''/'' or contains ''//'' in it.'
              id:
                type: integer
                description: '[Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in "**long**" format(represented as int64 data type in JSON), also known as the meeting number.'
                format: int64
              type:
                type: integer
                description: Meeting type.
              topic:
                type: string
                description: Meeting topic.
              user_name:
                type: string
                description: User display name.
              user_email:
                type: string
                description: User email.
              start_time:
                type: string
                format: date-time
                description: Meeting start time.
              end_time:
                type: string
                format: date-time
                description: Meeting end time.
              duration:
                type: integer
                description: Meeting duration.
              total_minutes:
                type: integer
                description: |-
                  Number of Webinar minutes. This represents the total amount of Webinar minutes attended by each participant including the host, for a Webinar hosted by the user. For instance if there were one host(named A) and one participant(named B) in a Webinar, the value of total_minutes would be calculated as below:

                  **total_minutes** = Total Webinar Attendance Minutes of A + Total Webinar Attendance Minutes of B
              participants_count:
                type: integer
                description: Number of meeting participants.
              tracking_fields:
                type: array
                description: Tracking fields.
                items:
                  type: object
                  properties:
                    field:
                      type: string
                      description: Tracking fields type.
                    value:
                      type: string
                      description: Tracking fields value.
              dept:
                type: string
                description: Department of the host.
              custom_keys:
                type: array
                maxItems: 10
                description: Custom keys and values assigned to the meeting.
                items:
                  type: object
                  properties:
                    key:
                      type: string
                      description: Custom key associated with the user.
                      maxLength: 64
                    value:
                      type: string
                      description: Value of the custom key associated with the user.
                      maxLength: 256
          examples:
            application/json:
              uuid: urn4fe6caeb98
              id: 51788617
              type: 5
              topic: My Health Webinar
              user_name: Utfdfdget
              user_email: fdsjkfhhkd@hkdfhkdf.ghfjd
              start_time: '2019-11-18T03:15:00.056Z'
              end_time: '2019-11-18T03:15:20.056Z'
              duration: 20
              total_minutes: 10
              participants_count: 13
              tracking_fields:
                - field: Webinar Purpose
                  value: Health awareness
        '300':
          description: |-
            **HTTP Status Code:** `300`<br>
            Can not access webinar information:{webinarId}.
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>
            Bad request<br>
            **Error Code:** `1010`<br>
            User does not belong to this account:{accountId}.<br>
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            Webinar ID not found.<br>
            **Error Code:** `3001`<br>
            Meeting  {meetingId} not found or has expired.<br>
      security:
        - OAuth: []
  '/report/webinars/{webinarId}/participants':
    get:
      summary: Get webinar participant reports
      description: |-
        Get detailed report on each attendee of a webinar.<br><br>
        **Scopes:** `report:read:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>
        **Prerequisites:**<br>
        * Pro or a higher plan with Webinar add-on enabled.
      tags:
        - Reports
      operationId: reportWebinarParticipants
      parameters:
        - $ref: '#/parameters/WebinarId4Metrics'
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/NextPageToken'
        - in: query
          name: include_fields
          type: string
          description: |+
            Enter 'registrant_id' as the value for this field if you would like to see the registrant ID attribute included in the response of this API call. A registrant ID is a unique identifier of a [webinar registrant](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/webinarregistrants).<br>

          enum:
            - registrant_id
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Meeting participants report returned.<br>
            This is only available for paid account: {accountId}.
          schema:
            allOf:
              - $ref: '#/definitions/PaginationToken'
              - type: object
                properties:
                  participants:
                    type: array
                    description: Array of webinar participant objects.
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: 'Universally unique identifier of the Participant. It is the same as the User ID of the participant if the participant joins the meeting by logging into Zoom. If the participant joins the meeting without logging in, the value of this field will be blank.'
                        user_id:
                          type: string
                          description: Participant ID. This is a unique ID assigned to the participant joining the webinar and is valid for that webinar only.
                        name:
                          type: string
                          description: Participant display name.
                        user_email:
                          type: string
                          description: Participant email.
                        join_time:
                          type: string
                          format: date-time
                          description: Participant join time.
                        leave_time:
                          type: string
                          format: date-time
                          description: Participant leave time.
                        duration:
                          type: integer
                          description: Participant duration.
                        customer_key:
                          type: string
                          description: 'Another identifier for the participant. Can be a number or characters, maximum length of 15 characters. '
                          maxLength: 15
          examples:
            application/json:
              page_count: '1'
              page_size: '30'
              total_records: '1'
              next_page_token: ''
              participants:
                - id: dskfjladjskfl
                  user_id: sdfjkldsfdfgdfg
                  name: Riya
                  user_email: riya@jdfghsdfgsd.fdjfhdf
                  join_time: '2019-02-01T12:34:12.660Z'
                  leave_time: '2019-03-01T12:34:12.660Z'
                  duration: '20'
        '300':
          description: |-
            **HTTP Status Code:** `300`<br>
            The next page token is invalid or has expired.<br>
            Can not access the webinar information, {webinarId}.
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>
            Bad request<br>
            **Error Code:** `1010`<br>
            User does not belong to this account:{accountId}.<br>
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            Webinar ID not found.<br>
            **Error Code:** `3001`<br>
            Webinar  {webinarId} not found or has expired.<br>
      security:
        - OAuth: []
  '/report/webinars/{webinarId}/polls':
    get:
      summary: Get webinar poll reports
      description: |-
        Retrieve a report on past [webinar polls](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars).<br><br>
        **Scopes:** `report:read:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>
        **Prerequisites:**<br>
        * Pro or a higher plan with Webinar add-on enabled.
      tags:
        - Reports
      operationId: reportWebinarPolls
      parameters:
        - $ref: '#/parameters/WebinarId4Metrics'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Webinar polls report returned.<br>
            Missing webinar subscription plan.<br>
            This is only available for paid account:{accountId}.
          schema:
            type: object
            properties:
              id:
                type: integer
                description: 'Webinar ID in "**long**" format(represented as int64 data type in JSON), also known as the webinar number.'
                format: int64
              uuid:
                type: string
                format: uuid
                description: 'Webinar UUID. Each webinar instance will generate its own UUID(i.e., after a Webinar ends, a new UUID will be generated for the next instance of the Webinar). Please double encode your UUID when using it for API calls if the UUID begins with a ''/'' or contains ''//'' in it.'
              start_time:
                type: string
                format: date-time
                description: Webinar start time.
              questions:
                type: array
                description: Array of webinar question objects.
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: 'Participant display name.<br><br> If the poll was created as an anonymous poll, participant''s information will remain anonymous and the value of the `name` field will be "Anonymous Attendee".'
                    email:
                      type: string
                      description: Participant email.
                    question_details:
                      type: array
                      description: Array of questions from user.
                      items:
                        type: object
                        properties:
                          question:
                            type: string
                            description: Asked question.
                          answer:
                            type: string
                            description: Given answer.
                          polling_id:
                            type: string
                            description: Unique identifier of the poll.
                          date_time:
                            type: string
                            description: Date and time at which the answer to the poll was submitted.
                            format: date-time
          examples:
            application/json:
              id: 123456
              uuid: gsdjfhsdfkhjdsf
              status: ended
              start_time: '2019-02-01T12:34:12.660Z'
              title: Learn something new
              questions:
                - name: Sam S
                  email: myemail@jksdlfkjdf.djfk
                  question_details:
                    - question: How are you?
                      answer: I am wonderful.
        '400':
          description: |
            **HTTP Status Code:** `400`<br>
            Bad request<br>
            **Error Code:** `1010`<br>
            User does not belong to this account:{accountId}.<br>
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            Webinar ID not found.<br>
            **Error Code:** `3001`<br>
            Webinar  {webinarId} not found or has expired.<br>
      security:
        - OAuth: []
  '/report/webinars/{webinarId}/qa':
    get:
      summary: Get webinar Q&A report
      description: |-
        The Question & Answer (Q&A) feature for webinars allows attendees to ask questions during the webinar and for the panelists, co-hosts and host to answer their questions.

        Use this API to retrieve a report on question and answers from past webinars. <br><br>
        **Scopes:** `report:read:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>
        **Prerequisites:**<br>
        * Pro or a higher plan with Webinar add-on enabled.
      tags:
        - Reports
      operationId: reportWebinarQA
      parameters:
        - $ref: '#/parameters/WebinarId4Metrics'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Webinar Q&A report returned.<br>
            This is only available for paid account:{accountId}.<br>
            A report cannot be generated for this account because this account has not subscribed to a webinar plan.
          schema:
            type: object
            properties:
              id:
                type: integer
                description: 'Webinar ID in "**long**" format(represented as int64 data type in JSON), also known as the webinar number.'
                format: int64
              uuid:
                type: string
                format: uuid
                description: 'Webinar UUID. Each Webinar instance will generate its own UUID(i.e., after a Webinar ends, a new UUID will be generated for the next instance of the Webinar). Please double encode your UUID when using it for API calls if the UUID begins with a ''/'' or contains ''//'' in it.'
              start_time:
                type: string
                format: date-time
                description: Webinar start time.
              questions:
                type: array
                description: Array of webinar question objects.
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: |-
                        Participant display name.<br>

                        If anonymous [Q&A](https://support.zoom.us/hc/en-us/articles/203686015-Getting-Started-with-Question-Answer) option is enabled and if a participant submits the Q&A without providing their name, the value of the `name` field will be "Anonymous Attendee".
                    email:
                      type: string
                      description: Participant email.
                    question_details:
                      type: array
                      description: Array of questions from user.
                      items:
                        type: object
                        properties:
                          question:
                            type: string
                            description: Asked question.
                          answer:
                            type: string
                            description: Given answer.
          examples:
            application/json:
              id: 14321
              uuid: urgvhge945
              start_time: '2019-02-01T12:34:12.660Z'
              questions:
                - name: Harry S
                  email: pidufshdsuf@djdfdsfd.ghk
                  question_details:
                    - question: How often will you hold this webinar?
                      answer: Once a month.
        '400':
          description: |
            **HTTP Status Code:** `400`<br>
            Bad request<br>
        '404':
          description: |
            **HTTP Status Code:** `404`<br>
            Webinar ID not found.<br>
            **Error Code:** `1001`<br>
            User does not exist: {userId}.<br>
            **Error Code:** `3001`<br>
            Webinar  {webinarId} not found or has expired.<br>
      security:
        - OAuth: []
  /report/telephone:
    get:
      summary: Get telephone reports
      description: |-
        The [telephone report](https://support.zoom.us/hc/en-us/articles/206514816-Telephone-reports) allows you to view who dialed into meetings via phone (Audio Conferencing or SIP Connected Audio) and which number they dialed into and other details. Use this API to get telephone report for a specified period of time.

        **Scopes:** `report:read:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>**Prerequisites:**<br>
        * Pro or higher plan.
      tags:
        - Reports
      operationId: reportTelephone
      parameters:
        - in: query
          name: type
          description: |-
            Audio types:<br>`1` - Toll-free Call-in & Call-out.<br>`2` - Toll <br>
            `3` - SIP Connected Audio
          type: string
          enum:
            - 1
            - 3
          x-enum-descriptions:
            - Toll-free Call-in & Call-out
          default: '1'
        - $ref: '#/parameters/FromDate'
        - $ref: '#/parameters/ToDate'
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/PageNumber'
        - in: query
          name: next_page_token
          type: string
          description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Telephone report returned.<br>
            This is only available for paid account:{accountId}.<br>
            The requested report cannot be generated for this account because this account has not subscribed to toll-free audio conference plan.<br>
            Toll Report feature must be enabled to perform this action. Contact the Zoom Support team for help.
          schema:
            allOf:
              - properties:
                  from:
                    type: string
                    format: date
                    description: Start date for this report.
                  to:
                    type: string
                    format: date
                    description: End date for this report.
                  page_count:
                    type: integer
                    description: The number of pages returned for the request made.
                  next_page_token:
                    type: integer
                    description: The page number of the current results.
                    default: 1
                  page_size:
                    type: integer
                    description: The number of records returned with a single API call.
                    default: 30
                    maximum: 300
                  total_records:
                    type: integer
                    description: The total number of all the records available across pages.
              - properties:
                  telephony_usage:
                    type: array
                    description: Array of telephony objects.
                    items:
                      type: object
                      properties:
                        meeting_id:
                          type: integer
                          description: '[Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in "**long**" format(represented as int64 data type in JSON), also known as the meeting number.'
                          format: int64
                        phone_number:
                          type: string
                          description: 'Toll-free telephone number. '
                        host_name:
                          type: string
                          description: User display name.
                        host_email:
                          type: string
                          description: User email.
                        dept:
                          type: string
                          description: User department.
                        start_time:
                          type: string
                          format: date-time
                          description: Call leg start time
                        end_time:
                          type: string
                          format: date-time
                          description: Call leg end time
                        duration:
                          type: integer
                          description: Call leg duration
                        total:
                          type: number
                          description: Total cost (USD) for Call Out. Calculated as plan rate by duration.
                        country_name:
                          type: string
                          description: Country name.
                        meeting_type:
                          type: string
                          description: Meeting type.
                        call_in_number:
                          type: string
                          description: Caller's call-in number.
                        uuid:
                          type: string
                          description: Meeting UUID.
                        type:
                          type: string
                          description: Call type.
                          enum:
                            - toll-free
                            - call-out
                            - call-in
                            - US toll-number
                            - global toll-number
                            - premium
                            - premium call-in
                        rate:
                          type: number
                          description: Calling rate for the telephone call.
                        host_id:
                          type: string
                          description: The user ID of the meeting host.
            type: object
          examples:
            application/json: |-
              {
                "from": "2019-06-20",
                "to": "2019-07-20",
                "page_count": 1,
                "page_number": 1,
                "page_size": 30,
                "total_records": 1,
                "telephony_usage": [
                  {
                    "meeting_id": 00000,
                    "phone_number": "000002001",
                    "host_name": "minim c",
                    "host_email": "nadhkasdg@jdskfhdsf.hjhj",
                    "dept": "Billing",
                    "start_time": "2019-07-15T23:24:52Z",
                    "end_time": "2019-07-15T23:30:19Z",
                    "duration": 6,
                    "total": 11,
                    "country_name": "nulla laboris cillum",
                    "meeting_type": "voluptate",
                    "call_in_number": "occaecat et reprehenderit"
                  }
                ]
              }
      security:
        - OAuth: []
  /report/cloud_recording:
    get:
      summary: Get cloud recording usage report
      description: |-
        Retrieve cloud recording usage report for a specified period. You can only get cloud recording reports that is one day ealier than the current date and for the most recent period of 6 months. The date gap between from and to dates should be smaller or equal to 30 days. <br>
        **Prerequisites**<br>
        * Pro or higher plan.<br>
        **Scopes:** `report:read:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`
      tags:
        - Reports
      operationId: reportCloudRecording
      parameters:
        - $ref: '#/parameters/FromDate'
        - $ref: '#/parameters/ToDate'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Cloud Recording Report Returned
          schema:
            allOf:
              - properties:
                  from:
                    type: string
                    format: date
                    description: Start date for this report
                  to:
                    type: string
                    format: date
                    description: End date for this report
              - properties:
                  cloud_recording_storage:
                    type: array
                    description: Array of cloud usage objects
                    items:
                      properties:
                        date:
                          type: string
                          format: date-time
                          description: Date of the usage
                        usage:
                          type: string
                          description: Storage used on the date
                        plan_usage:
                          type: string
                          description: Paid storage
                        free_usage:
                          type: string
                          description: Free storage
          examples:
            application/json:
              from: '2019-09-14'
              to: '2019-09-14'
              cloud_recording_storage:
                - date: '2019-09-14'
                  usage: 29 MB
                  plan_usage: '0'
                  free_usage: 1 GB
        '300':
          description: |-
            **HTTP Status Code:** `300`<br>
            Only provide report in recent 6 months
      security:
        - OAuth: []
  /report/operationlogs:
    get:
      summary: Get operation logs report
      description: |-
        The [Operations Logs](https://support.zoom.us/hc/en-us/articles/360032748331-Operation-Logs) report allows you to audit admin and user activity, such as adding a new user, changing account settings, and deleting recordings.<br>
        Use this API to retrieve operation logs report for a specified period of time.<br>
        **Scopes:** `report:read:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>
        **Prerequisites:**<br>
        * Pro or higher plan.
      tags:
        - Reports
      operationId: reportOperationLogs
      parameters:
        - $ref: '#/parameters/FromDate'
        - $ref: '#/parameters/ToDate'
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/NextPageToken'
        - in: query
          name: category_type
          type: string
          description: |-
            **Optional**<br>
            Filter your response by a category type to see reports for a specific category.
            The value for this field can be one of the following:<br> `all`<br>`user`<br>`user_settings`<br>`account`<br>`billing`<br>`im`<br>`recording`<br>`phone_contacts`<br>`webinar`<br>`sub_account`<br>`role`<br>`zoom_rooms`
          enum:
            - all
            - user
            - user_settings
            - account
            - billing
            - im
            - recording
            - phone_contacts
            - webinar
            - sub_account
            - role
            - zoom_rooms
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Operation Logs Report Returned
          schema:
            allOf:
              - $ref: '#/definitions/PaginationToken4IMChat'
              - type: object
                properties:
                  operation_logs:
                    type: array
                    description: Array of operation log objects
                    items:
                      type: object
                      properties:
                        time:
                          type: string
                          format: date-time
                          description: The time at which the operation was performed.
                        operator:
                          type: string
                          description: The user who performed the operation.
                        category_type:
                          type: string
                          description: Category type
                        action:
                          type: string
                          description: Action
                        operation_detail:
                          type: string
                          description: Operation detail
          examples:
            application/json:
              from: '2019-08-14'
              to: '2019-09-14'
              page_size: 30
              next_page_token: czxcxdvxvddc
              operation_logs:
                - time: '2019-08-20T19:09:01Z'
                  operator: someuser@sfksfhksdfsf.com
                  category_type: User
                  action: Update
                  operation_detail: 'Activate User sjkfhdsf@jdfgkhgd.com '
                - time: '2019-08-20T18:59:56Z'
                  operator: anotheruser@sfhidshfidshufds.com
                  category_type: User
                  action: Update
                  operation_detail: 'Deactivate User mynewemail@jdfkdshfhjdsf.ffasdm '
        '300':
          description: '**HTTP Status Code:** `300`<br>Only provide report in recent 6 months'
      security:
        - OAuth: []
  /roles:
    get:
      summary: List roles
      description: |-
        List [roles](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control) on your account

        **Scopes:** `role:read:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>
        **Prerequisites** :
        *  Pro or higher plan.
        *  For setting the initial role, you must be the Account Owner.
        *  For subsequent role management, you must be the Account Owner or user with role management permissions.
      tags:
        - Roles
      operationId: roles
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            List of roles returned.
          schema:
            $ref: '#/definitions/RoleList'
          examples:
            application/json:
              total_records: 3
              roles:
                - id: '0'
                  name: Owner
                  description: Account owner has full privileges to access and manage a Zoom account.
                  total_members: 1
                - id: '1'
                  name: Admin
                  description: Admins have wide range privileges to access and manage a Zoom account.
                  total_members: 0
                - id: '2'
                  name: Member
                  description: Members have access to basic Zoom video meeting functions but no account management privileges.
                  total_members: 1
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>
            Bad request<br>**Error Code:** `4700`<br>Invalid access token, does not contain role:read:admin scope.
      security:
        - OAuth: []
    post:
      responses:
        '200':
          description: |-
            **Status Code:** `200`<br>
            You do not have the permission to create a role.
          schema: {}
        '201':
          description: |-
            **Status Code:** `201`<br>
            Role created.
          schema:
            type: object
            properties:
              id:
                type: string
                description: Role Id
              name:
                type: string
                description: Name of the role.
              description:
                type: string
                description: Description of the role.
              total_members:
                description: Total members assigned to the role.
                type: integer
              privileges:
                type: array
                description: '[Privileges](https://marketplace.zoom.us/docs/api-reference/other-references/privileges) provided to the role.'
                items:
                  type: string
        '300':
          description: |-
            **Error Code:** `300`<br>
            The name field cannot be empty.
      summary: Create a role
      description: |-
        Each Zoom user automatically has a role which can either be owner, administrator, or a member.

        **Pre-requisite:**<br>
        * Pro or higher plan.
        * For setting the initial role, you must be the Account Owner.<br>
        * For subsequent role management, you must be the Account Owner or user with role management permissions.<br>
        **Scopes:** `role:write:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      operationId: createRole
      tags:
        - Roles
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              name:
                type: string
                description: Name of the role.
              description:
                type: string
                description: Description of the role.
              privileges:
                type: array
                description: 'Privileges assigned to the role. Can be one or a combination of [these permissions](https://marketplace.zoom.us/docs/api-reference/other-references/privileges).'
                items:
                  type: string
          x-examples:
            application/json:
              name: Group Administrator
              description: A person with this role can view and manage groups.
              privileges:
                - 'User:Read'
                - 'User:Edit'
                - 'Group:Read'
                - 'Group:Edit'
      security:
        - OAuth: []
  '/roles/{roleId}/members':
    get:
      summary: List members in a role
      description: |-
        User [roles](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control) can have a set of permissions that allows access only to the pages a user needs to view or edit. Use this API to list all the members that are assigned a specific role.

        **Scope:** `role:read:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>**Prerequisites:**<br>
        * A Pro or a higher plan.
      tags:
        - Roles
      operationId: roleMembers
      parameters:
        - $ref: '#/parameters/RoleId'
        - in: query
          name: page_count
          type: string
          description: The number of pages returned for this request.
        - $ref: '#/parameters/PageNumber'
        - $ref: '#/parameters/NextPageToken'
        - $ref: '#/parameters/PageSize'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Success
          schema:
            $ref: '#/definitions/RoleMembersList'
          examples:
            application/json:
              page_count: 1
              page_number: 1
              page_size: 30
              total_records: 1
              members:
                - id: zadksadjBBBBBBB8uQ
                  email: someemail.email.com
                  first_name: Taylor
                  last_name: Gomez
                  type: 2
                  department: Chemistry
        '404':
          description: '**HTTP Status Code:** `404`<br>Role not found'
      security:
        - OAuth: []
    post:
      summary: Assign a role
      description: |-
        User [roles](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control) can have a set of permissions that allows access only to the pages a user needs to view or edit. Use this API to [assign a role](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control#h_748b6fd8-5057-4cf4-bbfd-787909c09db0) to members.

        **Scopes:** `role:write:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>
        **Prerequisites:**<br>
        * A Pro or a higher plan.
      tags:
        - Roles
      operationId: AddRoleMembers
      parameters:
        - $ref: '#/parameters/RoleId'
        - name: body
          description: Role members
          required: true
          in: body
          schema:
            type: object
            properties:
              members:
                type: array
                description: Array of userId/user email of users to whom you would like to assign this role. Upto 30 users can be assigned a role at once.
                uniqueItems: false
                maxItems: 30
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: 'User ID of the user to whom you would like to assign the role. '
                    email:
                      type: string
                      description: 'Email address of the user to whom you would like to assign the role. Provide either the userId in the ID field or the email address in the email field. If both fields are provided, only userId is used.'
                      format: email
          x-examples:
            application/json:
              members:
                - id: dsfdsgrdgt
                - id: sdkjsfdffds
      responses:
        '201':
          description: '**HTTP Status Code:** `201`<br>Members Added'
          headers:
            Content-Location:
              description: Location of created members
              type: string
          schema:
            type: object
            properties:
              ids:
                type: string
                description: User ID
              add_at:
                type: string
                format: date-time
                description: Date and time at which the members are assigned to the role.
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>

            **Error Code:** `1034`
            Role does not exist.<br><br>
            **Error Code:** `300`<br>
            RoleId required.<br>
            Can’t delete or add members for Normal/Owner roles.<br><br>
      security:
        - OAuth: []
  '/roles/{roleId}/members/{memberId}':
    delete:
      summary: Unassign a role
      description: |-
        User [roles](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control) can have a set of permissions that allows access only to the pages a user needs to view or edit. Use this API to unassign a user's role.

        **Scope:** `role:write:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>
        **Prerequisites:**<br>
        * A Pro or a higher plan.
      tags:
        - Roles
      operationId: roleMemberDelete
      parameters:
        - $ref: '#/parameters/RoleId'
        - name: memberId
          description: Member's ID
          in: path
          type: string
          required: true
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`<br>
            Role withdrawn from user.
        '404':
          description: '**HTTP Status Code:** `404`<br>Role or Member not found'
      security:
        - OAuth: []
  /tsp:
    get:
      summary: Get account's TSP information
      description: |-
        Get information on Telephony Service Provider on an account level.<br><br>
        **Scopes:** `tsp:read:admin` <br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`

        **Prerequisites:**<br>
        * A Pro or a higher plan.
      tags:
        - TSP
      operationId: tsp
      parameters: []
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            TSP account detail returned successfully.
          schema:
            type: object
            properties:
              tsp_provider:
                type: string
                description: Telephony Service Provider.
              enable:
                type: boolean
                description: Enable Telephony Service Provider for account users.
              dial_in_numbers:
                type: array
                items:
                  type: object
                  properties:
                    code:
                      type: string
                      description: Country Code
                    number:
                      type: string
                      description: 'Dial-in number, length is less than 16'
                      maxLength: 16
                    type:
                      type: string
                      description: Dial-in number type.
              tsp_enabled:
                type: boolean
                description: Enable TSP feature for account. This has to be enabled to use any other tsp settings/features.
              master_account_setting_extended:
                type: boolean
                description: 'For master account, extend its TSP setting to all sub accounts. For sub account, extend TSP setting from master account.'
              modify_credential_forbidden:
                type: boolean
                description: Control restriction on account users being able to modify their TSP credentials.
              dial_in_number_unrestricted:
                type: boolean
                description: Control restriction on account users adding a TSP number outside of account's dial in numbers.
              tsp_bridge:
                type: string
                enum:
                  - US_TSP_TB
                  - EU_TSP_TB
                description: Telephony bridge zone
          examples:
            application/json:
              tsp_provider: someprovidername
              enable: true
              dial_in_numbers:
                - code: '111'
                  number: '000000000'
                  type: toll
              tsp_enabled: true
              master_account_setting_extended: false
              modify_credential_forbidden: true
              dial_in_number_unrestricted: false
              tsp_bridge: string
    patch:
      summary: Update account's TSP information
      description: |
        Update information of the Telephony Service Provider set up on an account.<br>
        **Prerequisites**:<br>
        TSP account option should be enabled.<br>
        **Scopes:** `tsp:write:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      tags:
        - TSP
      operationId: tspUpdate
      parameters:
        - in: body
          name: body
          required: true
          description: TSP Account
          schema:
            type: object
            properties:
              tsp_provider:
                type: string
                description: 3rd party audio conferencing provider
              enable:
                type: boolean
                description: Enable 3rd party audio conferencing for account users
              tsp_enabled:
                type: boolean
                description: Enable TSP feature for account. This has to be enabled to use any other tsp settings/features.
              master_account_setting_extended:
                type: boolean
                description: 'For master account, extend its TSP setting to all sub accounts. For sub account, extend TSP setting from master account.'
              modify_credential_forbidden:
                type: boolean
                description: Control restriction on account users being able to modify their TSP credentials.
              dial_in_number_unrestricted:
                type: boolean
                description: Control restriction on account users adding a TSP number outside of account's dial in numbers.
              tsp_bridge:
                type: string
                enum:
                  - US_TSP_TB
                  - EU_TSP_TB
                description: Telephony bridge
          x-examples:
            application/json:
              tsp_provider: string
              enable: boolean
              tsp_enabled: boolean
              master_account_setting_extended: boolean
              modify_credential_forbidden: boolean
              dial_in_number_unrestricted: boolean
              tsp_bridge: string
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` **No Content**<br>
            TSP Account updated.
          examples: {}
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>
            Bad request.<br>

            **Error Code:** `300`<br>
            Invalid parameter: tsp_bridge.
  /users:
    get:
      summary: List users
      description: |-
        A Zoom account can have one or more users. Use this API to list users on your account.<br><br>
        **Scopes:** `user:read:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      tags:
        - Users
      operationId: users
      parameters:
        - in: query
          name: status
          description: 'User statuses:<br>`active` - Users with an active status.<br>`inactive` - Users who are deactivated.<br>`pending` - Users with a pending status.'
          type: string
          default: active
          enum:
            - active
            - inactive
            - pending
          x-enum-descriptions:
            - users with active status
            - users with inactive status
            - users with pending status
        - $ref: '#/parameters/PageSize'
        - in: query
          name: role_id
          type: string
          description: 'Unique identifier for the role. Provide this parameter if you would like to filter the response by a specific role. You can retrieve Role IDs from [List Roles](https://marketplace.zoom.us/docs/api-reference/zoom-api/roles/roles) API. '
        - in: query
          name: page_number
          type: string
          description: The page number of the current page in the returned records.
        - in: query
          name: include_fields
          type: string
          description: |-
            Provide a value for this field if you would like to see the following attribute in the response of this API call:<br>

            `custom_attributes`: Returns custom attributes that are associated with the user.<br>`host_key`: Returns [host key](https://support.zoom.us/hc/en-us/articles/205172555-Using-your-host-key) of the user.
        - $ref: '#/parameters/NextPageToken'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            User list returned.
          schema:
            type: object
            properties:
              page_count:
                type: integer
                description: The number of pages returned for the request made.
              page_number:
                type: integer
                description: The page number of the current results.
                default: 1
              next_page_token:
                type: string
                description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
              page_size:
                type: integer
                default: 30
                description: The number of records returned within a single API call.
                maximum: 300
              total_records:
                type: integer
                description: The total number of all the records available across pages.
              users:
                type: array
                description: List of user objects.
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: User ID.
                    first_name:
                      type: string
                      description: User's first name.
                      maxLength: 64
                    last_name:
                      type: string
                      description: User's last name.
                      maxLength: 64
                    email:
                      type: string
                      description: User's email address.
                      default: john.doe@gmail.com
                    type:
                      type: integer
                      description: |
                        User's plan type.<br>
                        `1` - Basic.<br>
                        `2` - Licensed.<br>
                        `3` - On-prem.<br>
                        `99` - None (this can only be set with `ssoCreate`).
                      example: 1
                    status:
                      type: string
                      description: User's status
                      example: active
                    pmi:
                      type: integer
                      description: Personal meeting ID of the user.
                      format: int64
                    timezone:
                      type: string
                      description: The time zone of the user.
                    dept:
                      type: string
                      description: 'Department, if provided by the user.'
                    role_id:
                      type: string
                      description: 'Unique identifier of the [role](https://marketplace.zoom.us/docs/api-reference/zoom-api/roles/roles) assigned to the user.'
                    created_at:
                      type: string
                      description: The time when user's account was created.
                      format: date-time
                    last_login_time:
                      type: string
                      description: 'User''s last login time. There is a three-days buffer period for this field. For example, if user first logged in on 2020-01-01 and then logged out and logged in on 2020-01-02, the value of this field will still reflect the login time of 2020-01-01. However, if the user logs in on 2020-01-04, the value of this field will reflect the corresponding login time since it exceeds the three-day buffer period.'
                      format: date-time
                    last_client_version:
                      type: string
                      description: The last client version that user used to login.
                    group_ids:
                      type: array
                      description: IDs of groups where the user is a member.
                      items:
                        type: string
                    im_group_ids:
                      type: array
                      description: IDs of IM directory groups where the user is a member.
                      items:
                        type: string
                    verified:
                      type: integer
                      description: |-
                        Display whether the user's email address for the Zoom account is verified or not. <br>
                        `1` - Verified user email.<br>
                        `0` - User's email not verified.
                    custom_attributes:
                      type: array
                      description: Custom attributes. This field is only returned if users have been assigned custom attributes and if you provided `custom_attributes` as the value of `include_fields` query parameter in the API request.
                      items:
                        type: object
                        properties:
                          key:
                            type: string
                            description: Unique identifier of the custom attribute.
                          name:
                            type: string
                            description: Name of the custom attribute.
                          value:
                            type: string
                            description: Value of the custom attribute.
                    host_key:
                      type: string
                      description: 'The [host key](https://support.zoom.us/hc/en-us/articles/205172555-Using-your-host-key) of the user. This field is only returned if users have been assigned a host key and if you provided `host_key` as the value of `include_fields` query parameter in the API request.'
                    plan_united_type:
                      type: string
                      description: 'This field is returned if the user is enrolled in the [Zoom United](https://zoom.us/pricing/zoom-bundles) plan.'
                  required:
                    - email
                    - type
          examples:
            application/json:
              page_count: 1
              page_number: 1
              page_size: 30
              total_records: 1
              users:
                - id: z8yAAAAA8bbbQ
                  first_name: Melina
                  last_name: Ghimire
                  email: mel@jfggdhfhdfj.djfhdsfh
                  type: 2
                  pmi: 581111112
                  timezone: America/Los_Angeles
                  verified: 1
                  dept: ''
                  created_at: '2018-11-15T01:10:08Z'
                  last_login_time: '2019-09-13T21:08:52Z'
                  last_client_version: 4.4.55383.0716(android)
                  pic_url: 'https://lh4.googleusercontent.com/-someurl/photo.jpg'
                  im_group_ids:
                    - Abdsjkfhdhfj
                  status: active
      security:
        - OAuth: []
    post:
      summary: Create users
      description: |-
        A Zoom account can have one or more users. Use this API to add a new user to your account.<br><br>
        **Prerequisites:**<br>
        * Pro or higher plan<br><br>
        **Scopes:** `user:write:admin` `user:write`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      tags:
        - Users
      operationId: userCreate
      parameters:
        - in: body
          name: body
          required: true
          description: User
          schema:
            type: object
            properties:
              action:
                type: string
                description: 'Specify how to create the new user: <br>`create` - User will get an email sent from Zoom. There is a confirmation link in this email. The user will then need to use the link to activate their Zoom account. The user can then set or change their password.<br>`autoCreate` - This action is provided for the enterprise customer who has a managed domain. This feature is disabled by default because of the security risk involved in creating a user who does not belong to your domain.<br>`custCreate` - Users created via this option do not have passwords and will not have the ability to log into the Zoom Web Portal or the Zoom Client. These users can still host and join meetings using the `start_url` and `join_url` respectively. To use this option, you must contact the ISV Platform Sales team at isv@zoom.us.<br>`ssoCreate` - This action is provided for the enabled “Pre-provisioning SSO User” option. A user created in this way has no password. If not a basic user, a personal vanity URL using the user name (no domain) of the provisioning email will be generated. If the user name or PMI is invalid or occupied, it will use a random number or random personal vanity URL.'
                enum:
                  - create
                  - autoCreate
                  - custCreate
                  - ssoCreate
                x-enum-descriptions:
                  - User will get an email sent from Zoom. There is a confirmation link in this email. User will then need to click this link to activate their account to the Zoom service. The user can set or change their password in Zoom. <br/>.
                  - This action is provided for enterprise customer who has a managed domain. This feature is disabled by default because of the security risk involved in creating a user who does not belong to your domain without notifying the user. <br/>
                  - This action is provided for API partner only. User created in this way has no password and is not able to log into the Zoom web site or client. <br/>
                  - 'This action is provided for enabled "Pre-provisioning SSO User" option. User created in this way has no password. If it is not a basic user, will generate a Personal Vanity URL using user name (no domain) of the provisioning email. If user name or pmi is invalid or occupied, will use random number/random personal vanity URL. <br/>'
              user_info:
                type: object
                properties:
                  email:
                    type: string
                    description: User email address.
                    maxLength: 128
                  type:
                    type: integer
                    description: 'User type:<br>`1` - Basic.<br>`2` - Licensed.<br>`3` - On-prem.<br>`99` - None (this can only be set with `ssoCreate`).'
                    enum:
                      - 1
                      - 2
                      - 3
                      - 99
                  first_name:
                    type: string
                    description: 'User''s first name: cannot contain more than 5 Chinese words.'
                    maxLength: 64
                  last_name:
                    type: string
                    description: 'User''s last name: cannot contain more than 5 Chinese words.'
                    maxLength: 64
                  password:
                    type: string
                    description: |-
                      User password. Only used for the "autoCreate" function. The password has to have a minimum of 8 characters and maximum of 32 characters. By default (basic requirement), password must have at least one letter (a, b, c..), at least one number (1, 2, 3...) and include both uppercase and lowercase letters. It should not contain only one identical character repeatedly ('11111111' or 'aaaaaaaa') and it cannot contain consecutive characters ('12345678' or 'abcdefgh').

                      **Note:** If the account owner or admin has enabled [enhanced password requirements](https://support.zoom.us/hc/en-us/articles/360034675592-Advanced-security-settings#h_fa9186e4-6818-4f7a-915c-2e25c19f0acd), the value provided in this field must meet those requirements. These requirements can be retrieved by calling the [Get Account Settings API](https://marketplace.zoom.us/docs/api-reference/zoom-api/accounts/accountsettings) and referring to the `password_requirement` field present in the `security` object.
                    format: password
                    minLength: 8
                    maxLength: 32
                required:
                  - email
                  - type
            required:
              - action
          x-examples:
            application/json:
              action: create
              user_info:
                email: dhjdfkghdskjf@fgkjfdlgjfkd.gh
                type: 1
                first_name: Terry
                last_name: Jones
      responses:
        '201':
          description: |-
            **HTTP Status Code:** `201`<br>
            User created.
          headers:
            Content-Location:
              description: Location of created User
              type: string
          schema:
            type: object
            properties:
              id:
                type: string
                description: User ID.
              first_name:
                type: string
                description: User's first name.
                maxLength: 64
              last_name:
                type: string
                description: User's last name.
                maxLength: 64
              email:
                type: string
                description: User email address.
              type:
                type: integer
                description: |
                  User type:<br>`1` - Basic.<br>`2` - Licensed.<br>`3` - On-prem.<br>`99` - None (this can only be set with `ssoCreate`).
                enum:
                  - 1
                  - 2
                  - 3
                  - 99
          examples:
            application/json:
              id: string
              first_name: string
              last_name: string
              email: string
              type: integer
        '400':
          description: |+
            **HTTP Status Code:** `400` **Bad Request** <br><br> **Error Code:** `300`<br>
            Invalid parameter: password<br><br>
            **Error Code:** `200`<br>No privilege. <br>No permission, please contact Zoom customer support.<br><br>**Error Code:** `1000`<br>The user cannot be changed because they are a Call-queue manager or Auto-receptionist operator.<br><br>
            **Error Code:**`300`<br> Your request could not be completed because the name contains an invalid word: {name}<br>The value provided for plan_united_type parameter is invalid. Try again with a valid value.<br><br>
            **Error Code:** `1009`<br>The user $email already holds an active account.<br><br>**Error Code:** `1107`<br>Email domain is blocked<br>**Error Code:** `2034` <br>Your request to add a new {0} user could not be approved at this time because your account has reached the permitted maximum number of {1} users. Please purchase additional licenses or contact the Zoom support team to provision additional users in your account.<br><br>**Error Code:** `2033`<br>
            Your request to add a basic user was not approved because you have already reached the maximum basic user limit allowed in your account. For additional help regarding this issue, contact the Zoom Customer Support team.<br>
            **Error Code:** `3412`<br>Your request to add a basic user could not be approved at this time because your account has reached the permitted maximum number of $maxAllowedNumber basic users. Please remove existing basic user(s) from your Users list or the Pending Users list before attempting to add another user.
            <br>Your request to add a new $userType user could not be approved at this time because your account has reached the permitted maximum number of $maxAllowedNumber paying users. Please purchase additional licenses or contact the Zoom support team to provision additional users in your account.<br><br>
            **Error Code:** `1108`<br>Permission requirements to change the user type of this user were not met.<br><br>
            **Error Code:** `1116`<br>Email address $email doesn't match limited domains: $domains<br><br>
            **Error Code:** `2002`<br>SSO has not been enabled for this account. Contact the Zoom support team to enable this option.<br><br>
            **Error Code:** `2032`<br>The ssoCreate option is only available for SSO Partners that have enabled the pre-provision option. Contact the Zoom Support team to learn more.<br><br>

        '404':
          description: |-
            **HTTP Status Code:** `404` **Not Found**<br><br>
            **Error Code:** `4130`<br>
            Group does not exist: $groupId<br>
          examples: {}
        '409':
          description: |-
            **HTTP Status Code:** `409`<br>User with that email already exists<br>
            **Error Code:** `1005`<br>Email $email has already been used.
          examples: {}
      security:
        - OAuth: []
  '/users/{userId}':
    get:
      summary: Get a user
      description: |-
        A Zoom account can have one or more users. Use this API to view information of a specific user on a Zoom account.<br><br>
        **Scopes:** `user:read:admin` `user:read`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
        <p style="background-color:#e1f5fe; color:#01579b; padding:8px"> <b>Note: </b>If a user's status is pending, only `id` and `created_at` fields will be returned. The value of `created_at` will be the time at which the API call was made until the user activates their account.</p>
      tags:
        - Users
      operationId: user
      parameters:
        - $ref: '#/parameters/UserId'
        - $ref: '#/parameters/LoginType'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` **OK**<br>
            User object returned.
          schema:
            allOf:
              - type: object
                properties:
                  id:
                    type: string
                    description: User ID.
              - $ref: '#/definitions/User'
              - type: object
                properties:
                  language:
                    type: string
                    description: Default language for the Zoom Web Portal.
                  phone_country:
                    type: string
                    description: '**Note:** This field has been **deprecated** and will not be supported in the future. Use the **phone_numbers** field instead of this field. <br> User''s country for Company Phone Number.'
                  phone_number:
                    type: string
                    description: '**Note:** This field has been **deprecated** and will not be supported in the future. Use the **phone_numbers** field instead of this field. <br> User''s phone number.'
                  phone_numbers:
                    type: object
                    properties:
                      country:
                        type: string
                        description: '[Country ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) of the phone number. For example, if the phone number provided in the `number` field is a Brazil based number, the value of the `country` field should be `BR`.'
                      code:
                        type: string
                        description: 'Country code of the phone number. For example, for United States phone numbers, the value of this field should be "+1".'
                      number:
                        type: string
                        description: Phone number of the user.
                      verified:
                        type: boolean
                        description: Indicates whether the phone number has been verified by Zoom or not.
                  vanity_url:
                    type: string
                    description: 'Personal meeting room URL, if the user has one.'
                  personal_meeting_url:
                    type: string
                    description: User's personal meeting url.
                  verified:
                    type: integer
                    description: |-
                      Displays whether user is verified or not. <br>
                      `1` - Account verified.<br>
                      `0` - Account not verified.
                  pic_url:
                    type: string
                    description: The URL for user's profile picture.
                  cms_user_id:
                    type: string
                    description: 'CMS ID of user, only enabled for Kaltura integration.'
                  account_id:
                    type: string
                    description: User's account ID.
                  host_key:
                    type: string
                    description: User's host key.
                  use_pmi:
                    type: boolean
                    default: false
                    description: 'Displays `true` if user has enabled PMI for instant meetinsgs, `false` otherwise.'
                  status:
                    type: string
                    enum:
                      - pending
                      - active
                      - inactive
                    x-enum-descriptions:
                      - Pending User
                      - Active User
                      - Deactivated User
                    description: Status of user's account.
                  group_ids:
                    type: array
                    description: 'IDs of the web groups user belongs to. '
                    items:
                      type: string
                  im_group_ids:
                    type: array
                    description: IM IDs of the groups user belongs to.
                    items:
                      type: string
                  jid:
                    type: string
                  job_title:
                    type: string
                    description: User's job title.
                  company:
                    type: string
                    description: User's company.
                  location:
                    type: string
                    description: User's location.
                  created_at:
                    type: string
                    description: The date and time at which this user was created.
                    format: date-time
                  custom_attributes:
                    type: object
                    description: Custom attribute(s) that have been assigned to the user.
                    properties:
                      key:
                        type: string
                        description: Identifier for the custom attribute.
                      name:
                        type: string
                        description: Name of the custom attribute.
                      value:
                        type: string
                        description: Value of the custom attribute.
                  login_type:
                    type: integer
                    description: |-
                      Login type.

                      `0` : Facebook

                      `1` : Google

                      `99` : API

                      `100` : ZOOM

                      `101` : SSO
                    enum:
                      - 0
                      - 1
                      - 99
                      - 100
                      - 101
                  role_id:
                    type: string
                    description: 'Unique identifier of the [role](https://marketplace.zoom.us/docs/api-reference/zoom-api/roles/roles) assigned to the user.'
                  plan_united_type:
                    type: string
                    description: 'United plan [type](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-united-plans). Only returned if user is enrolled in the Zoom United plan.'
                  manager:
                    type: string
                    description: The manager for the user.
                    format: email
          examples:
            application/json:
              created_at: '2018-11-15T01:10:08Z'
              custom_attributes:
                - key: cb3674544gexq
                  name: Country of Citizenship
                  value: Nepal
              id: z8dsdsdsdsdCfp8uQ
              first_name: Harry
              last_name: Grande
              email: harryg@dfkjdslfjkdsfjkdsf.fsdfdfd
              type: 2
              role_name: Owner
              pmi: 100000000
              use_pmi: false
              personal_meeting_url: 'https://zoom.us/j/6352635623323434343443'
              timezone: America/Los_Angeles
              verified: 1
              dept: ''
              last_login_time: '2019-09-13T21:08:52Z'
              last_client_version: 4.4.55383.0716(android)
              pic_url: 'https://lh4.googleusercontent.com/-hsgfhdgsfghdsfghfd-photo.jpg'
              host_key: '0000'
              jid: hghghfghdfghdfhgh@xmpp.zoom.us
              group_ids: []
              im_group_ids:
                - CcSAAAAAAABBBVoQ
              account_id: EAAAAAbbbbbCCCCHMA
              language: en-US
              phone_country: USA
              phone_number: '00000000'
              status: active
              role_id: hdsfwyteg3675hgfs
              manager: name@example.com
        '400':
          description: |
            **HTTP Status Code:** `400` **Bad Request**<br>
            Bad request<br>
            **Error Code:** `1120`<br>
            A valid invitation to join the Zoom account was not found for this user. <br>
            This error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid.
        '404':
          description: |-
            **HTTP Status Code:** `404` **Not Found**<br>
            **Error Code:** `1001`<br>
            User does not exist: $userId.<br>
    patch:
      summary: Update a user
      description: |-
        Update information on a user's Zoom [profile](https://support.zoom.us/hc/en-us/articles/201363203-My-Profile).<br><br>
        **Scopes:** `user:write:admin` `user:write`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      tags:
        - Users
      operationId: userUpdate
      parameters:
        - $ref: '#/parameters/UserId'
        - in: body
          name: body
          required: true
          description: User
          schema:
            $ref: '#/definitions/UserUpdate'
          x-examples:
            application/json:
              first_name: string
              last_name: string
              type: integer
              pmi: integer
              timezone: 'string [date-time]'
              dept: string
              vanity_name: string
              host_key: string
              cms_user_id: string
              job_title: string
              company: string
              location: string
              phone_number: string
              phone_country: string
        - $ref: '#/parameters/LoginType'
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` <br>
            User updated.
          examples: {}
        '400':
          description: |-
            **HTTP Status Code:** `400` **Bad Request**<br><br>
            **Error Code:** `200`<br>A Zoom Room user cannot be updated to a free user type: $userId<br><br>
            **Error Code:**`300`<br> Your request could not be completed because the name contains an invalid word: {name}<br>Invalid parameter: password<br>The value provided for plan_united_type parameter is invalid. Try again with a valid value.<br><br>
            **Error Code:** `1108`<br>Permission requirements to change the user type of this user were not met.<br><br>
            **Error Code:** `1109`<br>Host is not a paid user.
            **Error Code:** `1120`<br>A valid invitation to join the Zoom account was not found for this user. <br>This error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid.<br>**Error Code:** `2034`<br>Your request to convert the plan type of this user to {0} was not approved at this time because your account has reached the permitted maximum number of {1} users. Please purchase additional licenses or contact the Zoom support team to provision additional users in your account.
            <br><br>**Error Code:** `2033`<br>Your request to convert the user type to basic was not approved because you have already reached the maximum basic user limit allowed in your account. For additional help regarding this issue, contact the Zoom Customer Support team.<br>
            **Error Code:** `3412`<br>Your request to convert the user type of this $userType user to a basic user was not approved at this time because your account has reached the permitted maximum number of $maxAllowedNumber basic users. Please remove existing basic user(s) from your Users list or the Pending Users list before attempting to convert a paying user to a basic user.
            <br>Your request to convert the user type of this basic user to a $userType user was not approved at this time because your account has reached the permitted maximum number of $maxAllowedNumber paying users. Please purchase additional licenses or remove existing paying user(s) from your Users list or the Pending Users list before attempting to convert a basic user to a paying user.<br><br>
            **Error Code:** `4100`<br>
            User is already taken by a user from your account. Choose another Personal Link Name and try again.
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            **Error Code:** `1001`<br>
            User does not exist: $userId.<br>
    delete:
      summary: Delete a user
      description: |-
        Deleting a user permanently removes them and their data from Zoom. They will be able to create a new Zoom account with the same email address if they have access to it. An account owner or an account admin can transfer meetings, webinars and cloud recordings to another Zoom user before deleting, but if not transferred, they will be permanently deleted.<br><br>

        By default, this API disassociates (unlinks) a user from the associated account. The disassociation will give them their own basic, free Zoom account. It will not be associated with your account, and they will be able to purchase their own licenses. You can transfer the user's data (meetings, webinars and cloud recordings) to another user before disassociation.<br> To permanently delete a user, specify "delete" as the value of the `action` query parameter.
        **Scopes:** `user:write:admin` `user:write`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      tags:
        - Users
      operationId: userDelete
      parameters:
        - $ref: '#/parameters/UserId'
        - in: query
          name: action
          description: 'Delete action options:<br>`disassociate` - Disassociate a user.<br>`delete`-  Permanently delete a user.<br>Note: To delete pending user in the account, use `disassociate`'
          type: string
          default: disassociate
          enum:
            - disassociate
            - delete
          x-enum-descriptions:
            - Disassociate a user
            - Permanently delete a user
        - $ref: '#/parameters/TransferEmail'
        - $ref: '#/parameters/TransferMeeting'
        - $ref: '#/parameters/TransferWebinar'
        - $ref: '#/parameters/TransferRecording'
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`<br>
            User deleted.
        '400':
          description: |-
            **HTTP Status Code:** `400` **Bad Request** <br><br> **Error Code:** `300`<br>The transfer-to email address cannot be the same as the unlinked or deleted user’s email address.<br> Unable to unlink API user(s).<br><br>
            **Error Code:** `200`<br>Cannot delete a user out of your account. <br>Cannot delete a Zoom Rooms user. <br><br>
            **Error Code:** `1000`<br>
            The user cannot be changed because they are a Call-queue manager or Auto-receptionist operator.<br><br>
            **Error Code:** `1107`<br>You can not disassociate a user with managed domain.<br><br>
            **Error Code:** `1117`<br>You can not disassociate an Admin user.<br><br>
            **Error Code:** `1120`<br>A valid invitation to join the Zoom account was not found for this user. <br>This error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid.
        '404':
          description: |-
            **HTTP Status Code:** `404` **Not Found**<br><br>
            **Error Code:** `1001`<br>
            User does not exist: $userId.<br>
  /users/me/zak:
    get:
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              token:
                type: string
                description: The user's ZAK.
          examples:
            application/json:
              token: sslldd00933aaas
        '400':
          description: |-
            **HTTP Status Code:** `404` <br>

            **Error Code:** `1001`<br>
            User not exist.<br>
            User {userId} does not exist or does not belong to this account.
      summary: Get user's ZAK
      description: |+
        Get User’s Zoom Access Token (ZAK). You can use a ZAK to enable a non-login user to join a meeting on your app. Non-login users do not need to enter their username and password to join meetings.

        **Scope:** `user_zak:read`<br>
        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`

      operationId: userZak
      tags:
        - Users
      security:
        - OAuth: []
  '/users/{userId}/assistants':
    get:
      summary: List user assistants
      description: |-
        List a user's assistants.

        Assistants are the users to whom the current user has assigned [scheduling privilege](https://support.zoom.us/hc/en-us/articles/201362803-Scheduling-Privilege). These assistants can schedule meeting on behalf of the current user as well as manage and act as an alternative host for all meetings if the admin has enabled [Co-host option](https://zoom.us/account/setting) on the account.<br><br>
        **Prerequisites**: <br>
        * Current user as well as the assistant must have Licensed or an On-prem license.
        * Assistants must be under the current user's account.<br>
        **Scopes**: `user:read:admin` `user:read`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      tags:
        - Users
      operationId: userAssistants
      parameters:
        - $ref: '#/parameters/UserId'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Success.
          schema:
            $ref: '#/definitions/UserAssistantsList'
          examples:
            application/json:
              assistants:
                - id: ddgdfgfdgfgg
                  email: sfhdfkjdf@hjdsf.fdjf
        '404':
          description: |-
            **HTTP Status Code:** `404` **Not Found**<br>
            **Error Code:** `1001`<br>
            User does not exist: $userId.<br>
    post:
      summary: Add assistants
      description: |-
        Assistants are the users to whom the current user has assigned [scheduling privilege](https://support.zoom.us/hc/en-us/articles/201362803-Scheduling-Privilege). These assistants can schedule meeting on behalf of the current user as well as manage and act as an alternative host for all meetings if the admin has enabled [Co-host option](https://zoom.us/account/setting) on the account.<br>Use this API to assign assistants to a user. <br> In the request body, provide either the User ID or the email address of the user.<br><br>
        **Prerequisite**:
        * The user as well as the assistant must have Licensed or an On-prem license.
        * Assistants must be under the current user's account.<br>
        **Scopes**: `user:write:admin` `user:write`
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`

      tags:
        - Users
      operationId: userAssistantCreate
      parameters:
        - $ref: '#/parameters/UserId'
        - name: body
          description: User assistant.
          required: true
          in: body
          schema:
            $ref: '#/definitions/UserAssistantsList'
          x-examples:
            application/json:
              assistants:
                - id: sfdsfdfdg
                  email: dgdfgfgfg@jhsdf.djf
      responses:
        '201':
          description: |-
            **HTTP Status Code:** `201`<br>
            Assistant added.
          headers:
            Content-Location:
              description: Location of created assistant
              type: string
          schema:
            type: object
            properties:
              ids:
                type: string
                description: User ID.
              add_at:
                type: string
                format: date-time
          examples:
            application/json:
              ids: string
              add_at: 'string [date-time]'
        '400':
          description: |-
            **HTTP Status Code:** `400` **Bad Request**<br><br>
            **Error Code:** `200`<br>
            Current account must be paid account: $userId <br>
            The user must either be a Licensed user or an On-prem user : $userId. <br>
            Can't assign scheduling privilege to yourself.<br>
            Can't find user $email.<br>
            User $email has already granted scheduling privilege.<br>
            The user must either be a Licensed user or an On-prem user : $email.
        '404':
          description: |-
            **HTTP Status Code:** `404` **Not Found**<br>
            **Error Code:** `1001`<br>
            User does not exist: $userId.<br>
      security:
        - OAuth: []
    delete:
      summary: Delete user assistants
      description: |-
        Delete all assistants of the current user.<br> Assistants are the users to whom the current user has assigned [scheduling privilege](https://support.zoom.us/hc/en-us/articles/201362803-Scheduling-Privilege). These assistants can schedule meeting on behalf of the current user as well as manage and act as an alternative host for all meetings if the admin has enabled [Co-host option](https://zoom.us/account/setting) on the account.<br>
        **Prerequisite**:
        * The user as well as the assistant must have Licensed or an On-prem license.
        * Assistants must be under the current user's account.<br>
        **Scopes**: `user:write:admin` `user:write`
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      tags:
        - Users
      operationId: userAssistantsDelete
      parameters:
        - $ref: '#/parameters/UserId'
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` **No Content**<br>
            Assistants deleted.
        '404':
          description: |-
            **HTTP Status Code:** `404` **Not Found**<br>
            **Error Code:** `1001`<br>
            User does not exist: $userId.<br>
  '/users/{userId}/assistants/{assistantId}':
    delete:
      summary: Delete a user assistant
      description: |-
        Delete a specific assistant of a user.
        Assistants are the users to whom the current user has assigned [scheduling privilege](https://support.zoom.us/hc/en-us/articles/201362803-Scheduling-Privilege). These assistants can schedule meeting on behalf of the current user as well as manage and act as an alternative host for all meetings if the admin has enabled [Co-host option](https://zoom.us/account/setting) on the account.<br><br>
        **Prerequisites**:
        * The user as well as the assistant must have Licensed or an On-prem license.
        * Assistants must be under the current user's account.<br>
        **Scopes**: `user:write:admin` `user:write`
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      tags:
        - Users
      operationId: userAssistantDelete
      parameters:
        - $ref: '#/parameters/UserId'
        - name: assistantId
          description: Assistant ID.
          in: path
          type: string
          required: true
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` **OK**<br>
            Assistant deleted.
        '404':
          description: |
            **HTTP Status Code:** `404` **Not Found**<br><br>
            **Error Code:** `1001`<br>
            User does not exist: $userId.
  '/users/{userId}/schedulers':
    get:
      summary: List user schedulers
      description: |-
        List all the schedulers of a user. Schedulers in this context are the users for whom the current user can schedule meetings for.

        For instance, if the current user (i.e., the user whose userId was passed in the path parameter of this API call) is user A, the response of this API will contain a list of user(s), for whom user A can schedule and manage meetings. User A is the assistant of these users and thus has scheduling privilege for these user(s).

        **Prerequisites**:
        * Current user must be under the same account as the scheduler.<br>
        **Scopes**: `user:read:admin` `user:read`
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      tags:
        - Users
      operationId: userSchedulers
      parameters:
        - $ref: '#/parameters/UserId'
      responses:
        '200':
          description: '**HTTP Status Code:** `200`<br>Successfully listed all schedulers of the user.'
          schema:
            $ref: '#/definitions/UserSchedulersList'
          examples:
            application/json:
              schedulers:
                - id: abXXXsfsidfhjdsfhd768944
                  email: sjfgduyfghdfg@myemail.dshdgshfd
                - id: abXXbbbbioepur8944
                  email: sdhfefghdfg@myemail.dshdgshfd
        '404':
          description: |
            **HTTP Status Code:** `404` **Not Found**<br><br>
            **Error Code:** `1001`<br>
            User does not exist: $userId.
      security:
        - OAuth: []
    delete:
      summary: Delete user schedulers
      description: |-
        Delete all of a user's schedulers. Schedulers are users on whose behalf the current user (assistant) can schedule meetings for. By calling this API, the current user will no longer be a scheduling assistant of any user.

        **Prerequisite**: Current user (assistant) must be under the same account as the scheduler.<br>
        **Scopes**: `user:write:admin` `user:write`

        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      tags:
        - Users
      operationId: userSchedulersDelete
      parameters:
        - $ref: '#/parameters/UserId'
      responses:
        '204':
          description: |
            **HTTP Status Code:** `204`<br> All schedulers deleted.
          examples:
            application/json: ''
        '404':
          description: |
            **HTTP Status Code:** `404` **Not Found**<br><br>
            **Error Code:** `1001`<br>
            User does not exist: $userId.
      security:
        - OAuth: []
  '/users/{userId}/schedulers/{schedulerId}':
    delete:
      summary: Delete a scheduler
      description: |-
        Delete a Scheduler.

        Schedulers are users on whose behalf the current user (assistant) can schedule meetings for. By calling this API, the current user will no longer be a scheduling assistant of this scheduler.

        **Prerequisite**: Current user must be under the same account as the scheduler.<br>
        **Scopes**: `user:write:admin` `user:write`

        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      tags:
        - Users
      operationId: userSchedulerDelete
      parameters:
        - $ref: '#/parameters/UserId'
        - name: schedulerId
          description: Scheduler's ID.
          in: path
          type: string
          required: true
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`<br>
            Scheduler deleted.
        '404':
          description: |
            **HTTP Status Code:** `404` **Not Found**<br><br>
            **Error Code:** `1001`<br>
            User does not exist: $userId.
      security:
        - OAuth: []
  '/users/{userId}/picture':
    post:
      summary: Upload a user's profile picture
      description: |-
        Upload a user's profile picture.<br><br>

        Provide `multipart/form-data` as the value of the `content-type` header for this request. This API supports JPEG and PNG file formats.

        **Scopes:** `user:write:admin` `user:write`<br>

        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      tags:
        - Users
      operationId: userPicture
      parameters:
        - $ref: '#/parameters/UserId'
        - name: pic_file
          description: 'The file''s path. '
          in: formData
          type: file
          required: true
      responses:
        '201':
          description: '**HTTP Status Code:** `201`<br>Picture uploaded.'
          headers:
            Content-Location:
              description: Location of user's picture
              type: string
          examples: {}
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>
            Bad request<br>
            **Error Code:** `300`<br>
            Your request was not accepted because the profile picture contains invalid or explicit content.<br>
            **Error Code:** `120`<br>
            File is empty.<br>
            File size cannot exceed 2M.<br>
            Only jpg/jpeg or png image file can be uploaded.<br>
        '404':
          description: |
            **HTTP Status Code:** `404` **Not Found**<br><br>
            **Error Code:** `1001`<br>
            User does not exist: $userId.
      consumes:
        - multipart/form-data
  '/users/{userId}/settings':
    get:
      summary: Get user settings
      description: |-
        Retrieve a user's settings.<br><br>
        **Scopes:** `user:read:admin` `user:read`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      tags:
        - Users
      operationId: userSettings
      parameters:
        - $ref: '#/parameters/UserId'
        - $ref: '#/parameters/LoginType'
        - in: query
          name: option
          type: string
          enum:
            - meeting_authentication
            - recording_authentication
          allowEmptyValue: true
          description: |-
            `meeting_authentication`: Use this query parameter to view [meeting authentication configuration](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) applied on the user's account.<br>`recording_authentication`: Use this query parameter to view [recording authentication configuration](https://support.zoom.us/hc/en-us/articles/360037756671-Authentication-Profiles-for-Cloud-Recordings) applied on the user's account.<br>
            `meeting_security`: Use this query parameter to view meeting security settings applied on the user's account.<br>
        - in: query
          name: custom_query_fields
          type: string
          description: |-
            Provide the name of the field by which you would like to filter the response. For example, if you provide "host_video" as the value of this field, you will get a response similar to the following:<br>
            {
                "schedule_meeting": {
                    "host_video": false
                }
            }
            <br>You can provide multiple values by separating them with commas(example: "host_video,participant_video”).
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            User settings returned.
          schema:
            oneOf:
              - $ref: '#/definitions/UserSettings'
              - $ref: '#/definitions/GroupUserSettingsAuthentication'
              - $ref: '#/definitions/MeetingSecuritySettings'
          examples:
            application/json:
              schedule_meeting:
                audio_type: both
                embed_password_in_join_link: false
                force_pmi_jbh_password: true
                host_video: true
                join_before_host: false
                meeting_password_requirement:
                  have_letter: true
                  have_number: false
                  have_special_character: false
                  length: 6
                  only_allow_numeric: false
                not_store_meeting_topic: false
                participants_video: false
                pmi_password: '98654'
                pstn_password_protected: false
                require_password_for_pmi_meetings: all
                require_password_for_scheduling_new_meetings: false
                use_pmi_for_instant_meetings: true
                use_pmi_for_scheduled_meetings: false
              in_meeting:
                allow_live_streaming: false
                annotation: true
                attendee_on_hold: false
                auto_saving_chat: false
                breakout_room: false
                chat: true
                closed_caption: true
                co_host: false
                custom_data_center_regions: true
                data_center_regions:
                  - AU
                  - CN
                  - EU
                  - HK
                  - LA
                  - TY
                  - US
                e2e_encryption: false
                entry_exit_chime: all
                far_end_camera_control: false
                feedback: true
                group_hd: false
                non_verbal_feedback: false
                polling: true
                private_chat: true
                record_play_voice: false
                remote_control: true
                remote_support: false
                show_meeting_control_toolbar: false
                virtual_background: true
                waiting_room: false
              email_notification:
                jbh_reminder: false
                cancel_meeting_reminder: false
                alternative_host_reminder: false
                schedule_for_reminder: false
              recording:
                auto_delete_cmr: false
                auto_recording: none
                cloud_recording: true
                local_recording: true
                record_audio_file: true
                record_gallery_view: false
                record_speaker_view: true
                recording_audio_transcript: true
                recording_password_requirement:
                  have_letter: true
                  have_number: true
                  have_special_character: true
                  length: 8
                  only_allow_numeric: false
                save_chat_text: true
                show_timestamp: false
              telephony:
                third_party_audio: false
                audio_conference_info: ''
                show_international_numbers_link: false
              feature:
                meeting_capacity: 100
                large_meeting: false
                webinar: false
                cn_meeting: true
                in_meeting: false
                zoom_phone: false
              tsp:
                call_out: true
                call_out_countries:
                  - USA
                show_international_numbers_link: false
        '400':
          description: |-
            **HTTP Status Code:** `400` **Bad Request**<br>

            **Error Code:** `1120`<br>
            A valid invitation to join the Zoom account was not found for this user. <br>
            This error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid.
        '404':
          description: |-
            **HTTP Status Code:** `404` **Not Found**<br><br>
            **Error Code:** `1001`<br>
            User does not exist: $userId.
      security:
        - OAuth: []
    patch:
      summary: Update user settings
      description: |-
        Update a user's settings.<br><br>
        **Scopes:** `user:write:admin` `user:write`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      tags:
        - Users
      operationId: userSettingsUpdate
      parameters:
        - in: body
          name: body
          required: true
          description: User Settings
          schema:
            oneOf:
              - $ref: '#/definitions/UserSettingsUpdate'
              - $ref: '#/definitions/GroupUserSettingsAuthenticationUpdate'
              - $ref: '#/definitions/MeetingSecuritySettings'
          x-examples:
            application/json:
              schedule_meeting:
                host_video: false
                participants_video: false
                audio_type: both
                join_before_host: false
                use_pmi_for_scheduled_meetings: false
                use_pmi_for_instant_meetings: false
                enforce_login_with_domains: false
                enforce_login_domains: ''
                not_store_meeting_topic: false
                force_pmi_jbh_password: false
                require_password_for_scheduling_new_meetings: true
                require_password_for_instant_meetings: true
                require_password_for_pmi_meetings: all
                pmi_password: '324325'
                pstn_password_protected: false
              in_meeting:
                e2e_encryption: false
                chat: true
                private_chat: true
                auto_saving_chat: false
                entry_exit_chime: none
                record_play_voice: false
                feedback: true
                co_host: false
                polling: false
                attendee_on_hold: false
                show_meeting_control_toolbar: false
                annotation: true
                remote_control: true
                non_verbal_feedback: false
                breakout_room: false
                remote_support: false
                closed_caption: false
                group_hd: false
                virtual_background: true
                far_end_camera_control: false
                waiting_room: false
                allow_live_streaming: false
              email_notification:
                jbh_reminder: true
                cancel_meeting_reminder: true
                alternative_host_reminder: true
                schedule_for_reminder: true
              recording:
                local_recording: true
                cloud_recording: true
                record_speaker_view: true
                record_gallery_view: false
                record_audio_file: true
                save_chat_text: true
                show_timestamp: false
                recording_audio_transcript: false
                auto_recording: none
                auto_delete_cmr: false
              integration:
                linkedin_sales_navigator: false
        - in: query
          name: option
          type: string
          enum:
            - meeting_authentication
            - recording_authentication
            - meeting_secuirty
          allowEmptyValue: true
        - $ref: '#/parameters/UserId'
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `200`<br>
            User settings updated
        '400':
          description: |+
            **HTTP Status Code:** `400` **Bad Request** <br><br>
            **Error Code:** `1108`<br> Only Licensed or On-prem users can enable the large meeting feature.<br><br>
            **Error Code:** `1120`<br> A valid invitation to join the Zoom account was not found for this user. <br>
            This error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid.<br><br>**Error Code:** `1122`<br>
            Webinar feature can only be enabled for Licensed or On-prem users.<br><br>
            **Error Code:** `200`<br>
            You can't add paid users.<br>
            You can add max $maxNumber paid users.<br>
            You can add max $maxNumber free users.<br>
            You can add max $maxNumber Webinar 100 users.<br>
            You can add max $maxNumber Webinar 500 users.<br>
            You can add max $maxNumber Webinar 1000 users.<br>
            You can add max $maxNumber Webinar 3000 users.<br>
            You can add max $maxNumber Webinar 5000 users.<br>
            You can add max $maxNumber Webinar 10000 users.<br>
            You can add max $maxNumber Large 100 users.<br>
            You can add max $maxNumber Large 200 users.<br>
            You can add max $maxNumber Large 300 users.<br>
            You can add max $maxNumber Large 500 users.<br>
            You can add max $maxNumber Large 1000 users.<br>
            You can add max $maxNumber paid users.<br>












        '404':
          description: |
            **HTTP Status Code:** `404` **Not Found**<br><br>
            **Error Code:** `1001`<br>
            User does not exist: $userId.
      security:
        - OAuth: []
  '/users/{userId}/status':
    put:
      summary: Update user status
      description: |+
        An account owner or admins can deactivate as well as activate a user in a Zoom account. Deactivating a user will remove all licenses associated with a user. It will prevent the deactivated user from logging into their Zoom account. A deactivated user can be reactivated. Reactivating a user grants the user access to login to their Zoom account.<br> Use this API to either [deactivate](https://support.zoom.us/hc/en-us/articles/115005269946-Remove-User-from-your-Account#h_6a9bc1c3-d739-4945-b1f2-00b3b88fb5cc) an active user or to [reactivate](https://support.zoom.us/hc/en-us/articles/115005269946-Remove-User-from-your-Account#h_16319724-d120-4be6-af5d-31582d134ea0) a deactivated user .<br><br>**Scopes:** `user:write:admin` `user:write`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`

      tags:
        - Users
      operationId: userStatus
      parameters:
        - $ref: '#/parameters/UserId'
        - name: body
          description: User status.
          in: body
          required: true
          schema:
            description: The action.
            type: object
            properties:
              action:
                type: string
                description: 'The action types:<br>`activate` - Activate a deactivated user.<br>`deactivate` - Deactivate a user.'
                enum:
                  - activate
                  - deactivate
                x-enum-descriptions:
                  - set users status to active
                  - set users status to inactive
            required:
              - action
          x-examples:
            application/json:
              action: deactivate
      responses:
        '200':
          description: ''
        '204':
          description: |-
            **HTTP Status Code:** `204`<br>
            Status updated.
          examples:
            application/json: ''
        '400':
          description: |
            **HTTP Status Code:** `400` **Bad Request**<br><br>
            **Error Code:** `200`<br>
            Zoom Room and Admin users' status can not be activated or deactivated.<br><br>
            **Error Code:** `3412`<br>Your request to activate the user was not approved at this time because your account has reached the permitted maximum number of $maxAllowedNumber basic users. Please remove existing basic user(s) from your Users list or the Pending Users list before attempting to activate this user.<br>
            **Error Code:** `2033`<br>Your request to activate the basic user was not approved because you have already reached the maximum basic user limit allowed in your account. For additional help regarding this issue, contact the Zoom Customer Support team.
        '404':
          description: |
            **HTTP Status Code:** `404` **Not Found**<br><br>
            **Error Code:** `1001`<br>
            User does not exist: $userId.
      security:
        - OAuth: []
  '/users/{userId}/password':
    put:
      summary: Update a user's password
      description: |-
        Update the [password](https://support.zoom.us/hc/en-us/articles/206344385-Change-a-User-s-Password) of a user using which the user can login to Zoom.<br> After this request is processed successfully, an email notification will be sent to the user stating that the password was changed.<br>
        **Scopes:** `user:write:admin` `user:write`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
        **Prerequisites:**<br>
        * Owner or admin of the Zoom account.
      tags:
        - Users
      operationId: userPassword
      parameters:
        - $ref: '#/parameters/UserId'
        - name: body
          description: User password.
          required: true
          in: body
          schema:
            type: object
            properties:
              password:
                type: string
                description: |-
                  User password. Should be less than 32 characters.

                  **Note:** If the account owner or admin has enabled [enhanced password requirements](https://support.zoom.us/hc/en-us/articles/360034675592-Advanced-security-settings#h_fa9186e4-6818-4f7a-915c-2e25c19f0acd), the value provided in this field must meet those requirements. These requirements can be retrieved by calling the [Get Account Settings API](https://marketplace.zoom.us/docs/api-reference/zoom-api/accounts/accountsettings) and referring to the `password_requirement` field present in the `security` object.
                minimum: 8
            required:
              - password
          x-examples:
            application/json:
              password: string
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` **OK**<br>
            Password updated.
          examples: {}
        '400':
          description: |+
            **HTTP Status Code:** `400` **Bad Request** <br><br> **Error Code:** `300` <br>Your new password can not match the old password.<br>This password cannot be changed because it has already been changed the maximum number of times over the past 24 hours.<br><br> **Error Code:** `1117` <br>Can not update Admin’s password<br><br> **Error Code:** `1123`<br>Can only update password of Zoom work email account<br><br> **Error Code:** `1124` <br>Minimum of 6 characters.<br> Have at least {lengthRule} characters<br><br> **Error Code:** `1125` <br>Have at least 1 letter (a, b, c…)<br><br> **Error Code:** `1126` <br>Have at least 1 number (1, 2, 3…)<br><br> **Error Code:** `1127` <br>Have at least 1 special character (!, @, #…)<br><br>
            **Error Code:** `1128` <br>Include both Upper case and Lower case characters<br><br>**Error Code:** `1129` Users cannot reuse any of the last $formerPwdCount passwords created.<br><br> **Error Code:** `1130`<br>Password can’t use the same character.<br><br>
            **Error Code:** `1131`<br>Password can’t use continuation character.Such as 'abcdef’,’123456’.<br><br>
            **Error Code:** `1136`<br>
            Your password is too easy to guess. Try another one.


        '404':
          description: |
            **HTTP Status Code:** `404` **Not Found**<br><br>
            **Error Code:** `1001`<br>
            User does not exist: $userId.
  '/users/{userId}/permissions':
    get:
      summary: Get user permissions
      description: |-
        Users can be assigned a set of permissions that allows them to access only the pages/information that a user needs to view or edit.<br>

        Use this API to get permissions that have been granted to the user.<br><br>
        **Scopes:** `user:read:admin` `user:read`<br>

        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      tags:
        - Users
      operationId: userPermission
      parameters:
        - $ref: '#/parameters/UserId'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            User permissions returned.
          schema:
            $ref: '#/definitions/UserPermissions'
          examples:
            application/json:
              permissions:
                - 'IMGroups:Edit'
                - 'Security:Edit'
                - 'IMGroups:Read'
                - 'BillingSubscription:Edit'
                - 'SingleSignOn:Edit'
                - 'WebinarSetting:Edit'
                - 'Branding:Read'
                - 'UsageReport:Read'
                - 'BillingSubscription:Read'
                - 'CrossHybrid:Read'
                - 'UserActivitiesReport:Read'
                - 'Branding:Edit'
                - 'SingleSignOn:Read'
                - 'Security:Read'
                - 'Dashboard:Read'
                - 'AccountProfile:Read'
                - 'MarketPlace:Edit'
                - 'ZoomRooms:Edit'
                - 'PbxAdmin:Read'
                - 'Meeting:Edit'
                - 'IMChatHistory:Read'
                - 'RoomConnector:Read'
                - 'IMChatBot:Edit'
                - 'CrossHybrid:Edit'
                - 'AccountProfile:Edit'
                - 'RoomConnector:Edit'
                - 'Group:Edit'
                - 'BillingInformation:Edit'
                - 'LyncConnector:Edit'
                - 'LyncConnector:Read'
                - 'Integration:Read'
                - 'User:Edit'
                - 'BillingInformation:Read'
                - 'AccountSetting:Edit'
                - 'SubAccount:Read'
                - 'IMSetting:Read'
                - 'MeetingConnector:Read'
                - 'ThirdPartyConference:Read'
                - 'Meeting:Join'
                - 'CallInContacts:Read'
                - 'ZoomDevelopers:Read'
                - 'Recording:Read'
                - 'Role:Edit'
                - 'Recording:Edit'
                - 'DigitalSignage:Read'
                - 'ScheduleTrackingFields:Read'
                - 'ThirdPartyConference:Edit'
                - 'Group:Read'
                - 'AccountSetting:Read'
                - 'MeetingConnector:Edit'
                - 'Integration:Edit'
                - 'CallInContacts:Edit'
                - 'DigitalSignage:Edit'
                - 'MarketPlace:Read'
                - 'PbxAdmin:Edit'
                - 'ZoomRooms:Read'
                - 'MobileDeviceManagement:Read'
                - 'RecordingContent:Read'
                - 'User:Read'
                - 'ScheduleTrackingFields:Edit'
                - 'WebinarSetting:Read'
        '404':
          description: |
            **HTTP Status Code:** `404` **Not Found**<br><br>
            **Error Code:** `1001`<br>
            User does not exist: $userId.
  '/users/{userId}/pac':
    get:
      summary: List a user's PAC accounts
      description: |-
        [Personal Audio Conference](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference) (PAC) allows Pro or higher account holders to host meetings through PSTN (phone dial-in) only.<br>Use this API to list a user's PAC accounts.<br><br>
        **Scopes:** `pac:read:admin` `pac:read`<br>
        <br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>
        **Prerequisites:**<br>
        * A Pro or higher plan with [Premium Audio Conferencing](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference) add-on.
        * Personal Audio Conference must be enabled in the user's profile.
      tags:
        - PAC
      operationId: userPACs
      parameters:
        - $ref: '#/parameters/UserId'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` **OK**<br>
            PAC account list returned.
          schema:
            type: object
            properties:
              pac_accounts:
                type: array
                items:
                  type: object
                  properties:
                    dedicated_dial_in_number:
                      type: array
                      description: List of dedicated dial-in numbers.
                      items:
                        type: object
                        properties:
                          number:
                            type: string
                            description: 'Dial-in number: length is less than 16.'
                          country:
                            type: string
                            description: Country code.
                    global_dial_in_numbers:
                      type: array
                      description: List of global dial-in numbers.
                      items:
                        type: object
                        properties:
                          number:
                            type: string
                            description: 'Dial-in number: length is less than 16.'
                          country:
                            type: string
                            description: Country code.
                    conference_id:
                      type: integer
                      description: Conference ID.
                    participant_password:
                      type: string
                      description: 'Participant password: numeric value - length is less than 6.'
                      minLength: 1
                      maxLength: 6
                    listen_only_password:
                      type: string
                      description: 'Listen-Only password: numeric value - length is less than 6.'
                      maxLength: 6
          examples:
            application/json:
              pac_accounts:
                - dedicated_dial_in_number:
                    - number: '123343434'
                      country: USA
                  global_dial_in_numbers:
                    - number: '434343434'
                      country: USA
                  conference_id: '111111'
                  participant_password: ghdf
                  listen_only_password: hkgk
        '400':
          description: |
            **HTTP Status Code:** `400` **Bad Request**<br>
            **Error Code:** `2024`<br>
            User does not have PAC enabled.
        '404':
          description: |-
            **HTTP Status Code:** `404` **Not Found**<br>
            **Error Code:** `1001`<br>
            User does not exist: $userId.
  '/users/{userId}/tsp':
    get:
      summary: List user's TSP accounts
      description: |-
        A user can have a maximum of two TSP accounts. Use this API to list all TSP accounts of a user.<br><br>
        **Scopes:** `tsp:read:admin` `tsp:read`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      tags:
        - TSP
      operationId: userTSPs
      parameters:
        - $ref: '#/parameters/UserId'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` **OK**<br>
            TSP account list returned successfully.
          schema:
            type: object
            properties:
              tsp_accounts:
                type: array
                items:
                  type: object
                  title: TSP Accounts List
                  description: List of TSP accounts.
                  properties:
                    id:
                      type: integer
                      description: The ID of the TSP account.
                      enum:
                        - 1
                        - 2
                    conference_code:
                      type: string
                      description: 'Conference code: numeric value, length is less than 16.'
                      minLength: 1
                      maxLength: 16
                    leader_pin:
                      type: string
                      description: 'Leader PIN: numeric value, length is less than 16.'
                      minLength: 1
                      maxLength: 16
                    dial_in_numbers:
                      type: array
                      description: List of dial in numbers.
                      items:
                        type: object
                        properties:
                          code:
                            type: string
                            description: Country code.
                            maxLength: 6
                          number:
                            type: string
                            description: 'Dial-in number: length is less than 16.'
                            minLength: 1
                            maxLength: 16
                          type:
                            type: string
                            description: |-
                              Dial-in number types:<br>`toll` - Toll number.<br>`tollfree` -Toll free number.<br>
                              `media_link` - Media link
                            enum:
                              - toll
                              - tollfree
                              - media_link
                            x-enum-descriptions:
                              - Toll number <br/>
                              - Toll free number <br/>
                              - Media link phone number <br/>
                          country_label:
                            type: string
                            description: 'Country Label, if passed, will display in place of code.'
                            maxLength: 10
                    tsp_bridge:
                      type: string
                      description: |
                        Telephony bridge
                      enum:
                        - US_TSP_TB
                        - EU_TSP_TB
                  required:
                    - conference_code
                    - leader_pin
          examples:
            application/json:
              tsp_accounts:
                - id: 111222222
                  conference_code: '0125'
                  leader_pin: '11189898'
                  tsp_bridge: string
                  dial_in_numbers:
                    - code: '01'
                      number: '000000000'
                      type: toll
        '400':
          description: |
            **HTTP Status Code:** `400`<br>
            Bad request.<br>
            **Error Code:** `2024`<br>
            Account has not enabled TSP.
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            Not Found.<br>
            **Error Code:** `1001`<br>
            User does not exist: $userId.<br>
            **Error Code:**`1120`<br>
            A valid invitation to join the Zoom account was not found for this user.<br>
            This error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid.
    post:
      summary: Add a user's TSP account
      description: |
        Add a user's TSP account.<br><br>
        **Scopes:** `tsp:write:admin` `tsp:write`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      tags:
        - TSP
      operationId: userTSPCreate
      parameters:
        - $ref: '#/parameters/UserId'
        - in: body
          name: body
          required: true
          description: TSP account.
          schema:
            $ref: '#/definitions/TSP'
          x-examples:
            application/json:
              conference_code: '0125'
              leader_pin: '11189898'
              dial_in_numbers:
                - code: '01'
                  number: '000000000'
                  type: toll
      responses:
        '201':
          description: |-
            **HTTP Status Code:** `201`<br>
            TSP account added.
          schema:
            $ref: '#/definitions/TSP'
          examples:
            application/json:
              conference_code: '0125'
              leader_pin: '11189898'
              tsp_bridge: string
              dial_in_numbers:
                - code: '01'
                  number: '000000000'
                  type: toll
        '400':
          description: |
            **HTTP Status Code:** `400`<br>
            Bad Request.<br>
            **Error Code:**`2024`<br>
            Account has not enabled TSP.<br>
            **Error Code:**`300`<br>
            Media link is required for AT&T TSP accounts.<br>
            **Error Code:** `300`<br>
            You can add a max of two tsp configs.
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            Not Found.<br>
            **Error Code:** `1001`<br>
            User does not exist: $userId.<br>
            **Error Code:**`1120`<br>
            A valid invitation to join the Zoom account was not found for this user.<br>
            This error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid.
  '/users/{userId}/tsp/{tspId}':
    get:
      summary: Get a user's TSP account
      description: |
        Each user can have a maximum of two TSP accounts. Use this API to retrieve details of a specific TSP account enabled for a specific user.<br><br>
        **Scopes:** `tsp:read:admin` `tsp:read`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      tags:
        - TSP
      operationId: userTSP
      parameters:
        - $ref: '#/parameters/UserId'
        - $ref: '#/parameters/TSPId'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            TSP account retrieved successfully.
          schema:
            type: object
            title: TSP Account
            description: TSP account of the user.
            properties:
              id:
                type: integer
                description: The ID of the TSP account.
              conference_code:
                type: string
                description: 'Conference code: numeric value, length is less than 16.'
                minLength: 1
                maxLength: 16
              leader_pin:
                type: string
                description: 'Leader PIN: numeric value, length is less than 16.'
                minLength: 1
                maxLength: 16
              dial_in_numbers:
                type: array
                description: List of dial in numbers.
                items:
                  type: object
                  properties:
                    code:
                      type: string
                      description: Country code.
                      maxLength: 6
                    number:
                      type: string
                      description: 'Dial-in number: length is less than 16.'
                      minLength: 1
                      maxLength: 16
                    type:
                      type: string
                      description: 'Dial-in number types:<br>`toll` - Toll number.<br>`tollfree` -Toll free number. <br> `media_link` - Media link phone number. This is used for PSTN integration instead of a paid bridge number.'
                      enum:
                        - toll
                        - tollfree
                        - media_link
                      x-enum-descriptions:
                        - Toll number <br/>
                        - Toll free number <br/>
                        - Media link phone number <br/>
                    country_label:
                      type: string
                      description: 'Country Label, if passed, will display in place of code.'
                      maxLength: 10
              tsp_bridge:
                type: string
                description: Telephony bridge
                enum:
                  - US_TSP_TB
                  - EU_TSP_TB
            required:
              - conference_code
              - leader_pin
          examples:
            application/json:
              id: '0123444444'
              conference_code: '1275454'
              leader_pin: '111'
              tsp_bridge: string
              dial_in_numbers:
                - code: '675'
                  number: '00000000'
                  type: toll
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>
            Bad request.<br>
            **Error Code:** `300`<br>
            The TSP id provided does not exist.<br>
            **Error Code:** `300`<br>
            TSP Config does not exist.<br>
            **Error Code:**`2024`<br>
            Account has not enabled TSP.
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            Not Found.<br>
            **Error Code:** `1001`<br>
            User does not exist: $userId.<br>
            **Error Code:**`1120`<br>
            A valid invitation to join the Zoom account was not found for this user.<br>
            This error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid.
    patch:
      summary: Update a TSP account
      description: |
        Update a user's TSP account.<br><br>
        **Scopes:** `tsp:write:admin` `tsp:write`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      tags:
        - TSP
      operationId: userTSPUpdate
      parameters:
        - $ref: '#/parameters/UserId'
        - $ref: '#/parameters/TSPId'
        - in: body
          name: body
          required: true
          description: TSP account.
          schema:
            type: object
            title: TSP Account
            description: TSP account.
            properties:
              conference_code:
                type: string
                description: 'Conference code: numeric value, length is less than 16.'
                minLength: 1
                maxLength: 16
              leader_pin:
                type: string
                description: 'Leader PIN: numeric value, length is less than 16.'
                minLength: 1
                maxLength: 16
              dial_in_numbers:
                type: array
                description: List of dial in numbers.
                items:
                  type: object
                  properties:
                    code:
                      type: string
                      description: Country code.
                      maxLength: 6
                    number:
                      type: string
                      description: 'Dial-in number: length is less than 16.'
                      minLength: 1
                      maxLength: 16
                    type:
                      type: string
                      description: 'Dial-in number types:<br>`toll` - Toll number.<br>`tollfree` -Toll free number.<br>`media_link` - Media Link Phone Number. It is used for PSTN integration instead of paid bridge number.'
                      enum:
                        - toll
                        - tollfree
                        - media_link
                      x-enum-descriptions:
                        - Toll number <br/>
                        - Toll free number <br/>
                        - Media link phone number <br/>
                    country_label:
                      type: string
                      description: 'Country Label, if passed, will display in place of code.'
                      maxLength: 10
              tsp_bridge:
                type: string
                description: Telephony bridge
                enum:
                  - US_TSP_TB
                  - EU_TSP_TB
            required:
              - conference_code
              - leader_pin
          x-examples:
            application/json:
              conference_code: string
              leader_pin: string
              tsp_bridge: string
              dial_in_numbers:
                - code: string
                  number: string
                  type: string
      responses:
        '204':
          description: |-
            **HTTP Status Code:**`204` **No Content**<br>
            TSP account updated.
        '400':
          description: |
            **HTTP Status Code:** `400`<br>
            Bad request.<br>
            **Error Code:**`2024`<br>
            Account has not enabled TSP.<br>
            **Error Code:**`300`<br>
            The TSP id provided does not exist.<br>
            **Error Code:**`300`<br>
            TSP Config does not exist.<br>
            **Error Code:**`300`<br>
            At least one tsp config must be available.<br>
            **Error Code:**`300`<br>
            Media link is required for AT&T TSP accounts.
            **Error Code:**`300`<br>
            Invalid parameter: tsp_bridge.
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            Not Found.<br>
            **Error Code:** `1001`<br>
            User does not exist: $userId.<br>
            **Error Code:**`1120`<br>
            A valid invitation to join the Zoom account was not found for this user.<br>
            This error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid.
    delete:
      summary: Delete a user's TSP account
      description: |
        Delete a user's TSP account.<br><br>
        **Scopes:** `tsp:write:admin` `tsp:write`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      tags:
        - TSP
      operationId: userTSPDelete
      parameters:
        - $ref: '#/parameters/UserId'
        - $ref: '#/parameters/TSPId'
      responses:
        '204':
          description: |-
            **Status Code:** `204` **No Content**<br>
            TSP account deleted.
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>
            Bad request.<br>
            **Error Code:**`2024`<br>
            Account not enable TSP.<br>
            **Error Code:** `300`<br>
            The TSP id provided does not exist.<br>
            **Error Code:** `300`<br>
            TSP Config does not exist.<br>
            **Error Code:** `300`<br>
            At least one tsp config must be available.
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            Not Found.<br>
            **Error Code:** `1001`<br>
            User does not exist: $userId.<br>
            **Error Code:**`1120`<br>
            A valid invitation to join the Zoom account was not found for this user.<br>
            This error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid.
  '/users/{userId}/token':
    get:
      summary: Get a user token
      description: |-
        Retrieve a user's token.<br><br> This token is used for starting meetings with the Client SDK.<br>
        **Scopes:** `user:read:admin` `user:read`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
        If a user signed into Zoom using Google or Facebook, a null value will be returned for the token. To get the token with this API, ask the user to sign into Zoom using their email and password instead.
      tags:
        - Users
      operationId: userToken
      parameters:
        - $ref: '#/parameters/UserId'
        - in: query
          name: type
          description: 'User token types:<br>`token` - Used for starting meetings with the client SDK. This token expires in 14 days and a new token will be returned after the expiry.<br>`zak` - Used for generating the start meeting URL. The token expiration time is two hours. For API users, the expiration time is 90 days.'
          type: string
          enum:
            - token
            - zak
          x-enum-descriptions:
            - Used for starting meeting with client SDK.
            - 'Used for generating the start meeting url. The expiration time is two hours. For API users, the expiration time is 90 days.'
        - in: query
          name: ttl
          type: integer
          description: 'Use this field in conjunction with the `type` field where the value of `type` field is `zak`. The value of this field denotes the expiry time of the `zak` token in seconds. For example, if you would like the zak token to be expired after one hour of the token generation, the value of this field should be `3600`.'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Token returned.
          schema:
            type: object
            properties:
              token:
                type: string
                description: User token.
          examples:
            application/json:
              token: string
        '404':
          description: |
            **HTTP Status Code:** `404` **Not Found**<br><br>
            **Error Code:** `1001`<br>
            User does not exist: $userId.
      security:
        - OAuth: []
    delete:
      summary: Revoke a user's SSO token
      description: |-
        Revoke a user's SSO token.<br><br> After calling this API, the SSO user will be logged out of their current Zoom session.<br>
        **Scopes:** `user:write:admin` `user:write`

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      tags:
        - Users
      operationId: userSSOTokenDelete
      parameters:
        - $ref: '#/parameters/UserId'
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`<br>
            Token deleted.
        '404':
          description: |
            **HTTP Status Code:** `404` **Not Found**<br><br>
            **Error Code:** `1001`<br>
            User does not exist: $userId.
      security:
        - OAuth: []
  /users/email:
    get:
      summary: Check a user email
      description: |
        Verify if a user's email is registered with Zoom.<br><br>

        <b>Note: </b>You can successfully check if a user is a registered Zoom user only if the user **signed up for Zoom via email and is within your account.** If you provide an email address of a user who is not in your account, the value of "existed_email" parameter will be "false" irrespective of whether or not the user is registered with Zoom. The response of this API call will not include users who joined Zoom using options such as "Sign in with SSO", "Sign in with Google" or "Sign in with Facebook" even if they are in the same account as yours.

        **Scopes:** `user:read:admin` `user:read`

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      tags:
        - Users
      operationId: userEmail
      parameters:
        - name: email
          in: query
          type: string
          required: true
          description: The email address to be verified.
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Success.
          schema:
            type: object
            properties:
              existed_email:
                type: boolean
                description: Indicates whether or not the email already exists in Zoom.
          examples:
            application/json:
              existed_email: false
        '400':
          description: |-
            **HTTP Status Code:** `400` **Bad Request** <br><br>
            **Error Code:** `300`<br> Email is required.
        '404':
          description: |-
            **HTTP Status Code:** `404` **Not Found**<br><br>
            **Error Code:** `1001`<br>
            User does not exist: $userId.
      security:
        - OAuth: []
  '/users/{userId}/email':
    put:
      summary: Update a user's email
      description: |-
        Change a user's [email address](https://support.zoom.us/hc/en-us/articles/201362563-How-Do-I-Change-the-Email-on-My-Account-) on a Zoom account that has managed domain set up.<br>If the Zoom Account in which the user belongs, has multiple [managed domains](https://support.zoom.us/hc/en-us/articles/203395207-What-is-Managed-Domain-), the email to be updated must match one of the managed domains.<br>
        **Scopes:** `user:write:admin` `user:write`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>
        >  Note: A user's email address can only be changed for a maximum of 3 times in a day(24 hours).
        **Prerequisite:**<br>
        * Managed domain must be enabled in the account.
        * The new email address should not already exist in Zoom.
      tags:
        - Users
      operationId: userEmailUpdate
      parameters:
        - $ref: '#/parameters/UserId'
        - name: body
          description: User email.
          required: true
          in: body
          schema:
            type: object
            properties:
              email:
                type: string
                description: User’s email. The length should be less than 128 characters.
                format: email
            required:
              - email
          x-examples:
            application/json:
              email: cupidatatipsum@sdskflhdf.djfh
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` **No Content**<br>
            Email updated.
        '404':
          description: |-
            **HTTP Status Code:** `404` **Not Found**<br>
            <br>**Error Code:** `1001`<br>
            User does not exist: $email.<br>
  /users/vanity_name:
    get:
      summary: Check a user's PM room
      description: |-
        A personal meeting room is a virtual meeting room that can be permanently assigned to a user.
        Use this API to check if a personal meeting room with the given name exists or not.<br><br>
        **Scopes:** `user:read:admin` `user:read`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      tags:
        - Users
      operationId: userVanityName
      parameters:
        - name: vanity_name
          description: Personal meeting room name.
          in: query
          type: string
          required: true
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Success.
          schema:
            type: object
            properties:
              existed:
                type: boolean
                description: 'If `true`, it indicates that the personal meeting room with the given name exists.<br> `false` - The room name does not exist.'
          examples:
            application/json:
              existed: true
        '400':
          description: |-
            **HTTP Status Code:** `400` **Bad Request**<br><br>
            **Error Code:** `300`<br>Vanity name is required.
  '/users/{userId}/webinars':
    get:
      summary: List webinars
      description: |-
        Zoom users with a [Webinar Plan](https://zoom.us/webinar) have access to creating and managing Webinars. Webinar allows a host to broadcast a Zoom meeting to up to 10,000 attendees.<br> Use this API to list all the webinars that are scheduled by or on-behalf a user (Webinar host).<br><br>
        **Scopes:** `webinar:read:admin` `webinar:read`<br> <br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
        **Prerequisites:**
        * Pro or higher plan with a Webinar Add-on.
      tags:
        - Webinars
      operationId: webinars
      parameters:
        - $ref: '#/parameters/UserId'
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/PageNumber'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            List of webinar objects returned.
          schema:
            $ref: '#/definitions/WebinarList'
          examples:
            application/json: |-
              {
                "page_count": "1",
                "page_number": "1",
                "page_size": "30",
                "total_records": "1",
                "webinars": [
                  {
                    "uuid": "dsghfkhaewfds",
                    "id": 0001000,
                    "host_id": "24654130000000",
                    "topic": "My Webinar",
                    "agenda": "Learn more about Zoom APIs",
                    "type": "5",
                    "duration": "60",
                    "start_time": "2019-09-24T22:00:00Z",
                    "timezone": "America/Los_Angeles",
                    "created_at": "2019-08-30T22:00:00Z",
                    "join_url": "https://zoom.us/0001000/awesomewebinar"
                  }
                ]
              }
        '404':
          description: |-
            **HTTP Status Code:** `404` **Not Found**<br><br>
            **Error Code:** `1001`<br>
            User {userId} not exist or not belong to this account.
      security:
        - OAuth: []
    post:
      summary: Create a webinar
      description: |-
        Zoom users with a [Webinar Plan](https://zoom.us/webinar) have access to creating and managing Webinars. Webinar allows a host to broadcast a Zoom meeting to up to 10,000 attendees.<br>Use this API to schedule a Webinar for a user (host).<br><br>
        **Scopes:** `webinar:write:admin` `webinar:write`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>
        **Prerequisites:**
        * Pro or higher plan with a Webinar Add-on.
      tags:
        - Webinars
      parameters:
        - $ref: '#/parameters/UserId'
        - in: body
          name: body
          required: true
          schema:
            description: Webinar object.
            allOf:
              - $ref: '#/definitions/create_webinar'
            type: object
          x-examples:
            application/json:
              topic: Test Webinar
              type: 5
              start_time: '2020-09-20T06:59:00Z'
              duration: '60'
              timezone: America/Los_Angeles
              password: avfhfgh
              agenda: Test Webinar
              recurrence:
                type: 1
                repeat_interval: 1
                end_date_time: '2020-09-22T06:59:00Z'
              settings:
                host_video: 'true'
                panelists_video: 'true'
                practice_session: 'true'
                hd_video: 'true'
                approval_type: 0
                registration_type: 2
                audio: both
                auto_recording: none
                enforce_login: 'false'
                close_registration: 'true'
                show_share_button: 'true'
                allow_multiple_devices: 'false'
                registrants_email_notification: 'true'
      operationId: webinarCreate
      responses:
        '201':
          description: |-
            **HTTP Status Code:** `201`<br>
            Webinar created.
          headers:
            Content-Location:
              description: Location of created Webinar
              type: string
          schema:
            allOf:
              - type: object
                properties:
                  uuid:
                    type: string
                    description: 'Unique identifier for a Webinar. Each Webinar instance will generate its own UUID(i.e., after a Webinar ends, a new UUID will be generated for the next instance of the Webinar). Once a Webinar ends, the value of uuid for the same webinar will be different from when it was scheduled.'
                  id:
                    type: integer
                    description: 'Webinar ID in "**long**" format(represented as int64 data type in JSON), also known as the webinar number.'
                    format: int64
                  host_id:
                    type: string
                    description: ID of the user set as host of the webinar.
                  host_email:
                    type: string
                    description: Email address of the meeting host.
                    format: email
                  registrants_confirmation_email:
                    type: boolean
                    description: Specify whether or not registrants of this Webinar should receieve confirmation emails.
                  template_id:
                    type: string
                    description: |-
                      Unique identifier of the Webinar template. Use this field only if you would like to [schedule the webinar using an existing template](https://support.zoom.us/hc/en-us/articles/115001079746-Webinar-Templates#schedule). The value of this field can be retrieved from [List Webinar Templates](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/listwebinartemplates) API.
                      You must provide the user ID of the host instead of the email address in the `userId` path parameter in order to use a template for scheduling a Webinar.
              - $ref: '#/definitions/WebinarInfo'
          examples:
            application/json:
              uuid: string
              id: integer
              host_id: string
              topic: string
              type: integer
              start_time: 'string [date-time]'
              duration: integer
              timezone: string
              agenda: string
              created_at: 'string [date-time]'
              start_url: string
              join_url: string
              occurrences:
                - occurrence_id: integer
                  start_time: 'string [date-time]'
                  duration: integer
                  status: string
              settings:
                host_video: boolean
                panelists_video: boolean
                practice_session: boolean
                hd_video: boolean
                approval_type: integer
                registration_type: integer
                audio: string
                auto_recording: string
                enforce_login: boolean
                enforce_login_domains: string
                alternative_hosts: string
                close_registration: boolean
                show_share_button: boolean
                allow_multiple_devices: boolean
        '400':
          description: |-
            **HTTP Status Code:** `400` **Bad Request**<br>
            **Error Code:** `200`
            Subscription plan for webinar is missing. Enable webinar for this user once the subscription plan is added:{userId}.
        '404':
          description: |
            **HTTP Status Code:** `404` **Not Found**<br><br>
            **Error Code:** `1001`<br>
            User {userId} not exist or not belong to this account.
      security:
        - OAuth: []
  '/webinars/{webinarId}':
    get:
      summary: Get a webinar
      description: |-
        Zoom users with a [Webinar Plan](https://zoom.us/webinar) have access to creating and managing Webinars. Webinar allows a host to broadcast a Zoom meeting to up to 10,000 attendees.<br>Use this API to get details of a scheduled webinar.<br><br>
        **Scopes:** `webinar:read:admin` `webinar:read`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>**Prerequisites:**
        * Pro or higher plan with a Webinar Add-on.
      tags:
        - Webinars
      operationId: webinar
      parameters:
        - $ref: '#/parameters/WebinarId'
        - in: query
          name: occurrence_id
          description: 'Unique Identifier that identifies an occurrence of a recurring webinar. [Recurring webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar) can have a maximum of 50 occurrences. When you create a recurring Webinar using [Create a Webinar API](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/webinarcreate), you can retrieve the Occurrence ID from the response of the API call.'
          type: string
        - in: query
          name: show_previous_occurrences
          type: boolean
          description: Set the value of this field to `true` if you would like to view Webinar details of all previous occurrences of a recurring Webinar.
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Success
          schema:
            allOf:
              - type: object
                properties:
                  uuid:
                    type: string
                    description: |+
                      Unique Webinar ID. Each Webinar instance will generate its own Webinar UUID (i.e., after a Webinar ends, a new UUID will be generated for the next instance of the Webinar). You can retrieve a list of UUIDs from past Webinar instances using [this API](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/pastwebinars). Please double encode your UUID when using it for API calls if the UUID begins with a '/'or contains '//' in it.

                  id:
                    type: integer
                    description: 'Webinar ID in "**long**" format(represented as int64 data type in JSON), also known as the webinar number.'
                    format: int64
                  host_id:
                    type: string
                    description: ID of the user set as host of webinar.
                  host_email:
                    type: string
                    description: Email address of the meeting host.
                    format: email
              - $ref: '#/definitions/WebinarInfo'
          examples:
            application/json:
              created_at: '2019-09-13T15:35:00Z'
              duration: 60
              host_id: Labcjskdfsjgfg
              id: 12345678
              join_url: 'https://zoom.us/j/12345678'
              settings:
                allow_multiple_devices: true
                alternative_hosts: ''
                approval_type: 2
                audio: both
                auto_recording: local
                close_registration: true
                contact_email: wonderfulemail@someemail.dsgfdjf
                contact_name: Wonderful person
                enforce_login: false
                enforce_login_domains: ''
                global_dial_in_countries:
                  - US
                global_dial_in_numbers:
                  - city: New York
                    country: US
                    country_name: US
                    number: +1 00000
                    type: toll
                  - city: San Jose
                    country: US
                    country_name: US
                    number: +1 111111111
                    type: toll
                  - city: San Jose
                    country: US
                    country_name: US
                    number: +1 11111110
                    type: toll
                hd_video: false
                host_video: false
                on_demand: false
                panelists_video: false
                practice_session: false
                question_answer: true
                registrants_confirmation_email: true
                registrants_restrict_number: 0
                show_share_button: true
                registrants_email_notification: true
              start_time: '2019-08-30T22:00:00Z'
              start_url: 'https://zoom.us/s/00000011110?zhghTlUT1Rjd2FXRgh0amxoejNQZ1EiLCJjaWQiOiIifQ.NJ0CXWQ-yhI8Xv01JvxityBtzp3Bt7odMOEG2L8DLmY'
              timezone: America/New_York
              topic: Test Webinar
              type: 5
              uuid: nWMHAAAAAAAAAAAAAUDP1A==
        '300':
          description: '**HTTP Status Code:** `300`<br>Invalid webinar ID.'
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>
            Bad request<br>
            **Error Code:** `1010`<br>
            User does not belong to this account:{accountId}.<br>
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            Webinar not found.<br>
            **Error Code:** `1001`<br>
            User {userId} does not exist or does not belong to this account.<br>
            **Error Code:** `3001`<br>
            Webinar {webinarId} not found or has expired.<br>
      security:
        - OAuth: []
    patch:
      summary: Update a webinar
      description: |-
        Zoom users with a [Webinar Plan](https://zoom.us/webinar) have access to creating and managing Webinars. Webinar allows a host to broadcast a Zoom meeting to up to 10,000 attendees.<br>
        Use this API to make updates to a scheduled Webinar.<br><br>
        **Scopes:** `webinar:write:admin` `webinar:write`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>
        **Prerequisites:**<br>
        * Pro or higher plan with a Webinar Add-on.
      tags:
        - Webinars
      operationId: webinarUpdate
      parameters:
        - $ref: '#/parameters/WebinarId'
        - in: body
          name: body
          required: true
          description: Webinar.
          schema:
            $ref: '#/definitions/WebinarUpdate'
          x-examples:
            application/json:
              topic: string
              type: integer
              start_time: 'string [date-time]'
              duration: integer
              timezone: string
              password: string
              agenda: string
              settings:
                host_video: boolean
                panelists_video: boolean
                practice_session: boolean
                hd_video: boolean
                approval_type: integer
                registration_type: integer
                audio: string
                auto_recording: string
                enforce_login: boolean
                enforce_login_domains: string
                alternative_hosts: string
                close_registration: boolean
                show_share_button: boolean
                allow_multiple_devices: boolean
                registrants_confirmation_email: boolean
                notify_registrants: boolean
                registrants_email_notification: boolean
        - in: query
          name: occurrence_id
          description: 'Webinar occurrence id. Support change of agenda, start_time, duration, settings: {host_video, panelist_video, hd_video, watermark, auto_recording}'
          type: string
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Webinar subscription plan is missing. Enable webinar for this user once the subscription is added:{userId}.
        '204':
          description: |-
            **HTTP Status Code:** `204`<br>
            Webinar updated.
        '300':
          description: |-
            **HTTP Status Code:** `300`<br>Invalid webinar Id.<br>
            Invalid recurrence settings.
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>
            Bad request<br>
            **Error Code:** `1010`<br>
            User does not belong to this account:{accountId}.<br>
            **Error Code:** `3003`<br>
            You are not the meeting host.<br>
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            Webinar not found.<br>
            **Error Code:** `1001`<br>
            User {userId} does not exist or does not belong to this account.<br>
            **Error Code:** `3001`<br>
            Webinar {webinarId} not found or has expired.<br>
      security:
        - OAuth: []
    delete:
      summary: Delete a webinar
      description: |-
        Delete a Webinar.<br><br>
        **Scopes:** `webinar:write:admin` `webinar:write`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>
        **Prerequisites:**<br>
        * Pro or higher plan with a Webinar Add-on.
      tags:
        - Webinars
      operationId: webinarDelete
      parameters:
        - $ref: '#/parameters/WebinarId'
        - $ref: '#/parameters/OccurrenceId'
        - in: query
          name: cancel_webinar_reminder
          type: string
          description: |-
            `true`: Notify panelists and registrants about the webinar cancellation via email.

            `false`: Do not send any email notification to webinar registrants and panelists.

            The default value of this field is `false`.
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Success
        '204':
          description: |-
            **HTTP Status Code:** `204`<br>
            Webinar deleted.
        '300':
          description: '**HTTP Status Code:** `300`<br>Invalid webinar ID.'
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>
            Bad request<br>
            **Error Code:** `1010`<br>
            User does not belong to this account:{accountId}.<br>
            **Error Code:** `3002`<br>
            Sorry, you cannot delete this webinar since it is in progress.<br>
            **Error Code:** `3003`<br>
            You are not the webinar host.<br>
            **Error Code:** `3007`<br>
            Sorry, you cannot delete this webinar since it has ended.<br>
            **Error Code:** `3018`<br>
            Not allowed to delete PMI.<br>
            **Error Code:** `3037`<br>
            Not allowed to delete PAC.<br>
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            Webinar not found.<br>
            **Error Code:** `1001`<br>
            User {userId} does not exist or does not belong to this account.<br>
            **Error Code:** `3001`<br>
            Webinar {webinarId} not found or has expired.<br>
      security:
        - OAuth: []
  '/past_webinars/{webinarId}/participants':
    get:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` **OK**<br>
            Participants list returned.
          schema:
            type: object
            properties:
              page_count:
                type: integer
                description: The number of pages returned for this request.
              page_size:
                type: integer
                default: 30
                description: The total number of records returned from a single API call.
                maximum: 300
              total_records:
                type: integer
                description: The total number of records available across all pages.
              next_page_token:
                type: string
                description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
              participants:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Unique identifier of the participant.
                    name:
                      type: string
                      description: Name of the participant.
                    user_email:
                      type: string
                      description: Email address of the participant.
                      format: email
          examples:
            application/json:
              page_count: 1
              page_size: 1
              total_records: 1
              next_page_token: mdnf23qbsf4wr
              participants:
                - id: sdjhf3ui
                  name: Matt
                  user_email: matt@123.jhdyuerys
        '400':
          description: |
            **HTTP Status Code:** `400` **Bad request**<br>

            **Error Code:** `200`<br>
            No permission.<br>
            Only available for paid account: {accountId}.<br><br>
            **Error Code:**  `300`<br>
            The next page token is invalid or expired.
        '404':
          description: |-
            **HTTP Status Code:** `404`
            **Error Code:**`3001`<br>
            Webinar does not exist.
      summary: List webinar participants
      description: |+
        Use this API to list all the participants who attended a webinar hosted in the past. <br>

        **Prerequisites:**
        * Pro or higher plan with a Webinar Add-on.<br>
        **Scopes:** `webinar:read:admin` `webinar:read`<br>
        <br>
        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>



      operationId: listWebinarParticipants
      tags:
        - Webinars
      consumes: []
      parameters:
        - in: path
          name: webinarId
          type: string
          required: true
          description: 'Unique identifier of the webinar. You can retrieve the value of this field by calling the [list webinars](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/webinars) API.'
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/NextPageToken'
    parameters:
      - name: webinarId
        in: path
        type: string
        required: true
  '/webinars/{webinarId}/status':
    put:
      summary: Update webinar status
      description: |-
        Update a webinar's status. Use this API to end an ongoing webinar.<br><br>
        **Scopes:** `webinar:write:admin` `webinar:write`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>
        **Prerequisites:**<br>
        * The account must hold a valid [Webinar plan](https://zoom.us/webinar).
      tags:
        - Webinars
      operationId: webinarStatus
      parameters:
        - $ref: '#/parameters/WebinarId'
        - in: body
          name: body
          required: true
          schema:
            properties:
              action:
                type: string
                enum:
                  - end
                x-enum-descriptions:
                  - end a webinar
          x-examples:
            application/json:
              action: end
      responses:
        '200':
          description: 'Webinar plan subscription is missing. Enable webinar for this user once the subscription is added:{userId}.'
        '204':
          description: Webinar's status updated.
          examples: {}
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>
            Bad request<br>
            **Error Code:** `1010`<br>
            User does not belong to this account:{accountId}.<br>
            **Error Code:** `3003`<br>
            You are not the meeting host.<br>
            **Error Code:** `3063`<br>
            Can not end on-premise user's meeting:{meetingId}.<br>
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            Webinar not found.<br>
            **Error Code:** `1001`<br>
            User {userId} does not exist or does not belong to this account.<br>
            **Error Code:** `3001`<br>
            Webinar {webinarId} not found or has expired.<br>
      security:
        - OAuth: []
  '/webinars/{webinarId}/panelists':
    get:
      summary: List panelists
      description: |-
        Panelists in a Webinar can view and send video, screen share, annotate, etc and do much more compared to attendees in a Webinar.

        Use this API to list all the panelists of a Webinar.<br><br>
        **Scopes:** `webinar:read:admin` `webinar:read`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>
        **Prerequisites:**<br>
        * Pro or a higher plan with [Webinar Add-on](https://zoom.us/webinar).<br>
      tags:
        - Webinars
      operationId: webinarPanelists
      parameters:
        - $ref: '#/parameters/WebinarId'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Webinar plan subscription missing. Enable webinar for this user once the subscription is added.
          schema:
            $ref: '#/definitions/WebinarPanelistList'
          examples:
            application/json:
              total_records: '2'
              panelists:
                - name: Mary
                  email: maryjkdfdsgfshdgf@jdfdkjdglfk.jkfgdj
                - name: Mike
                  email: dfdsgfsdhf@jkgfdgfkdhgfdjg.fkjgdf
        '300':
          description: '**HTTP Status Code:** `300`<br>'
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>
            Bad request<br>
            **Error Code:** `1010`<br>
            User does not belong to this account:{accountId}.<br>
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            Webinar not found.<br>
            **Error Code:** `1001`<br>
            User {userId} does not exist or does not belong to this account.<br>
            **Error Code:** `3001`<br>
            Webinar {webinarId} not found or has expired.<br>
      security:
        - OAuth: []
    post:
      summary: Add panelists
      description: |-
        Panelists in a Webinar can view and send video, screen share, annotate, etc and do much more compared to attendees in a webinar.<br>Use this API to [add panelists](https://support.zoom.us/hc/en-us/articles/115005657826-Inviting-Panelists-to-a-Webinar#h_7550d59e-23f5-4703-9e22-e76bded1ed70) to a scheduled webinar.<br><br>
        **Scopes:** `webinar:write:admin` `webinar:write`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>


        **Prerequisites:**
        * Pro or a higher plan with [Webinar Add-on](https://zoom.us/webinar).<br>
      tags:
        - Webinars
      operationId: webinarPanelistCreate
      parameters:
        - $ref: '#/parameters/WebinarId'
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/WebinarPanelist'
          x-examples:
            application/json:
              panelists:
                - name: Mary
                  email: maryjkdfdsgfshdgf@jdfdkjdglfk.jkfgdj
                - name: Mike
                  email: dfdsgfsdhf@jkgfdgfkdhgfdjg.fkjgdf
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Webinar plan subscription missing. Enable webinar for this user once the subscription is added.
        '201':
          description: |-
            **HTTP Status Code:** `201`<br>
            Panelist created.
          schema:
            type: object
            properties:
              id:
                type: string
                description: Webinar Id.
              updated_at:
                type: string
                description: The time at which the panelist was added.
                format: date-time
          examples:
            application/json:
              id: doetwerggrlor
              updated_at: '2019-01-25T10:04:27.051Z'
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>
            Bad request<br>
            **Error Code:** `1010`<br>
            User does not belong to this account:{accountId}.<br>
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            Webinar not found.<br>
            **Error Code:** `1001`<br>
            User {userId} does not exist or does not belong to this account.<br>
            **Error Code:** `3001`<br>
            Webinar {webinarId} not found or has expired.<br>
      security:
        - OAuth: []
    delete:
      summary: Remove panelists
      description: |-
        Remove all the panelists from a Webinar.<br>
        **Scopes:** `webinar:write:admin` `webinar:write`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>
        **Prerequisites:**<br>
        * Pro or a higher plan with [Webinar Add-on](https://zoom.us/webinar).<br>
      tags:
        - Webinars
      operationId: webinarPanelistsDelete
      parameters:
        - $ref: '#/parameters/WebinarId'
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`<br>
            Panelists removed.
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>
            Bad request<br>
            **Error Code:** `1010`<br>
            User does not belong to this account:{accountId}.<br>
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            Webinar not found.<br>
            **Error Code:** `1001`<br>
            User {userId} does not exist or does not belong to this account.<br>
            **Error Code:** `3001`<br>
            Webinar {webinarId} not found or has expired.<br>
      security:
        - OAuth: []
  '/webinars/{webinarId}/panelists/{panelistId}':
    delete:
      summary: Remove a panelist
      description: |-
        [Remove](https://support.zoom.us/hc/en-us/articles/115005657826-Inviting-Panelists-to-a-Webinar#h_de31f237-a91c-4fb2-912b-ecfba8ec5ffb) a single panelist from a webinar.<br> You can retrieve the `panelistId` by calling **List Panelists API**.<br><br>
        **Scopes:** `webinar:write:admin` `webinar:write`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>


        **Prerequisites:**<br>
        * Pro or a higher plan with [Webinar Add-on](https://zoom.us/webinar).<br>
      tags:
        - Webinars
      operationId: webinarPanelistDelete
      parameters:
        - $ref: '#/parameters/WebinarId'
        - in: path
          name: panelistId
          description: The panelist ID or panelist email.
          type: integer
          required: true
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Webinar plan subscription is missing. Enable webinar for this user once the subscription is added:{userId}.
        '204':
          description: |-
            **HTTP Status Code:** `204`<br>
            Panelists removed.
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>
            Bad request<br>
            **Error Code:** `1010`<br>
            User does not belong to this account:{accountId}.<br>
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            Webinar not found.<br>
            **Error Code:** `1001`<br>
            User {email} does not exist or does not belong to this account.<br>
            **Error Code:** `3001`<br>
            Webinar {webinarId} not found or has expired.<br>
      security:
        - OAuth: []
  '/webinars/{webinarId}/registrants':
    get:
      summary: List webinar registrants
      description: |+
        Zoom users with a [Webinar Plan](https://zoom.us/webinar) have access to creating and managing Webinars. Webinar allows a host to broadcast a Zoom meeting to up to 10,000 attendees. Scheduling a [Webinar with registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration) requires your registrants to complete a brief form before receiving the link to join the Webinar.<br>
        Use this API to list all the users that have registered for a webinar.<br><br>
        **Prerequisites:**
        * Pro or higher plan with a Webinar Add-on.<br>
        **Scopes:** `webinar:read:admin` `webinar:read`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>

      tags:
        - Webinars
      operationId: webinarRegistrants
      parameters:
        - $ref: '#/parameters/WebinarId'
        - $ref: '#/parameters/OccurrenceId'
        - $ref: '#/parameters/RegistrantStatus'
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/PageNumber'
        - $ref: '#/parameters/NextPageToken'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Webinar plan subscription is missing. Enable webinar for this user once the subscription is added:{userId}.
          schema:
            $ref: '#/definitions/WebinarRegistrantList'
          examples:
            application/json:
              page_count: '1'
              page_number: '1'
              page_size: '30'
              total_records: '1'
              registrants:
                - id: '24000002122'
                  email: sjfkghdsg@someemail.dfgjd
                  first_name: Jill
                  last_name: Chill
                  address: dsfhkdjsfh st
                  city: jackson heights
                  country: US
                  zip: '11371'
                  state: NY
                  phone: '00000000'
                  industry: Food
                  org: Cooking Org
                  job_title: Chef
                  purchasing_time_frame: 1-3 months
                  role_in_purchase_process: Influencer
                  no_of_employees: '10'
                  comments: Looking forward to the Webinar
                  custom_questions:
                    - title: What do you hope to learn from this Webinar?
                      value: Look forward to learning how you come up with new recipes and what other services you offer.
                  status: approved
                  create_time: '2019-02-26T23:01:16.899Z'
                  join_url: 'https://zoom.us/webinar/mywebinarissocooldighdghodghodg'
        '300':
          description: '**HTTP Status Code:** `300`<br>Invalid webinar ID.'
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>
            Bad request<br>
            **Error Code:** `1010`<br>
            User does not belong to this account:{accountId}.<br>
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            Webinar not found.<br>
            **Error Code:** `1001`<br>
            User {userId} does not exist or does not belong to this account.<br>
            **Error Code:** `3001`<br>
            Webinar {webinarId} not found or has expired.<br>
      security:
        - OAuth: []
    post:
      summary: Add a webinar registrant
      description: |-
        Zoom users with a [Webinar Plan](https://zoom.us/webinar) have access to creating and managing Webinars. Webinar allows a host to broadcast a Zoom meeting to up to 10,000 attendees. Scheduling a [Webinar with registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration) requires your registrants to complete a brief form before receiving the link to join the Webinar.<br>Use this API to create and submit the registration of a user for a webinar.<br><br>
        **Scopes:** `webinar:write:admin` `webinar:write`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>
        **Prerequisites:**
        * Pro or higher plan with a Webinar Add-on.
      tags:
        - Webinars
      operationId: webinarRegistrantCreate
      parameters:
        - $ref: '#/parameters/WebinarId'
        - in: query
          name: occurrence_ids
          type: string
          description: Occurrence ID. Get this value from the webinar get API. Multiple values separated by a comma.
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/WebinarRegistrant'
          x-examples:
            application/json:
              email: sjfkghdsg@someemail.dfgjd
              first_name: Jill
              last_name: Chill
              address: dsfhkdjsfh st
              city: jackson heights
              country: US
              zip: '11371'
              state: NY
              phone: '00000000'
              industry: Food
              org: Cooking Org
              job_title: Chef
              purchasing_time_frame: 1-3 months
              role_in_purchase_process: Influencer
              no_of_employees: '10'
              comments: Looking forward to the Webinar
              custom_questions:
                - title: What do you hope to learn from this Webinar?
                  value: Look forward to learning how you come up with new recipes and what other services you offer.
      responses:
        '201':
          description: |-
            **HTTP Status Code:** `201`<br>
            Registration created.
          schema:
            type: object
            properties:
              registrant_id:
                type: string
                description: Registrant ID
              id:
                type: string
                description: Webinar ID
              topic:
                type: string
                description: Topic
                maxLength: 200
              start_time:
                type: string
                format: date-time
                description: Start time
              join_url:
                type: string
                description: Unique URL for this registrant to join the Webinar. This URL should only be shared with the registrant for whom the API request was made.
          examples:
            application/json:
              registrant_id: culpa deserunt ea est commodo
              id: velit dolore minim Ut
              topic: et laboris Lorem in Ut
              start_time: '1974-02-26T23:01:16.899Z'
              join_url: pariatur
        '300':
          description: |-
            **HTTP Status Code:** `300`<br>Invalid webinar ID. <br>
            Invalid parameter: occurrence_ids.<br>
            Invalid user name.
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>
            Bad request<br>
            **Error Code:** `1010`<br>
            User does not belong to this account:{accountId}.<br>
            **Error Code:** `3000`<br>
            This webinar does not have registration as required:{webinarId}.<br>
            **Error Code:** `3027`<br>
            Host can not register.<br>
            **Error Code:** `3034`<br>
            If you have been invited, please input your work email address.<br>
            **Error Code:** `3038`<br>
            Webinar is over, you can not register now. If you have any questions, please contact Webinar host.<br>
        '404':
          description: |
            **HTTP Status Code:** `404`<br>
            Webinar not found.<br>
            **Error Code:** `1001`<br>
            User {userId} does not exist or does not belong to this account.<br>
            **Error Code:** `3001`<br>
            Webinar {webinarId} not found or has expired.<br>
      security:
        - OAuth: []
    parameters:
      - name: webinarId
        in: path
        type: string
        required: true
  '/webinars/{webinarId}/batch_registrants':
    post:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` **OK** <br>
            Registrants added.
          schema:
            type: object
            properties:
              registrants:
                type: array
                items:
                  type: object
                  properties:
                    registrant_id:
                      type: string
                      description: Unique identifier of the registrant.
                    email:
                      type: string
                      description: Email address of the registrant.
                    join_url:
                      type: string
                      description: Unique URL using which registrant can join the webinar.
          examples:
            application/json:
              registrants:
                - registrant_id: conseret14re
                  email: AqJiu@BkIJbPQOXXngjYCpbrlI.zyax
                  join_url: ' https://zoom.us/w/9999999?tk=oZuwHfdgAAAAAAAAAAAAAAAA&uuid=WN_XW4_SdxBBBBxLDQt'
                - registrant_id: fdgsfh2ey82fuh
                  email: DEih6AZ@mvRTbzqfUSOItBkyPDbNbAW.ouz
                  join_url: ' https://zoom.us/w/9999999?tk=oZu52542356AAAAAA&uuid=WN_XW4_SdxBBBBxLDQt'
                - registrant_id: hdsfhjf3iwh
                  email: i8OzhqFt2h@YKJmTmm.tge
                  join_url: ' https://zoom.us/w/9999999?tk=ozghdfdsghf36AAA&uuid=WN_XW4_SdxBBBBxLDQt'
        '400':
          description: |+
            **HTTP Status Code:** `400` **Bad Request** <br>
            **Error Code:** `200`<br> Webinar plan is missing. You must subscribe to the webinar plan and enable webinar for this user: {0} in order to perform this action.<br><br>
            **Error Code:** `300`<br>
            This API can only be used for scheduled webinar(webinar type: 5). Batch registration is not supported for other webinar types.<br><br>
            **Error Code:** `3038`<br>
            This webinar is over, you can no longer register for this webinar. If you have any questions, please contact the webinar host.<br><br>
            **Error Code:** `3000`<br> Registration has not been enabled for this webinar: {0}.

        '404':
          description: |+
            **HTTP Status Code:** `404` **Not Found** <br>
            **Error Code:** `3001`<br>
            Webinar does not exist: {0}.<br><br>
            **Error Code:** `3043`<br>
            Webinar has reached maximum attendee capacity.<br><br>
            **Error Code:** `404`<br>
            Registration has not been enabled for this meeting: {meetingId}.



      summary: Perform batch registration
      description: |+
        Use this API to register up to 30 registrants at once for a scheduled webinar that requires [registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-webinar-with-registration). <br>

        **Prerequisites:**<br>
        * The webinar host must be a Licensed user.
        * The webinar should be of type `5`, i.e., it should be a scheduled webinar. Other types of webinars are not supported by this API.<br><br>
        **Scope:** `webinar:write`, `webinar:write:admin`<br>
        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>







      operationId: addBatchWebinarRegistrants
      tags:
        - Webinars
      security:
        - OAuth: []
        - Bearer: []
      parameters:
        - in: path
          name: webinarId
          type: string
          required: true
          description: Unique identifier of the webinar.
        - in: body
          name: body
          schema:
            type: object
            properties:
              auto_approve:
                type: boolean
                description: |-
                  If a meeting was scheduled with approval_type `1` (manual approval), but you would like to automatically approve the registrants that are added via this API, you can set the value of this field to `true`.

                  You **cannot** use this field to change approval setting for a meeting  that was originally scheduled with approval_type `0` (automatic approval).
              registrants:
                type: array
                items:
                  type: object
                  properties:
                    first_name:
                      type: string
                      description: First name of the registrant.
                    last_name:
                      type: string
                      description: Last name of the registrant.
                    email:
                      type: string
                      description: Email address of the registrant.
                      format: email
                  required:
                    - first_name
                    - email
          x-examples:
            application/json:
              auto_approve: false
              registrants:
                - first_name: Harry
                  email: AqJiu@BkIJbPQOXXngjYCpbrlI.zyax
                  last_name: CHarles
                - first_name: Mary
                  email: DEih6AZ@mvRTbzqfUSOItBkyPDbNbAW.ouz
                  last_name: Jones
                - first_name: Shekhar
                  email: i8OzhqFt2h@YKJmTmm.tge
                  last_name: Kumar
    parameters:
      - name: webinarId
        in: path
        type: string
        required: true
  '/webinars/{webinarId}/registrants/status':
    put:
      summary: Update registrant's status
      description: |+
        Update a webinar registrant's status. Using this API, you can specify whether you want to approve a registration, deny a registration or cancel a previously approved registration.<br><br>
        **Scopes:** `webinar:write:admin` `webinar:write`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>

      tags:
        - Webinars
      operationId: webinarRegistrantStatus
      parameters:
        - $ref: '#/parameters/WebinarId'
        - $ref: '#/parameters/OccurrenceId'
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              action:
                type: string
                enum:
                  - approve
                  - cancel
                  - deny
                x-enum-descriptions:
                  - Approve registrant
                  - Cancel registrant
                  - Deny registrant
                description: 'Used to approve a registrant, deny a registrant, or cancel a previously approved registrant. '
              registrants:
                type: array
                description: List of registrants.
                maximum: 30
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Registrant ID
                    email:
                      type: string
                      description: Registrant's email address.
            required:
              - action
          x-examples:
            application/json:
              action: string
              registrants:
                - id: string
                  email: string
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            The webinar plan subscription is missing. Enable webinar for this user once the subscription is added: {userId}.
        '300':
          description: '**HTTP Status Code:** `300`<br>Invalid webinar ID.'
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>
            Bad request<br>
            **Error Code:** `1010`<br>
            User does not belong to this account:{accountId}.<br>
            **Error Code:** `3035`<br>
            Webinar has reached maximum attendee capacity.<br>
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            Webinar not found.<br>
            **Error Code:** `1001`<br>
            User {userId} does not exist or does not belong to this account.<br>
            **Error Code:** `3001`<br>
            Webinar {webinarId} not found or has expired.<br>
      security:
        - OAuth: []
  '/past_webinars/{webinarId}/instances':
    get:
      summary: List past webinar instances
      description: |+
        List past webinar instances.<br><br>
        **Scopes:** `webinar:read:admin` `webinar:read`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>

      tags:
        - Webinars
      operationId: pastWebinars
      parameters:
        - $ref: '#/parameters/WebinarId'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            List of past webinar instances returned.
          schema:
            $ref: '#/definitions/WebinarInstances'
          examples:
            application/json:
              webinars:
                - uuid: ut44544gisi
                  start_time: '2019-06-07T03:42:34.548Z'
        '300':
          description: |-
            **HTTP Status Code:** `300`<br>
            Invalid webinar ID.
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            Webinar not found.
      security:
        - OAuth: []
  '/webinars/{webinarId}/polls':
    get:
      summary: 'List a webinar''s polls '
      description: |+
        List all the [polls](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars) of a Webinar.<br><br>
        **Scopes:** `webinar:read:admin` `webinar:read`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>

      tags:
        - Webinars
      operationId: webinarPolls
      parameters:
        - $ref: '#/parameters/WebinarId'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            List polls of a Webinar  returned
          schema:
            $ref: '#/definitions/PollList'
          examples:
            application/json:
              id: cdjfhdsdfd
              status: ended
              title: Learn something new
              questions:
                - name: How are you?
                  type: multiple
                  answers:
                    - Good
                    - Not so good
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            Webinar not found.<br>
      security:
        - OAuth: []
    post:
      summary: Create a webinar's poll
      description: |+
        Create a [poll](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars) for a webinar.<br><br>
        **Scopes:** `webinar:write:admin` `webinar:write`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>

      tags:
        - Webinars
      operationId: webinarPollCreate
      parameters:
        - $ref: '#/parameters/WebinarId'
        - in: body
          name: body
          required: true
          description: Webinar poll object
          schema:
            allOf:
              - $ref: '#/definitions/Poll'
          x-examples:
            application/json:
              title: Learn something new
              questions:
                - name: How are you?
                  type: multiple
                  answers:
                    - Good
                    - Not so good
      responses:
        '201':
          description: |-
            **HTTP Status Code:** `201`<br>
            Webinar Poll Created
          headers:
            Content-Location:
              description: Location of created Webinar Poll
              type: string
          schema:
            allOf:
              - type: object
                properties:
                  id:
                    type: string
                    description: Webinar Poll ID
                  status:
                    type: string
                    description: 'Status of the Webinar Poll:<br>`notstart` - Poll not started<br>`started` - Poll started<br>`ended` - Poll ended<br>`sharing` - Sharing poll results'
                    enum:
                      - notstart
                      - started
                      - ended
                      - sharing
                    x-enum-descriptions:
                      - Poll not start
                      - Poll started
                      - Poll ended
                      - Poll is sharing
              - $ref: '#/definitions/Poll'
          examples:
            application/json:
              id: cdjfhdsdfd
              status: ended
              title: Learn something new
              questions:
                - name: How are you?
                  type: multiple
                  answers:
                    - Good
                    - Not so good
        '300':
          description: '**HTTP Status Code:** `300`<br>Invalid webinarId.'
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            Webinar not found.<br>
      security:
        - OAuth: []
  '/webinars/{webinarId}/polls/{pollId}':
    get:
      summary: Get a webinar poll
      description: |+
        Get a webinar's [poll](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars) details.<br><br>
        **Scopes:** `webinar:read:admin` `webinar:read`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>

      tags:
        - Webinars
      operationId: webinarPollGet
      parameters:
        - $ref: '#/parameters/WebinarId'
        - in: path
          name: pollId
          description: The poll ID
          type: string
          required: true
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Webinar Poll object returned
          schema:
            allOf:
              - type: object
                properties:
                  id:
                    type: string
                    description: Webinar Poll ID
                  status:
                    type: string
                    description: 'Status of the Webinar Poll:<br>`notstart` - Poll not started<br>`started` - Poll started<br>`ended` - Poll ended<br>`sharing` - Sharing poll results'
                    enum:
                      - notstart
                      - started
                      - ended
                      - sharing
                    x-enum-descriptions:
                      - Poll not start
                      - Poll started
                      - Poll ended
                      - Poll is sharing
              - $ref: '#/definitions/Poll'
          examples:
            application/json:
              id: cdjfhdsdfd
              status: ended
              title: Learn something new
              questions:
                - name: How are you?
                  type: multiple
                  answers:
                    - Good
                    - Not so good
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            Webinar not found.<br>
            **Error Code:** `3001`<br>
            Webinar {webinarId} not found or has expired.<br>
      security:
        - OAuth: []
    put:
      summary: Update a webinar poll
      description: |+
        Update a webinar's [poll](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars).<br><br>
        **Scopes:** `webinar:write:admin` `webinar:write`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>

      tags:
        - Webinars
      operationId: webinarPollUpdate
      parameters:
        - $ref: '#/parameters/WebinarId'
        - in: path
          name: pollId
          description: The poll ID
          type: string
          required: true
        - in: body
          name: body
          required: true
          description: Webinar Poll
          schema:
            allOf:
              - $ref: '#/definitions/Poll'
          x-examples:
            application/json:
              title: Learn something new
              questions:
                - name: How are you?
                  type: multiple
                  answers:
                    - Good
                    - Not so good
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`<br>
            Webinar Poll Updated
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            Webinar poll not found.<br>
            **Error Code:** `3001`<br>
            Webinar {webinarId} not found or has expired.<br>
      security:
        - OAuth: []
    delete:
      summary: Delete a webinar poll
      description: |+
        Delete a webinar's [poll](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars).<br><br>
        **Scopes:** `webinar:write:admin` `webinar:write`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>

      tags:
        - Webinars
      operationId: webinarPollDelete
      parameters:
        - $ref: '#/parameters/WebinarId'
        - in: path
          name: pollId
          description: The poll ID
          type: string
          required: true
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`<br>
            Webinar Poll deleted
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            Webinar poll not found.<br>
            **Error Code:** `3001`<br>
            Webinar {webinarId} not found or has expired.<br>
      security:
        - OAuth: []
  '/webinars/{webinarId}/registrants/questions':
    get:
      summary: List registration questions
      description: |+
        Scheduling a [Webinar with registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration) requires your registrants to complete a brief form with fields and questions before they can receive the link to join the Webinar.<br>Use this API to list registration questions and fields that are to be answered by users while registering for a Webinar.<br>
        **Prerequisites:**<br>
        * Pro or higher plan with a Webinar Add-on.
        **Scopes:** `webinar:read:admin` `webinar:read`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>

      tags:
        - Webinars
      operationId: webinarRegistrantsQuestionsGet
      parameters:
        - $ref: '#/parameters/WebinarId'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Webinar Registrant Question object returned
          schema:
            allOf:
              - $ref: '#/definitions/WebinarRegistrantQuestions'
          examples:
            application/json:
              questions:
                - field_name: string
                  required: boolean
              custom_questions:
                - title: string
                  type: string
                  required: boolean
                  answers:
                    - array of answer choices
        '404':
          description: '**HTTP Status Code:** `404`<br>Webinar not found'
      security:
        - OAuth: []
    patch:
      summary: Update registration questions
      description: |+
        Scheduling a [Webinar with registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration) requires your registrants to complete a brief form with fields and questions before they can receive the link to join the Webinar.<br>Use this API to update registration questions and fields of a scheduled Webinar that are to be answered by users while registering for a Webinar.<br><br>
        **Prerequisites:**<br>
        * Pro or higher plan with a Webinar Add-on.
        * Registration option for Webinar should be set as required to use this API.
        **Scopes:** `webinar:write:admin` `webinar:write`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`

      tags:
        - Webinars
      operationId: webinarRegistrantQuestionUpdate
      parameters:
        - $ref: '#/parameters/WebinarId'
        - in: body
          name: body
          required: true
          description: Webinar Registrant Questions
          schema:
            allOf:
              - $ref: '#/definitions/WebinarRegistrantQuestions'
          x-examples:
            application/json:
              questions:
                - field_name: string
                  required: boolean
              custom_questions:
                - title: string
                  type: string
                  required: boolean
                  answers:
                    - array of answer choices
      responses:
        '204':
          description: '**HTTP Status Code:** `204`<br>Webinar Registrant Questions Updated'
        '404':
          description: '**HTTP Status Code:** `404`<br>Webinar not found'
      security:
        - OAuth: []
  /im/chat/messages:
    post:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` **OK**<br>
            Message Sent.
        '400':
          description: |-
            **HTTP Status Code:** `400` **Bad Request**<br>
            **Error Code:** `7001`<br>
            Link does not support markdown format.<br>
            Edit message does not support markdown format.
      summary: Send chatbot messages
      operationId: sendchatbot
      tags:
        - Chatbot Messages
      security:
        - Client Credentials: []
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              robot_jid:
                type: string
                description: Robot JID created when enabling chatbot features on your marketplace app.
              to_jid:
                type: string
                description: Unique JID of reciever. Can be a group or user.
              account_id:
                type: string
                description: Account ID of the authorized account.
              content:
                type: object
                description: 'JSON template describing how the message should be displayed for the user. For more information please see our ["Send Message" templates](https://marketplace.zoom.us/docs/guides/chatbots/sending-messages#example-request).'
              visible_to_user:
                type: string
                description: '**Optional**<br>Allow a Chatbot to send a message to a group channel, but have only one designated person in that group channel see the message by providing the person''s UserID in this field.'
              user_jid:
                type: string
                description: |-
                  **Optional**<br>
                  The UserJID of the user on whose behalf the message is being sent. Use this field to prevent members of a channel from getting notifications that were set up by a user who has left the channel.
              is_markdown_support:
                description: |-
                  **Optional**<br>
                  Applies the markdown parser to your chatbot message if the value of this field is set to `true`.<br> To learn more, refer to the Chatbot message [markdown reference](https://marketplace.zoom.us/docs/guides/chatbots/customizing-messages/message-with-markdown).
                type: boolean
            required:
              - robot_jid
              - to_jid
              - account_id
              - content
          x-examples:
            application/json:
              robot_jid: bjkfdsbfbdshfdbnf
              to_jid: dsjhvfdhfvdfh
              account_id: dmdbffgjbfhgfdj
              content:
                head:
                  text: Hello World
                body:
                  - type: message
                    text: Greetings from the cool bot
      description: |-
        Send chatbot messages from your marketplace chatbot app.<br><br>
        **Scopes:** `imchat:bot`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>
        **Authorization Flow**: Client Credentials Flow<br><br>
        To get authorized, make a POST request to `/oauth/token` endpoint with grant type as `client_credentials`. <br>Use `https://api.zoom.us/oauth/token?grant_type=client_credentials` as the endpoint for the request.
        You will need to send your ClientID and Secret as a Basic base64 encoded AUthorization header. Ex. `Basic base64Encode({client_id}:{client_sceret})`<br><br> Next, use the token recieved (access_token) as a bearer token while making the POST /im/chat/messages request to send chatbot messages.<br><br>
        Learn more about how to authorize chatbots in the [Chatbot Authorization](https://marketplace.zoom.us/docs/guides/chatbots/authorization) guide.
  '/im/chat/messages/{message_id}':
    put:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` **OK**<br>
            Message updated.
          schema:
            type: object
            properties:
              message_id:
                type: string
                description: 'Unique Identifier of the updated message,'
              robot_jid:
                type: string
                description: The BotJID found in the Chat Subscription Section on the Features page of your App Dashboard.
              sent_time:
                type: string
                description: The date and time at which the message was sent.
                format: date-time
              to_jid:
                type: string
                description: The JID of the Channel or User to whom the message was sent.
              user_jid:
                type: string
                description: The UserJID of the user on whose behalf the message is being sent. Used to prevent members of a channel from getting notifications that were set up by a user who has left the channel.
          examples:
            application/json:
              message_id: 201910tryyRFjM_main
              robot_jid: v1pky3tyBBB5pl8q@xmpp.zoom.us
              sent_time: '2019-10-17 01:40:24'
              to_jid: xghfd@shj.zoom.us
              user_jid: jnrgfjp6w@xmpp.zoom.us
      summary: Edit a chatbot message
      description: |-
        Edit a message that was [sent](https://marketplace.zoom.us/docs/api-reference/zoom-api/im-chat/sendchatbot) by your Chatbot app.<br> After sending a message using the Send Chatbot Message API, you must store the messageId returned in the response so that you can make edits to the associated message using this API.

        **Scope:** `imchat:bot`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>
        **Authorization Flow**: Client Credentials Flow<br><br>
        To get authorized, make a POST request to `/oauth/token` endpoint with grant type as `client_credentials`. <br>Use `https://api.zoom.us/oauth/token?grant_type=client_credentials` as the endpoint for the request.
        You will need to send your ClientID and Secret as a Basic base64 encoded AUthorization header. Ex. `Basic base64Encode({client_id}:{client_sceret})`<br><br> Next, use the token received (access_token) as a bearer token while making the PUT /im/chat/messages/{message_id} request to edit a chatbot message.<br><br>
        Learn more about how to authotize chatbots in the [Chatbot Authorization](https://marketplace.zoom.us/docs/guides/chatbots/authorization) guide.
      operationId: editChatbotMessage
      tags:
        - Chatbot Messages
      parameters:
        - in: path
          name: message_id
          type: string
          required: true
          description: 'Unique Identifier of the message that needs to be updated. This should be retrieved from the response of [Send Chatbot Message API](https://marketplace.zoom.us/docs/api-reference/zoom-api/im-chat/sendchatbot).'
        - in: body
          name: body
          schema:
            type: object
            properties:
              robot_jid:
                type: string
                description: Robot JID created when enabling chatbot features on your marketplace app.
              account_id:
                type: string
                description: 'The AccountID of the Zoom account to which the message was sent. Retrieve this from the Chatbot request sent to your server as shown in the example [here]( https://marketplace.zoom.us/docs/guides/chatbots/sending-messages).'
              content:
                type: object
                description: 'JSON template describing how the edited message should be displayed for the user. For more information please see our ["Send Message" templates](https://marketplace.zoom.us/docs/guides/chatbots/sending-messages#example-request).'
              user_jid:
                type: string
                description: |-
                  **Optional**<br>
                  The UserJID of the user on whose behalf the message is being sent. Use this field to prevent members of a channel from getting notifications that were set up by a user who has left the channel.
              is_markdown_support:
                description: |-
                  **Optional**<br>
                  Enable or disable markdown parser to your chatbot message. Applies the markdown parser to your chatbot message if the value of this field is set to `true`.<br> To learn more, refer to the Chatbot message [markdown reference](https://marketplace.zoom.us/docs/guides/chatbots/customizing-messages/message-with-markdown).
                type: boolean
            required:
              - robot_jid
              - account_id
              - content
          x-examples:
            application/json:
              robot_jid: zsgsDgfdhdr
              account_id: ghfgchAFfhfgyt
              user_jid: asdjhdThdaXw@xmpp.zoom.us
              content:
                head:
                  text: This is the header.
                  sub_head:
                    text: This is sub header.
                body:
                  - type: message
                    text: This is the edited message.
              visible_to_user: arrsyrEwestw
              is_markdown_support: 'true'
      security:
        - Client Credentials: []
    parameters:
      - name: message_id
        in: path
        type: string
        required: true
    delete:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` **OK**<br>
            Message deleted.
          schema:
            type: object
            properties:
              message_id:
                type: string
                description: Unique identifier of the message that was deleted.
              robot_jid:
                type: string
                description: The BotJID of the Chatbot app. It can be found in the Chat Subscription Section on the Features page of your App Dashboard
              sent_time:
                type: string
                description: The date and time at which the message was deleted.
              to_jid:
                type: string
                description: The JID of the Channel or User to whom the message was sent.
              user_jid:
                type: string
                description: ' The UserJID of the user on whose behalf the message was sent. Used to prevent members of a channel from getting notifications that were set up by a user who has left the channel.'
          examples:
            application/json:
              message_id: 20191017014024747_XYYRFjM_main
              robot_jid: v1pky3qsaoqqwdfdsaf5pl8q@xmppdev.zoom.us
              sent_time: '2019-10-17 01:40:24'
              to_jid: xxx@conference.xmppdev.zoom.us
              user_jid: jnr_3e_eq4cveeafp3qp6w@xmppdev.zoom.us
      summary: Delete a chatbot message
      description: |-
        Delete a message that was sent by your chatbot app.<br><br> **Scopes:** `imchat:bot`<br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>**Authorization Flow**: Client Credentials Flow<br><br>To get authorized, make a POST request to `/oauth/token` endpoint with grant type as `client_credentials`. <br>Use `https://api.zoom.us/oauth/token?grant_type=client_credentials` as the endpoint for the request.
        You will need to send your ClientID and Secret as a Basic base64 encoded AUthorization header. Ex. `Basic base64Encode({client_id}:{client_sceret})`<br><br> Next, use the token received (access_token) as a bearer token while making the DELETE /im/chat/messages/{message_id} request to delete a message.<br><br>
        Learn more about how to authotize chatbots in the [Chatbot Authorization](https://marketplace.zoom.us/docs/guides/chatbots/authorization) guide.
      operationId: deleteAChatbotMessage
      tags:
        - Chatbot Messages
      security:
        - Client Credentials: []
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              robot_jid:
                type: string
                description: The BotJID found in the Chat Subscription Section on the Features page of your App Dashboard.
              user_jid:
                type: string
                description: The UserJID of the user on whose behalf the message is being sent. Used to prevent members of a channel from getting notifications that were set up by a user who has left the channel.
              account_id:
                type: string
                description: 'The AccountID of the Zoom account to which the message was sent. Retrieve this from the Chatbot request sent to your server as shown in the example [here]( https://marketplace.zoom.us/docs/guides/chatbots/sending-messages).'
            required:
              - robot_jid
              - account_id
          x-examples:
            application/json:
              robot_jid: dgfhfhfdhfghgf
              user_jid: gfhgfhytu6ujg
              account_id: ghjgyu674hfgjn
  '/meetings/{meetingId}/invitation':
    get:
      summary: Get meeting invitation
      description: |+
        Retrieve the meeting invite note that was sent for a specific meeting.<br><br>
        **Scopes:** `meeting:read:admin` `meeting:read`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`

      tags:
        - Meetings
      operationId: meetingInvitation
      parameters:
        - $ref: '#/parameters/MeetingId'
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Meeting invitation returned.
          schema:
            $ref: '#/definitions/MeetingInvitation'
          examples:
            application/json:
              invitation: "Shrijana G is inviting you to a scheduled Zoom meeting.\r\n\r\nTopic: MyTestMeeting\r\nTime: Jul 31, 2019 04:00 PM Pacific Time (US and Canada)\r\n\r\nJoin Zoom Meeting\r\nhttps://zoom.us/j/000000\r\n\r\nOne tap mobile\r\n+000000"
      security:
        - OAuth: []
  '/meetings/{meetingId}/livestream':
    patch:
      summary: Update a live stream
      description: |+
        Zoom allows users to [live stream a meeting](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service) to a custom platform. Use this API to update a meeting's live stream information.<br><br>
        **Prerequisites:**<br>
        * Meeting host must have a Pro license.<br>
        **Scopes:** `meeting:write:admin` `meeting:write`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`


      tags:
        - Meetings
      operationId: meetingLiveStreamUpdate
      parameters:
        - $ref: '#/parameters/MeetingId'
        - in: body
          name: body
          required: true
          description: Meeting
          schema:
            $ref: '#/definitions/MeetingLiveStream'
          x-examples:
            application/json:
              stream_url: mycompany.com/livestream
              stream_key: Contact it@mycompany.com
              page_url: mycompany.com/livestream/123
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`<br>
            Meeting live stream updated.
        '300':
          description: '**Error Code:** `300` <br>Missing meetingId <br> Invalid meetingId.'
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>**Error Code:** `1010` <br>
             User does not belong to this account: {accountId}.<br>
             **Error Code:** `3000` Cannot access webinar info.
        '404':
          description: |
            **HTTP Status Code:** `404`<br>**Error Code:** `1001` <br>User {userId} does not exist.
      security:
        - OAuth: []
    parameters:
      - name: meetingId
        in: path
        type: string
        required: true
    get:
      responses:
        '200':
          description: |+
            **HTTP Status Code:** `200` **OK**<br>
            Live Stream details returned.

          schema:
            type: object
            properties:
              stream_url:
                type: string
                description: Stream URL.
              stream_key:
                type: string
                description: Stream Key.
              page_url:
                type: string
                description: Live streaming page URL. This is the URL using which anyone can view the live stream of the meeting.
          examples:
            application/json:
              stream_url: 'https://somecompany.com/livestream'
              stream_key: Contact It@somecompany.com
              page_url: 'https://somecompany.com/livestream/123'
        '400':
          description: |+
            **HTTP Status Code:** `400` **Bad Request**<br>
            **Error Code:** `300`<br>
            Missing meetingId<br>
            Invalid meetingId<br><br>
            **Error Code:** `1010`<br>
            User does not belong to this account: {accountId}


        '404':
          description: |+
            **HTTP Status Code:** `404` **Not Found**<br>
            **Error Code:** `1001`<br>
            User {userId} does not exist.

      description: |+
        Zoom allows users to [live stream a meeting](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service) to a custom platform. Use this API to get a meeting's live stream configuration details such as Stream URL, Stream Key and Page URL.<br><br>
        **Prerequisites:**<br>
        * Meeting host must be a licensed user with a Pro or higher plan.<br>
        * Live streaming details must have been [configured](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service#h_01589a6f-a40a-4e18-a448-cb746e52ebc5) for the meeting.<br><br>
        **Scopes:** `meeting:read:admin` `meeting:read`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`



      summary: Get live stream details
      parameters:
        - in: path
          name: meetingId
          type: string
          required: true
          description: Unique identifier of the meeting.
      operationId: getLiveStreamDetails
      tags:
        - Meetings
  '/meetings/{meetingId}/livestream/status':
    patch:
      summary: Update Live Stream Status
      description: |+
        Zoom allows users to [live stream a meeting](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service) to a custom platform. Use this API to update the status of a meeting's live stream.<br><br>
        **Prerequisites:**<br>
        * Meeting host must have a Pro license.<br>
        **Scopes:** `meeting:write:admin` `meeting:write`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`

      tags:
        - Meetings
      operationId: meetingLiveStreamStatusUpdate
      parameters:
        - $ref: '#/parameters/MeetingId'
        - in: body
          name: body
          required: true
          description: Meeting
          schema:
            $ref: '#/definitions/MeetingLiveStreamStatus'
          x-examples:
            application/json:
              action: stop
              settings:
                active_speaker_name: false
                display_name: inc
      responses:
        '204':
          description: |+
            **HTTP Status Code:** `204` <br>
            Meeting live stream updated.

        '300':
          description: |-
            **Error Code:** `300` <br>
            Missing meetingId.<br>
            Invalid meetingId
        '400':
          description: |
            **HTTP Status Code:** `400` <br>
            **Error Code:**`3000`<br>
            Cannot access webinar info.<br>
            **Error Code:**`1010`<br>User does not belong to this account: {accountId}.
        '404':
          description: |
            **HTTP Status Code:** `404` <br>
            **Error Code:**`1001`<br>
            User {userId} does not exist.<br>
        '429':
          description: '**HTTP Status Code:** `429`<br>Too many requests submitted to start the live stream of this meeting: {meetingId}. If the live stream has not already started, retry making a new request after 30 seconds.'
      security:
        - OAuth: []
  '/metrics/client/feedback/{feedbackId}':
    get:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Client Feedback details returned
          schema:
            allOf:
              - type: object
                properties:
                  from:
                    type: string
                    format: date
                    description: Start date for this report
                  to:
                    type: string
                    format: date
                    description: End date for this report
              - $ref: '#/definitions/PaginationToken4IMChat'
              - type: object
                properties:
                  client_feedback_details:
                    type: array
                    items:
                      type: object
                      properties:
                        participant_name:
                          type: string
                          description: Participant Name
                        meeting_id:
                          type: string
                          description: Meeting ID
                        time:
                          type: string
                          format: date-time
                          description: Time at which the feedback was submitted by the participant.
                        email:
                          type: string
                          description: Email address of the participant.
          examples:
            application/json:
              from: '2017-09-28'
              to: '2017-10-28'
              page_size: 30
              next_page_token: w7587w4eiyfsudgf
              client_feedback_details:
                - participant_name: Meghan Styles
                  meeting_id: '3789500000000'
                  time: '2017-10-21T11:35:33.480Z'
                  email: hdfgjsfhdfbs@someemail.sdfkhjdf
      summary: Get zoom meetings client feedback
      description: |-
        Retrieve detailed information on a [Zoom meetings client feedback](https://support.zoom.us/hc/en-us/articles/115005855266-End-of-Meeting-Feedback-Survey#h_e30d552b-6d8e-4e0a-a588-9ca8180c4dbf). <br> You can specify a monthly date range for the dashboard data using the `from` and `to` query parameters. The month should fall within the last six months.

        **Prerequisites:**
        * Business or higher account
        * [Feedback to Zoom](https://support.zoom.us/hc/en-us/articles/115005838023) enabled.

        **Scope:** `dashboard_home:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`

        `
      operationId: dashboardClientFeedbackDetail
      tags:
        - Dashboards
      parameters:
        - $ref: '#/parameters/FeedbackId'
        - in: query
          name: from
          type: string
          format: date
        - in: query
          name: to
          type: string
          format: date
        - in: query
          name: page_size
          type: integer
          default: 30
        - in: query
          name: next_page_token
          type: string
      security:
        - OAuth: []
  '/im/users/{userId}/chat/messages':
    get:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            User's IM messages returned.
          schema:
            type: object
            properties:
              date:
                type: string
                format: date-time
                description: 'Query date time, format as yyyy-mm-dd.'
              page_size:
                type: integer
                description: The number of records returned within a single API call.
              next_page_token:
                type: string
                description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
              messages:
                type: array
                description: Array of im messages.
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      description: IM message UUID.
                    message:
                      type: string
                      description: IM message content.
                    sender:
                      type: string
                      description: IM message sender.
                    date_time:
                      type: string
                      format: date-time
                      description: IM message send time.
                    timstamp:
                      type: integer
                      description: IM message send timestamp.
          examples:
            application/json:
              date: 'string [date]'
              page_size: integer
              next_page_token: string
              messages:
                - id: string
                  message: string
                  sender: string
                  date_time: 'string [date-time]'
                  timstamp: Long
      summary: Get user’s IM messages
      description: |-
        Get IM Chat messages for a specified period of time. <aside>Note: This API only supports Oauth2.</aside><br><br>
        **Scopes:** `imchat:read`<br>
        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>

        Please see the [announcements page related to this deprecation.](https://marketplace.zoom.us/docs/guides/stay-up-to-date/announcements#im-api-notice)
      operationId: listimmessages
      tags:
        - IM Chat
      parameters:
        - in: path
          name: userId
          type: string
          description: The user ID or email address.
          required: true
        - in: query
          name: chat_user
          type: string
          description: Chat user's ID or email address.
        - in: query
          name: channel
          type: string
          description: IM Channel's ID.
        - in: query
          name: date
          type: string
          description: 'IM message''s query date time, format as yyyy-MM-dd.'
        - in: query
          name: page_size
          type: integer
          default: 30
          maximum: 100
          minimum: 1
          description: The number of records returned within a single API call.
        - in: query
          name: next_page_token
          type: string
          description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
      security:
        - OAuth: []
      deprecated: true
  /im/users/me/chat/messages:
    post:
      responses:
        '201':
          description: |-
            **HTTP Status Code:** `201`<br>
            Message Sent.
          schema:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: IM message UUID.
          examples:
            application/json:
              id: string
      description: |-
        Send chat message to a user. <aside>Note: This API only supports OAuth 2.0.</aside><br><br>**Scope:** `imchat:write`

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      summary: Send IM messages
      operationId: sendimmessages
      tags:
        - IM Chat
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              message:
                type: string
                description: IM message content.
          x-examples:
            application/json:
              message: Hello World!
        - in: query
          name: chat_user
          type: string
          description: The email address (registered with Zoom) or the userId of the chat user.
      security:
        - OAuth: []
      deprecated: true
  '/webinars/{webinarId}/registrants/{registrantId}':
    get:
      responses:
        '200':
          description: Success.
          schema:
            title: Webianr Registrant
            allOf:
              - properties:
                  id:
                    type: string
              - $ref: '#/definitions/WebinarRegistrant'
              - properties:
                  status:
                    type: string
                  create_time:
                    type: string
                    format: date-time
                  join_url:
                    type: string
                    format: string
            type: object
          examples:
            application/json:
              page_count: '1'
              page_number: '1'
              page_size: '30'
              total_records: '1'
              registrants:
                - id: '24000002122'
                  email: sjfkghdsg@someemail.dfgjd
                  first_name: Jill
                  last_name: Chill
                  address: dsfhkdjsfh st
                  city: jackson heights
                  country: US
                  zip: '11371'
                  state: NY
                  phone: '00000000'
                  industry: Food
                  org: Cooking Org
                  job_title: Chef
                  purchasing_time_frame: 1-3 months
                  role_in_purchase_process: Influencer
                  no_of_employees: '10'
                  comments: Looking forward to the Webinar
                  custom_questions:
                    - title: What do you hope to learn from this Webinar?
                      value: Look forward to learning how you come up with new recipes and what other services you offer.
                  status: approved
                  create_time: '2019-02-26T23:01:16.899Z'
                  join_url: 'https://zoom.us/webinar/mywebinarissocooldighdghodghodg'
        '300':
          description: Invalid webinar ID.
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>
            Bad request<br>
            **Error Code:** `1010`<br>
            User does not belong to this account:{accountId}.<br>
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            Webinar not found.<br>
            **Error Code:** `1001`<br>
            User {userId} does not exist or does not belong to this account.<br>
            **Error Code:** `3001`<br>
            Webinar {webinarId} not found or has expired.<br>
      summary: Get a webinar registrant
      description: |-
        Zoom users with a [Webinar Plan](https://zoom.us/webinar) have access to creating and managing Webinars. Webinar allows a host to broadcast a Zoom meeting to up to 10,000 attendees. Scheduling a [Webinar with registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration) requires your registrants to complete a brief form before receiving the link to join the Webinar.<br>Use this API to get details on a specific user who has registered for the Webinar.<br><br>
        **Scopes:** `webinar:read:admin` `webinar:read`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>
        **Prerequisites:**<br>
        * The account must have a Webinar plan.
      operationId: webinarRegistrantGet
      tags:
        - Webinars
      parameters:
        - $ref: '#/parameters/WebinarId'
        - $ref: '#/parameters/RegistrantId'
        - $ref: '#/parameters/OccurrenceId'
      security:
        - OAuth: []
    parameters:
      - name: webinarId
        in: path
        type: string
        required: true
      - name: registrantId
        in: path
        type: string
        required: true
    delete:
      responses:
        '204':
          description: |-
            **HTTP status code:** `204` <br>
            OK
        '400':
          description: |-
            **HTTP status code:** `400` <br>
            Bad Request<br>

            **Error code:** `200`<br>
            Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action: {0}.<br>

            **Error code:** `300`<br>
            The value that you entered for the Registrant ID field is invalid. Enter a valid value and try again.<br>

            **Error code:** `404` <br>
            Registration has not been enabled for this webinar: {0}.<br>

            **Error code:** `3000` <br>
            Registrant {0} was not found.<br>

            **Error code:** `3001` <br>
            Webinar does not exist: {0}.
      summary: Delete a webinar registrant
      description: |-
        Delete a webinar registrant.<br><br>
        **Scopes**: `webinar:write:admin` `webinar:write`<br>
         <br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      parameters:
        - in: path
          name: webinarId
          type: integer
          required: true
          description: The webinar ID.
        - in: path
          name: registrantId
          type: string
          required: true
          description: The registrant ID.
        - in: query
          name: occurrence_id
          type: string
          description: The webinar occurence ID.
      tags:
        - Webinars
      operationId: deleteWebinarRegistrant
  '/phone/users/{userId}':
    get:
      responses:
        '200':
          description: '**HTTP Status Code:** `200` <br>User profile object returned. '
          schema:
            type: object
            description: Zoom User Profile
            properties:
              id:
                type: string
                description: Zoom User Id.
              phone_user_id:
                type: string
                description: Zoom Phone User Id.
              email:
                type: string
                description: Email address of the user.
              calling_plan:
                type: array
                description: Calling Plan of the user
                items:
                  type: object
                  properties:
                    type:
                      type: integer
                      description: 'The [type](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) of calling plan. '
              phone_numbers:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Phone Number Id
                    number:
                      type: string
                      description: Phone number
              extension_number:
                type: integer
                description: Extension number
              status:
                type: string
                description: |-
                  The status of the user.<br>
                  `activate`: An active user. <br>
                  `deactivate`: User has been deactivated from the ZoomPhone system.
                enum:
                  - activate
                  - deactivate
              site_id:
                type: string
                description: 'Unique Identifier for a [site](https://support.zoom.us/hc/en-us/articles/360020809672).'
              site_admin:
                type: boolean
                description: 'Indicates whether the user is a [site admin](https://support.zoom.us/hc/en-us/articles/360042099012) or not.'
          examples:
            application/json:
              id: fdjbgdfgkl0-ibkdjfg20913
              phone_user_id: vfjbdlgrwi902_igr
              email: awesome@amazingemailservice.com
              extension_number: 100100
              calling_plans:
                - type: 200
              phone_numbers:
                - id: vigfkjnrtUernketg09
                  number: '+1234567890'
              site_id: aXb1039sdjhhgdbgj4
              status: activate
        '300':
          description: '**Error code:** `300` <br> User does not belong to this account.'
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            **Error code**: `1001` <br>User does not exist: {userId}.
      summary: Get user's profile
      description: |-
        Retrieve a user's [zoom phone](https://support.zoom.us/hc/en-us/articles/360001297663-Quickstart-Guide-for-Zoom-Phone-Administrators) profile.

        **Scopes:** `phone:read`, `phone:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`


        **Prerequisites** :
        1. Business or Enterprise account
        2. A Zoom Phone license
      tags:
        - Phone
      operationId: phoneUser
      parameters:
        - $ref: '#/parameters/UserId'
      security:
        - OAuth: []
    parameters:
      - name: userId
        in: path
        type: string
        required: true
    patch:
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`<br>
            Profile updated.
          schema: {}
        '300':
          description: |-
            **Error Code**: `300`<br>
            User does not belong to this account.
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>
            Extension number {extensionNumber} is already in use.
      summary: Update user's profile
      description: |-
        Update a [Zoom Phone](https://support.zoom.us/hc/en-us/categories/360001370051-Zoom-Phone) user's profile.

        **Scopes:** `phone:write` `phone:write:admin`  <br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>
        **Prerequisite:**
        1. Business or Enterprise account
        2. A Zoom Phone license
      operationId: updateUserProfile
      tags:
        - Phone
      security:
        - OAuth: []
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              extension_number:
                type: string
                description: The extension number of the user. The number must be complete (i.e. site number + short extension).
              site_id:
                type: string
                description: 'Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672)   where the user should be moved/assigned. '
          x-examples:
            application/json:
              extension_number: '101010'
  '/accounts/{accountId}/phone/settings':
    patch:
      responses:
        '204':
          description: |+
            **Response HTTP code**: `204` **No Content.**<br>
            Updated successfully.

          schema: {}
        '401':
          description: |-
            **HTTP Status Code:** `401`<br>

            **Error Code:** `124`<br>
            Account does not exist: {accountId}.
      description: |-
        Only [master account owners](https://marketplace.zoom.us/docs/api-reference/master-account-apis) can use this API to enable BYOC(Bring your own carrier) option for a sub account.<br>

        **Scope**:<br>
        * `phone:master` <br>

        **Prerequisites**: <br>
        * Business or enterprise Account.<br>
      summary: Update BYOC settings
      operationId: updatePhoneSettings
      tags:
        - Phone
      security:
        - OAuth: []
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              byoc:
                type: object
                properties:
                  enable:
                    type: boolean
                    description: Set the value of this field to `true` to allow a sub account to add BYOC numbers from the Zoom web admin portal.
          x-examples:
            application/json:
              byoc:
                enable: true
        - in: path
          name: accountId
          type: string
          required: true
          description: Unique identifier of the sub account.
    parameters:
      - name: accountId
        in: path
        type: string
        required: true
  '/phone/users/{userId}/settings':
    get:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            User Setting object returned.
          schema:
            type: object
            description: Phone User Setting
            properties:
              outbound_caller:
                type: object
                description: Outbound Caller Info
                properties:
                  number:
                    type: string
                    description: Outbound calling number
              area_code:
                type: string
                description: Area Code of User
              company_number:
                type: string
                description: 'The [company number](https://support.zoom.us/hc/en-us/articles/360028553691) can be used by external callers to reach your phone users (by dialing the main company number and the user''s extension). It can also be used by phone users as their caller ID when making calls.'
              desk_phone:
                type: object
                description: Contains information on phones or devices provisioned for the user.
                properties:
                  keys_positions:
                    type: object
                    properties:
                      primary_number:
                        type: string
                        description: Primary number of the user.
              voice_mail:
                type: object
                description: '[Shared voicemail access](https://support.zoom.us/hc/en-us/articles/360033863991-Sharing-and-controlling-access-to-a-voicemail-inbox) assigned to user.'
                properties:
                  access_user_id:
                    type: string
                    description: The user that is allowed to access voicemail messages for the extension.
                  download:
                    type: boolean
                    description: Specifies whether the user has download permissions. The default is **false**.
                  delete:
                    type: boolean
                    description: Specifies whether the user has delete permissions. The default is **false**.
                  shared_id:
                    type: string
                    description: Unique identifier of the shared voicemail that the user can access.
              outbound_caller_ids:
                type: object
                properties:
                  number:
                    type: string
                    description: Outbound caller number.
                  name:
                    type: string
                    description: Outbound caller name.
                  is_default:
                    type: boolean
                    description: 'Whether the outbound caller ID is the default or not. If `true`, the outbound caller ID is the default caller ID.'
          examples:
            application/json:
              outbound_caller:
                number: '+123456789'
              area_code: '+1'
              desk_phone:
                keys_positions:
                  primary_number: '+123456789'
        '300':
          description: |-
            **Error Code:** `300`<br>
            User does not belong to this account.
        '404':
          description: |-
            **HTTP Status Code:** `404` <br>
            **Error Code:** `1001`<br>
            User does not exist: {userId}.
      summary: Get user's settings
      description: |-
        Retrieve a user's zoom phone profile [settings](https://support.zoom.us/hc/en-us/articles/360021325712-Configuring-Settings).

        **Scopes:** `phone:read`, `phone:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>
        **Prerequisite:**
        1. Business or Enterprise account
        2. A Zoom Phone license
      tags:
        - Phone
      operationId: phoneUserSettings
      parameters:
        - $ref: '#/parameters/UserId'
      security:
        - OAuth: []
  /phone/setting_templates:
    post:
      responses:
        '201':
          description: |-
            **HTTP Status Code:** `201`<br>
            Created Successfully.
          schema:
            type: object
            properties:
              id:
                type: string
                description: Template ID.
              name:
                type: string
                description: Template name.
              description:
                type: string
                description: Template description.
              type:
                type: string
                description: 'The type of template. Values include: `user`, `group`, `autoReceptionist`, `commonArea`, `zr`, or `interop`.'
          examples:
            application/json:
              id: '123456'
              name: Name name
              description: A description here...
              type: user
        '400':
          description: |-
            **HTTP Response Code:** `400`<br>
            The template name you entered already exists. Provide a new name for the template and try again.<br>

            **Error Code:** `300`<br>
            Validation failed. You provided an incorrect value for the template type. Provide a valid value and try again.
        '401':
          description: |-
            **HTTP Status Code:** `401`<br>

            **Error Code:** `124`<br>
            Account does not exist: {accountId}.
      summary: Add a setting template
      operationId: addSettingTemplate
      tags:
        - Phone
      description: |-
        This API lets you create a Zoom Phone setting template for an account. Template type includes **User**, **Auto Receptionist**, or **Call Queue**. Settings include profile, policy and user settings. After creating a phone template, the settings defined via this request will become the default settings for an account.
        <br><br>
        **Scope**:
        * `phone:write:admin` `phone:write`


        **Prerequisites**:
        1. Business or enterprise Zoom account
        2. A Zoom Phone license

        <br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>


        <br>
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              site_id:
                type: string
                description: Unique identifier of the site. Required only when multiple sites are enabled.
              name:
                type: string
                description: The name of the template.
              description:
                type: string
                description: A description of the template.
              type:
                type: string
                description: 'The type of template. Values include `user`, `group`, `autoReceptionist`, `commonarea`, or `interop`.'
                enum:
                  - user
                  - group
                  - autoReceptionist
                  - commonarea
                  - interop
            required:
              - name
              - type
          x-examples:
            application/json:
              site_id: 2kfjoefejoefoe
              name: user_template111
              description: template description
              type: user
    get:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            OK
          schema:
            type: object
            properties:
              next_page_token:
                type: string
                description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes
              page_size:
                type: integer
                description: The number of records returned within a single API call. The default is **30** and the maximum is **300**.
              total_records:
                type: integer
                description: The total number of records returned.
              templates:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Unique identifier of the template.
                    name:
                      type: string
                      description: Template name.
                    description:
                      type: string
                      description: Template description.
                    type:
                      type: string
                      description: |-
                        Template type.<br>
                        The value of this field can be one of the following:<br>
                        * `user`<br>
                        * `group`<br>
                        * `autReceptionist`<br>
                        * `commonArea`<br>
                        * `zr`<br>
                        * `interop`<br>
                      enum:
                        - user
                        - group
                        - autReceptionist
                        - commonArea
                        - zr
                        - interop
          examples:
            application/json:
              next_page_token: '3'
              page_size: '30'
              total_records: '200'
              templates:
                - id: '12345'
                  name: namename
                  description: string
                  type: '2'
        '400':
          description: |-
            **HTTP Response Code:** `400`<br>

            **Error Code:** `300`<br>
            Multiple Sites option has been disabled. Enable it and try again.
        '401':
          description: |-
            **HTTP Status Code:** `401`<br>

            **Error Code:** `124`<br>
            Account does not exist: {accountId}.
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            Site does not exist.
      description: |+
        This API lets you retrieve a list of all the phone template settings previously created.
        <br>
        **Scope**:<br>
        * `phone:read:admin` or `phone:read`
        <br>**Prerequisites**: <br>
        1. Business or enterprise Account
        2. A Zoom Phone license

        <br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>

      summary: List setting templates
      operationId: listSettingTemplates
      tags:
        - Phone
      security:
        - OAuth: []
      parameters:
        - in: query
          name: page_size
          type: integer
          description: Number of records returns within a single API call.
          maximum: 300
          default: 30
        - in: query
          name: next_page_token
          type: string
          description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
        - in: query
          name: site_id
          type: string
          description: 'Unique identtifier of the site. This field is required only if multiple sites have been enabled. If this is not provided, the response lists the account level setting templates.'
  '/phone/setting_templates/{templateId}':
    patch:
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`<br>
            No Content. Request was successful.
          schema: {}
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>
            **Error Code:** `300`<br>
            The country code you entered is invalid. Provide a valid country code and try again.<br>
            The area code you entered is invalid. Provide a valid area code with a length between 0 to 6 digits and try again.<br>
            The value you entered for the audio prompt language code is invalid.
            PIN code could only include numbers.<br>
            Invalid PIN code. PIN code must be {0} digits long.<br>
            Invalid PIN code. PIN code must be {0} to {1} digits long.<br>
            Invalid PIN code. Your PIN code must not be the same as the extension number.<br>
            Invalid PIN code. The PIN code must not contain a group of repeated digits.<br>
            PIN code cannot be an ascending or descending group of digits.
            Connect to operator type error.<br>
            You provided an invalid value for call handling ring type. The value of this field must either be “simultaneous” or “sequential”.<br>
            You provided an invalid value for business hours type field. The value of this field must either be 1 or 2.<br>
            You provided an invalid value for the business hours action field.<br>
            You provided an invalid value for the close hours action field.<br>
        '401':
          description: |-
            **HTTP Status Code:** `401`<br>

            **Error Code:** `124`<br>
            Account does not exist: {accountId}.
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            Site does not exist. Settings template does not exist: {templateId}.
            Operator was not found for the following id: {0}.
            External contact was not found for the following id: {0}.
      description: |+
        Use this API to update or modify profile settings for the phone template. Template type includes **User**, **Auto Receptionist**, or **Call Queue**. After you've modified a template, click **User Settings** to set up settings for Call Handling, Desk Phone, and Others. <br>

        **Scope**:<br>
        * `phone:write:admin` or `phone:write`

        **Prerequisites**: <br>
        1. Business or Enterprise Account
        2. A Zoom Phone license
        <br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>

      summary: Update a setting template
      operationId: updateSettingTemplate
      tags:
        - Phone
      security:
        - OAuth: []
      parameters:
        - in: path
          name: templateId
          type: string
          required: true
          description: The Template ID.
        - in: body
          name: body
          schema:
            type: object
            properties:
              name:
                type: string
                description: Specify the name of the template.
              description:
                type: string
                description: The description of the template.
              profile:
                type: object
                properties:
                  country:
                    type: string
                    description: Name of the country where the template was created.
                  area_code:
                    type: string
                    description: The area code from which the phone account was created.
              policy:
                type: object
                properties:
                  auto_call_recording:
                    type: object
                    properties:
                      enable:
                        type: boolean
                        description: Automatic call recording.
                      recording_calls:
                        type: string
                        description: 'Values: inbound, outbound, both.'
                        enum:
                          - inbound
                          - outbound
                          - both
                      recording_transcription:
                        type: boolean
                        description: Allow call recording transcription.
                      recording_start_prompt:
                        type: boolean
                        description: Play a prompt to call participants when the recording has started.
                  ad_hoc_call_recording:
                    type: object
                    properties:
                      enable:
                        type: boolean
                        description: Allow current extension to record and save calls in the cloud.
                      recording_start_prompt:
                        type: boolean
                        description: Play a prompt to call participants when the recording has started.
                      recording_transcription:
                        type: boolean
                        description: Allow call recording transcription.
                  sms:
                    type: object
                    properties:
                      enable:
                        type: boolean
                        description: Allow user to send and receive messages.
                      international_sms:
                        type: boolean
                        description: Whether or not SMS is international.
                  voicemail:
                    type: object
                    properties:
                      enable:
                        type: boolean
                        description: 'Allow current extension to access, receive, or share voicemail.'
                      allow_transcription:
                        type: boolean
                        description: Allow voicemail transcription.
              user_settings:
                type: object
                properties:
                  call_handling:
                    type: object
                    properties:
                      business_hours:
                        type: object
                        properties:
                          type:
                            type: integer
                            description: |-
                              Values:<br>
                              1-24 Hours, 7 Days a Week;<br>
                              2-Custom Hours
                            enum:
                              - 1
                              - 2
                          custom_hours:
                            type: array
                            items:
                              type: object
                              properties:
                                weekday:
                                  type: integer
                                  description: 'Values: 1-7 sun-sat'
                                  enum:
                                    - 1
                                    - 2
                                    - 3
                                    - 4
                                    - 5
                                    - 6
                                    - 7
                                type:
                                  type: integer
                                  description: |-
                                    Values:<br>
                                    1-24 Hours,<br>
                                    2-customized hours
                                  enum:
                                    - 1
                                    - 2
                                from:
                                  type: string
                                  description: |-
                                    Values:<br>
                                    hh:mm
                                  format: time
                                to:
                                  type: string
                                  description: |-
                                    Values:<br>
                                    hh:mm
                                  format: time
                          ring_type:
                            type: string
                            description: |-
                              Call Handling Ring Mode:<br>
                              0-Simultaneous,<br>
                              1-Sequential
                            enum:
                              - 0
                              - 1
                          ringing_duration:
                            type: string
                            description: |-
                              Ringing Duration for Each Device, in seconds. Values:<br>
                              15,20,25,30,35,40,45,50,55,60
                            enum:
                              - 15
                              - 20
                              - 25
                              - 30
                              - 35
                              - 40
                              - 45
                              - 50
                              - 55
                              - 60
                          business_hour_action:
                            type: integer
                            description: |-
                              When a call is not answered:<br>
                              0-Forward to voicemail;<br>
                              1-Play a message, then disconnect; <br>
                              9-Disconnect; <br>
                              26-Forward to External Contacts; <br>
                              50-Forward to another extension
                            enum:
                              - 0
                              - 1
                              - 9
                              - 26
                              - 50
                          connect_to_operator:
                            type: object
                            description: 'Allow callers to press Zero to reach an operator or press One to leave a message, or allow neither of these options.'
                            properties:
                              enable:
                                type: boolean
                                description: Enable connect to operator.
                              type:
                                type: string
                                description: |-
                                  Values:<br>
                                  1-user,<br>
                                  2-callQueue, <br>
                                  3-autoReceptionist,<br>
                                  4-commonAreaPhone,<br>
                                  5-zoomRoom, <br>
                                  7-sharedLineGroup
                                enum:
                                  - user
                                  - zoomRoom
                                  - commonAreaPhone
                                  - autoReceptionist
                                  - callQueue
                                  - sharedLineGroup
                              id:
                                type: string
                                description: 'Extension ID of user, zoomRoom, commonAreaPhone, autoReceptionist, callQueue or sharedLineGroup. This ID is passed along with the `type` if the `close_hour_action` was not set with a value of *26*.'
                      close_hours:
                        type: object
                        properties:
                          max_wait_time:
                            type: string
                            description: |-
                              Maximum wait time, in seconds. Values:<br>
                              15,20,25,30,35,40,45,50,55,60
                            enum:
                              - 15
                              - 20
                              - 25
                              - 30
                              - 35
                              - 40
                              - 45
                              - 50
                              - 55
                              - 60
                          close_hour_action:
                            type: integer
                            description: |
                              Action to take when a call is not answered:<br>
                              0-Forward to voicemail; <br>
                              1-Play a message, then disconnect; <br>
                              9-Disconnect; <br>
                              26-Forward to External Contacts; <br>
                              50-Forward to another extension
                            enum:
                              - 0
                              - 1
                              - 9
                              - 26
                              - 50
                          connect_to_operator:
                            type: object
                            description: 'Allow callers to press Zero to reach an operator or press One to leave a message, or allow neither of these options.'
                            properties:
                              enable:
                                type: boolean
                                description: Enable connect to operator.
                              type:
                                type: string
                                description: |-
                                  Values:<br>
                                  1-user,<br>
                                  2-callQueue, <br>
                                  3-autoReceptionist,<br>
                                  4-commonAreaPhone,<br>
                                  5-zoomRoom, <br>
                                  7-sharedLineGroup
                                enum:
                                  - user
                                  - zoomRoom
                                  - commonAreaPhone
                                  - autoReceptionist
                                  - callQueue
                                  - sharedLineGroup
                              id:
                                type: string
                                description: 'Extension ID of user, zoomRoom, commonAreaPhone, autoReceptionist, callQueue or sharedLineGroup. This ID is passed along with the `type` if the `close_hour_action` was not set with a value of *26*.'
                  desk_phone:
                    type: object
                    properties:
                      pin_code:
                        type: string
                        description: Pin code.
                  block_calls_without_caller_id:
                    type: boolean
                    description: Block Calls without Caller ID.
                  audio_prompt_language:
                    type: string
                    description: |-
                      Audio prompt language code.<br> American English: `en-US`<br>
                      British English: `en-GB`<br>
                      Español americano: `es-US`<br>
                      Français canadien: `fr-CA`<br>
                      Dansk: `da-DK`<br>
                      Deutsch: `de-DE`<br>
                      Español: `es-ES`<br>
                      Français: `fr-FR`<br>
                      Italiano: `it-IT`<br>
                      Nederlands: `nl-NL`<br>
                      Portugues portugal: `pt-PT`<br>
                      Japanese: `ja-JP`<br>
                      Korean: `ko-KO`<br>
                      Portugues brasil: `pt-BR`<br>
                      Chinese: `zh-CN`<br>
                      Taiwanese: `zh-TW`<br>
                  hold_music:
                    type: string
                    description: |-
                      The value of this field can be either `default` or `disable`.

                      * `default`: This means that the hold music can be set using the [audio library](https://support.zoom.us/hc/en-us/articles/360028212652-Using-the-audio-library-to-customize-greetings-and-hold-music).

                      * `disable`: This means that the hold music is disabled.
                    enum:
                      - default
                      - disable
    get:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            OK
          schema:
            type: object
            properties:
              id:
                type: string
                description: Specify the template ID.
              name:
                type: string
                description: Specify the name of the template.
              description:
                type: string
                description: The description of the template.
              type:
                type: string
                description: 'The type of template being queried. Values: `user`, `group`, `auto receptionist` `common area`,`zr`, `interop`.'
                enum:
                  - user
                  - group
                  - autoReceptionist
                  - commonArea
                  - zr
                  - interop
              profile:
                type: object
                properties:
                  country:
                    type: string
                    description: Name of the country where the template was created.
                  area_code:
                    type: string
                    description: The area code from which the phone account was created.
              policy:
                type: object
                properties:
                  auto_call_recording:
                    type: object
                    properties:
                      enable:
                        type: boolean
                        description: Enable automatic call recording.
                      recording_calls:
                        type: string
                        description: 'Values: inbound, outbound, both.'
                      recording_transcription:
                        type: boolean
                        description: Allow call recording transcription.
                      recording_start_prompt:
                        type: boolean
                        description: Play a prompt to call participants when the recording has started.
                  ad_hoc_call_recording:
                    type: object
                    properties:
                      enable:
                        type: boolean
                        description: Allow current extension to record and save calls in the cloud.
                      recording_start_prompt:
                        type: boolean
                        description: Play a prompt to call participants when the recording has started.
                      recording_transcription:
                        type: boolean
                        description: Allow call recording transcription.
                  sms:
                    type: object
                    properties:
                      enable:
                        type: boolean
                        description: Allow user to send and receive messages.
                      international_sms:
                        type: boolean
                  voicemail:
                    type: object
                    properties:
                      enable:
                        type: boolean
                        description: 'Allow current extension to access, receive, or share voicemail.'
                      allow_transcription:
                        type: boolean
                        description: Allow voicemail transcription.
              user_settings:
                type: object
                properties:
                  call_handling:
                    type: object
                    properties:
                      business_hours:
                        type: object
                        properties:
                          type:
                            type: integer
                            description: |-
                              Values:<br>
                              1-24 Hours, 7 Days a Week;<br>
                              2-Custom Hours
                            enum:
                              - 1
                              - 2
                          custom_hours:
                            type: array
                            items:
                              type: object
                              properties:
                                weekday:
                                  type: integer
                                  description: 'Values: 1-7 sun-sat'
                                  enum:
                                    - 1
                                    - 2
                                    - 3
                                    - 4
                                    - 5
                                    - 6
                                    - 7
                                type:
                                  type: integer
                                  description: |-
                                    Values:<br>
                                    1-24 Hours,<br>
                                    2-customized hours
                                  enum:
                                    - 1
                                    - 2
                                from:
                                  type: string
                                  description: |-
                                    Values:<br>
                                    hh:mm
                                  format: time
                                to:
                                  type: string
                                  description: |-
                                    Values:<br>
                                    hh:mm
                                  format: time
                          ring_type:
                            type: string
                            description: |-
                              Call Handling Ring Mode:<br>
                              0-Simultaneous,<br>
                              1-Sequential
                            enum:
                              - 0
                              - 1
                          ringing_duration:
                            type: string
                            description: |-
                              Ringing Duration for Each Device in seconds. Values:<br>
                              15,20,25,30,35,40,45,50,55,60
                            enum:
                              - 15
                              - 20
                              - 25
                              - 30
                              - 35
                              - 40
                              - 45
                              - 50
                              - 55
                              - 60
                          business_hour_action:
                            type: integer
                            description: |-
                              When a call is not answered:<br>
                              0-Forward to voicemail;<br>
                              1-Play a message, then disconnect; <br>
                              9-Disconnect; <br>
                              26-Forward to External Contacts; <br>
                              50-Forward to another extension
                            enum:
                              - 0
                              - 1
                              - 9
                              - 26
                              - 50
                          connect_to_operator:
                            type: object
                            description: 'Allow callers to press Zero to reach an operator or press One to leave a message, or allow neither of these options.'
                            properties:
                              enable:
                                type: boolean
                                description: Enable connect to operator.
                              type:
                                type: string
                                description: |-
                                  Values:<br>
                                  1-user,<br>
                                  2-callQueue, <br>
                                  3-autoReceptionist,<br>
                                  4-commonAreaPhone,<br>
                                  5-zoomRoom, <br>
                                  7-sharedLineGroup
                                enum:
                                  - user
                                  - zoomRoom
                                  - commonAreaPhone
                                  - autoReceptionist
                                  - callQueue
                                  - sharedLineGroup
                              id:
                                type: string
                                description: 'Phone extension ID of the user, zoomRoom, commonAreaPhone, autoReceptionist, callQueue or sharedLineGroup.'
                      close_hours:
                        type: object
                        properties:
                          max_wait_time:
                            type: string
                            description: |-
                              Max Wait Time in seconds. Values:<br>
                              15,20,25,30,35,40,45,50,55,60
                            enum:
                              - 15
                              - 20
                              - 25
                              - 30
                              - 35
                              - 40
                              - 45
                              - 50
                              - 55
                              - 60
                          close_hour_action:
                            type: integer
                            description: |
                              Action to take when a call is not answered:<br>
                              0-Forward to voicemail; <br>
                              1-Play a message, then disconnect; <br>
                              9-Disconnect; <br>
                              26-Forward to External Contacts; <br>
                              50-Forward to another extension
                            enum:
                              - 0
                              - 1
                              - 9
                              - 26
                              - 50
                          connect_to_operator:
                            type: object
                            description: 'Allow callers to press Zero to reach an operator or press One to leave a message, or allow neither of these options.'
                            properties:
                              enable:
                                type: boolean
                              type:
                                type: string
                                description: |-
                                  Values:<br>
                                  1-user,<br>
                                  2-callQueue, <br>
                                  3-autoReceptionist,<br>
                                  4-commonAreaPhone,<br>
                                  5-zoomRoom, <br>
                                  7-sharedLineGroup
                                enum:
                                  - user
                                  - zoomRoom
                                  - commonAreaPhone
                                  - autoReceptionist
                                  - callQueue
                                  - sharedLineGroup
                              id:
                                type: string
                                description: 'Phone extension ID of the user, zoomRoom, commonAreaPhone, autoReceptionist, callQueue or sharedLineGroup.'
                  desk_phone:
                    type: object
                    properties:
                      pin_code:
                        type: string
                        description: Pin code.
                  block_calls_without_caller_id:
                    type: boolean
                    description: Block Calls without Caller ID.
                  audio_prompt_language:
                    type: string
                    description: |-
                      Audio prompt language code.<br> American English: `en-US`<br>
                      British English: `en-GB`<br>
                      Español americano: `es-US`<br>
                      Français canadien: `fr-CA`<br>
                      Dansk: `da-DK`<br>
                      Deutsch: `de-DE`<br>
                      Español: `es-ES`<br>
                      Français: `fr-FR`<br>
                      Italiano: `it-IT`<br>
                      Nederlands: `nl-NL`<br>
                      Portugues portugal: `pt-PT`<br>
                      Japanese: `ja-JP`<br>
                      Korean: `ko-KO`<br>
                      Portugues brasil: `pt-BR`<br>
                      Chinese: `zh-CN`<br>
                      Taiwanese: `zh-TW`<br>
                  hold_music:
                    type: string
                    description: |-
                      The value of this field can be either `default` or `disable`.

                      * `default`: This means that the hold music can be set using the [audio library](https://support.zoom.us/hc/en-us/articles/360028212652-Using-the-audio-library-to-customize-greetings-and-hold-music).

                      * `disable`: This means that the hold music is disabled.
                    enum:
                      - default
                      - disable
          examples:
            application/json:
              id: string
              name: string
              description: string
              type: string
              profile:
                country: string
                area_code: string
              policy:
                auto_call_recording:
                  enable: boolean
                  recording_calls: string
                  recording_transcription: boolean
                  recording_start_prompt: boolean
                ad_hoc_call_recording:
                  enable: boolean
                  recording_start_prompt: boolean
                  recording_transcription: boolean
                sms:
                  enable: boolean
                  international_sms: boolean
                voicemail:
                  enable: boolean
                  allow_transcription: boolean
              user_settings:
                call_handling:
                  business_hours:
                    type: integer
                    custom_hours:
                      - weekday: integer
                        type: integer
                        from: string
                        to: string
                    ring_type: string
                    ringing_duration: string
                    business_hour_action: integer
                    connect_to_operator:
                      enable: boolean
                      type: string
                      id: string
                  close_hours:
                    max_wait_time: string
                    close_hour_action: integer
                    connect_to_operator:
                      enable: boolean
                      type: string
                      id: string
                desk_phone:
                  pin_code: string
                block_calls_without_caller_id: boolean
                audio_prompt_language: string
                hold_music: string
        '401':
          description: |-
            **HTTP Status Code:** `401`<br>

            **Error Code:** `124`<br>
            Account does not exist: {accountId}.
        '404':
          description: |
            **HTTP Status Code:** `404`<br>
            Site does not exist. Settings template does not exist: {templateId}.
          schema: {}
          examples: {}
      summary: Get setting template details
      operationId: getSettingTemplate
      tags:
        - Phone
      description: |+
        This API lets you retrieve a specific account phone template previously created. <br>

        **Scope**: <br>
        * `phone:write:admin` or `phone:write`

        **Prerequisites**: <br>
        1. Business or Enterprise Account
        2. A Zoom Phone license
        <br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>

      security:
        - OAuth: []
      parameters:
        - in: path
          name: templateId
          type: string
          required: true
          description: Unique identifier for the template.
        - in: query
          name: custom_query_fields
          type: string
          description: 'Provide the name of the field to use to filter the response. For example, if you provide "description" as the value of the field, you will get a response similar to the following: {“description”: “template description”}.'
    parameters:
      - name: templateId
        in: path
        type: string
        required: true
  '/phone/users/{userId}/call_logs':
    get:
      responses:
        '200':
          description: |-
            **HTTP Status code:** `200`
            User's call logs returned.
          schema:
            type: object
            description: Phone User Call Logs
            properties:
              from:
                type: string
                description: Date from which you would like to view the logs.
              to:
                type: string
                description: Date up to which you would like to view the phone log.
              page_count:
                type: integer
                description: Total number of pages
              next_page_token:
                type: string
                description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
              page_size:
                type: integer
                description: The number of records returned within a single API call for each page.
              total_records:
                type: integer
                description: The total number of records returned.
              call_logs:
                type: array
                description: Call Log
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Call Log ID
                    user_id:
                      type: string
                      description: User ID or user email.
                    caller_number:
                      type: string
                      description: Number of caller
                    caller_number_type:
                      type: string
                      description: Type of caller's number. 1 - internal | 2 - external
                    caller_name:
                      type: string
                      description: Contact name of caller
                    callee_number:
                      type: string
                      description: Number of callee
                    callee_number_type:
                      type: string
                      description: Type of callee's number. 1 - internal | 2 - external
                    callee_name:
                      type: string
                      description: Contact name of callee
                    direction:
                      type: string
                      description: Direction of the call. "inbound" | "outbound"
                    duration:
                      description: Duration of the call in seconds.
                      type: integer
                    result:
                      type: string
                      description: Result of the call. "call_connected" | "recorded" | "no_answer"
                    date_time:
                      type: string
                      description: Start time of the call
                    path:
                      type: string
                      description: Path of the call log.
                    site:
                      type: object
                      properties:
                        id:
                          type: string
                          description: 'Target [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) in which the phone number was assigned. Sites allow you to organize the phone users in your organization. For example, you sites could be created based on different office locations.'
                        name:
                          type: string
                          description: Name of the site where the phone number is assigned.
                    recording_type:
                      type: string
                      description: |-
                        Recording type. <br>
                        * `1` - On-demand recording.<br>
                        * `2` - Automatic recording.
                    call_id:
                      type: string
                      description: Unique identifier of the phone call.
                    client_code:
                      type: string
                      description: Client code.
                    charge:
                      type: string
                      description: Billing charge for the call.
                    rate:
                      type: string
                      description: Billing rate for the call.
                    forwarded_to:
                      type: object
                      description: Indicates who the call was forwarded to.
                      properties:
                        name:
                          type: string
                        extension_number:
                          type: string
                        phone_number:
                          type: string
                        number_type:
                          type: string
                        location:
                          type: string
                    forwarded_by:
                      type: object
                      description: Indicates where the call was forwarded from.
                      properties:
                        name:
                          type: string
                        extension_number:
                          type: string
                        phone_number:
                          type: string
                        number_type:
                          type: string
                        location:
                          type: string
                    accepted_by:
                      type: object
                      description: Indicates who accepted the call.
                      properties:
                        name:
                          type: string
                        extension_number:
                          type: string
                        phone_number:
                          type: string
                        number_type:
                          type: string
                        location:
                          type: string
                    outgoing_by:
                      type: object
                      properties:
                        name:
                          type: string
                        extension_number:
                          type: string
                        phone_number:
                          type: string
                        number_type:
                          type: string
                        location:
                          type: string
                    waiting_time:
                      type: integer
                      description: 'Waiting time for the call, in seconds.'
                    has_recording:
                      type: boolean
                      description: Whether the call has a recording or not.
                    has_voicemail:
                      type: boolean
                      description: Whether the call has voicemail or not.
          examples:
            application/json:
              page_count: 0
              page_number: 1
              page_size: 30
              total_records: 0
              from: '2019-05-19'
              to: '2019-05-20'
              call_logs:
                - id: sjbkfdsbfsdf
                  caller_number: '12345678'
                  caller_number_type: '1'
                  caller_name: ullamconame
                  callee_number: '34567889'
                  callee_number_type: '2'
                  callee_name: somename
                  direction: inbound
                  duration: 18677470
                  result: no_answer
                  date_time: '2019-05-19T20:00:00Z'
        '300':
          description: |-
            **Error Code:** `300`<br>
            User does not belong to this account.
        '404':
          description: |-
            **HTTP Status code:** `404`
            **Error Code:** `300`<br>
            User does not exist: {userId}.
      summary: Get user's call logs
      description: |-
        Retrieve a [zoom phone](https://support.zoom.us/hc/en-us/articles/360001297663-Quickstart-Guide-for-Zoom-Phone-Administrators) user's call logs.

        **Scopes:** `phone:read`, `phone:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>
        **Prerequisite:**
        1. Business or Enterprise account
        2. A Zoom Phone license
      tags:
        - Phone
      operationId: phoneUserCallLogs
      parameters:
        - $ref: '#/parameters/UserId'
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/FromDate'
        - $ref: '#/parameters/ToDate'
        - in: query
          name: type
          type: string
          enum:
            - all
            - missed
        - $ref: '#/parameters/NextPageToken'
        - in: query
          name: phone_number
          type: string
          description: Filter API responses to include call logs of only the phone number defined in this field.
        - in: query
          name: time_type
          type: string
          description: Enables you to sort call logs by start or end time. Choose the sort time value. Values include `startTime` or `endTime`.
          default: startTime
          enum:
            - startTime
            - endTime
      security:
        - OAuth: []
  '/phone/users/{userId}/recordings':
    get:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            User object returned.
          schema:
            type: object
            description: Phone User Recordings
            properties:
              page_count:
                type: integer
                description: Total number of pages.
              page_size:
                type: integer
                description: The number of records returned within a single API call for each page.
              total_records:
                type: integer
                description: The total number of records returned.
              next_page_token:
                type: string
                description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
              from:
                type: string
                format: date
                description: Start date for the query.
              to:
                type: string
                description: End date.
                format: date
              recordings:
                type: array
                description: Recordings
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: ID of recording
                    caller_number:
                      type: string
                      description: Number of caller
                    caller_number_type:
                      type: string
                      description: Type of caller's number. 1 - internal | 2 - external
                    caller_name:
                      type: string
                      description: Contact name of caller
                    callee_number:
                      type: string
                      description: Number of callee
                    callee_number_type:
                      type: string
                      description: Type of callee's number. 1 - internal | 2 - external
                    callee_name:
                      type: string
                      description: Contact name of callee
                    direction:
                      type: string
                      description: Direction of the call. "inbound" | "outbound"
                    duration:
                      type: string
                      description: Duration of the call
                    download_url:
                      type: string
                      description: |
                        Download url for the recording. For security purposes, you must provide an OAuth access token in the auth header to download the recording file using this url. <br>

                        Example request:<br>
                        ```
                        curl --request GET \
                          --url {download_url} \
                          --header 'authorization: Bearer {access_token} \
                          --header 'content-type: application/json'
                        ```
                    date_time:
                      type: string
                      description: Date and time at which the record is received
          examples:
            application/json:
              page_count: 0
              page_number: 1
              page_size: 30
              total_records: 1
              from: '2019-05-19'
              to: '2019-05-20'
              recordings:
                - id: magnageUt
                  caller_number: '12345678'
                  caller_number_type: '1'
                  caller_name: ullamconame
                  callee_number: '34567889'
                  callee_number_type: '2'
                  callee_name: somename
                  direction: inbound
                  duration: 12
                  date_time: '2019-05-19T20:00:00Z'
                  download_url: somerandomdownloadurl.com
        '300':
          description: |-
            **Error code:** `300`
            User does not belong to this account.
        '404':
          description: |-
            **HTTP Status Code:** `404` <br>
            **Error code:** `1001`<br>
            User does not exist: {userId}.
      summary: Get user's recordings
      description: |-
        Retrieve a user's zoom [phone recordings](https://support.zoom.us/hc/en-us/articles/360021336671-Viewing-Call-History-and-Recordings).
        **Scopes:** `phone:read`, `phone:read:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>
        **Prerequisite:**
        1. Business or Enterprise account
        2. A Zoom Phone license
      tags:
        - Phone
      operationId: phoneUserRecordings
      parameters:
        - $ref: '#/parameters/UserId'
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/NextPageToken'
        - in: query
          name: from
          type: string
          format: date
          description: Start date for the query in 'yyyy-mm-dd' format. The date range defined by the "from" and "to" parameters should only be one month as the response includes only one month worth of recording data. The month defined should fall within the last six months.
        - $ref: '#/parameters/ToDate'
      security:
        - OAuth: []
  '/phone/users/{userId}/voice_mails':
    get:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            User object returned.
          schema:
            type: object
            description: Phone User Voice Mails
            properties:
              page_count:
                type: integer
                description: Total number of page
              page_size:
                type: integer
                description: Size of each page
              total_records:
                type: integer
                description: Total number of records
              next_page_token:
                type: string
                description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
              from:
                type: string
                format: date
                description: Start date for the query.
              to:
                type: string
                description: End date.
                format: date
              voice_mails:
                type: array
                description: Voice Mails
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Id of voice mail
                    date_time:
                      type: string
                      description: Date the voice mail started
                    download_url:
                      type: string
                      description: Download url of attachment
                    duration:
                      type: string
                      description: Duration of the voice mail
                    caller_number:
                      type: string
                      description: 'Number of caller '
                    caller_number_type:
                      type: string
                      description: Type of caller's number. 1 - internal | 2 - external
                    caller_name:
                      type: string
                      description: Contact name of caller
                    callee_number:
                      type: string
                      description: Number of callee
                    callee_number_type:
                      type: string
                      description: Type of callee's number. 1 - internal | 2 - external
                    callee_name:
                      type: string
                      description: Contact name of callee
                    status:
                      type: string
                      description: Status of the voice mail. Can be either 'read' or 'unread'
                      enum:
                        - read
                        - unread
          examples:
            application/json:
              page_count: 0
              page_number: 1
              page_size: 30
              total_records: 1
              voice_mails:
                - id: Excepteur
                  date_time: '2019-05-19T20:00:00Z'
                  download_url: ani_maborumu7labojgde.com
                  duration: '18677'
                  caller_number: '12345678'
                  caller_number_type: '1'
                  caller_name: ullamconame
                  callee_number: '34567889'
                  callee_number_type: '2'
                  callee_name: somename
                  status: read
        '300':
          description: |-
            **Error Code:** 300<br>
            User does not belong to account.
        '404':
          description: |-
            **HTTP Status Code:** `404` <br>
            **Error Code:** 1001<br>
            User does not exist: {userId}
      summary: Get user's voicemails
      description: |-
        Retrieve a user's Zoom Phone voicemails.

        **Scopes:** `phone:read`, `phone:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>
        **Prerequisite:**
        1. Business or Enterprise account
        2. A Zoom Phone license
      tags:
        - Phone
      operationId: phoneUserVoiceMails
      parameters:
        - $ref: '#/parameters/UserId'
        - $ref: '#/parameters/PageSize'
        - in: query
          name: status
          type: string
          default: all
          description: Status of the voice mail
          enum:
            - all
            - read
            - unread
        - $ref: '#/parameters/NextPageToken'
        - in: query
          name: from
          type: string
          format: date
          description: Start date for the query in 'yyyy-mm-dd' format. The date range defined by the "from" and "to" parameters should only be one month as the response includes only one month worth of voicemail data. The month defined should fall within the last six months.
        - $ref: '#/parameters/ToDate'
      security:
        - OAuth: []
  '/past_webinars/{WebinarUUID}/absentees':
    get:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Success.<br>**Error Code:** `200`<br>
            Webinar plan subscription is missing. Enable webinar for this user once the subscription is added:{userId}.
          schema:
            $ref: '#/definitions/WebinarRegistrantList'
          examples:
            application/json:
              page_count: 1
              page_number: 1
              page_size: 30
              total_records: 1
              registrants:
                - id: '24000002122'
                  email: sjfkghdsg@someemail.dfgjd
                  first_name: Jill
                  last_name: Chill
                  address: dsfhkdjsfh st
                  city: jackson heights
                  country: USA
                  zip: '11371'
                  state: NY
                  phone: '00000000'
                  industry: Food
                  org: Cooking Org
                  job_title: Chef
                  purchasing_time_frame: 1-3 months
                  role_in_purchase_process: Influencer
                  no_of_employees: '10'
                  comments: Looking forward to the Webinar
                  custom_questions:
                    - title: What do you hope to learn from this Webinar?
                      value: Look forward to learning how you come up with new recipes and what other services you offer.
                  status: approved
                  create_time: '2019-02-26T23:01:16.899Z'
                  join_url: 'https://zoom.us/webinar/mywebinarissocooldighdghodghodg'
        '300':
          description: '**Error Code:** `300`<br>Invalid webinar UUID.'
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>
            **Error Code:** `300`<br>
            The request could not be completed because you have provided an invalid occurence ID: {occurenceId}<br>
            **Error Code:** `1010`<br>
            User does not belong to this account:{accountId}.<br>
            **Error Code:** `3000`<br>
            This Webinar has not registration required: {webinarUUID}
        '404':
          description: |+
            **HTTP Status Code:** `404`<br>
            **Error Code:** `1001`<br>
            User {userId} does not exist or does not belong to this account.<br>
            **Error Code:** `3001`<br>Meeting ID is invalid or not end.

      summary: Get webinar absentees
      description: |-
        List absentees of a webinar.<br><br>
        **Scopes:** `webinar:read:admin` `webinar:read`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`
      operationId: webinarAbsentees
      tags:
        - Webinars
      parameters:
        - $ref: '#/parameters/OccurrenceId'
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/NextPageToken'
        - $ref: '#/parameters/WebinarUUID'
      security:
        - OAuth: []
  '/users/{userId}/tsp/settings':
    patch:
      responses:
        '204':
          description: |-
            **Status Code:** `204` **No Content** <br>
            URL set successfully.
        '400':
          description: |-
            **HTTP Status Code:** `400` **Bad Request** <br><br>
            **Error Code**: `2000`<br>
            Not TSP special account.<br>

            Ths error means that the account does not have special TSP privilege. Contact Zoom Developer Support for details.<br>
            **Error Code**: `2024`<br>
             Account not enable TSP
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            User ID not found.<br>
            **Error Code**: `1001`<br>
            User {userId} not exist or not belong to this account.
            **Error Code**: `1120`<br>
            Invite not exist.

            This error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid.
      summary: Set global dial-in URL for a TSP user
      description: |
        A global dial-in page can provide a list of global access numbers using which audio conferencing can be conducted. By calling this API, you can set the url for the global dial-in page of a user whose Zoom account has TSP and special TSP with third-party audio conferencing options enabled. <p></p>
        **Scopes:**`tsp:write:admin` `tsp:write`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      tags:
        - TSP
      parameters:
        - in: path
          name: userId
          type: string
          required: true
          description: The userId or email address of the user.
        - in: body
          name: body
          schema:
            $ref: '#/definitions/tsp-global-dial-in'
          description: Global dial-in URL of the user.
          x-examples:
            application/json:
              audio_url: youraudiourl.dshfgdhsfh
      operationId: tspUrlUpdate
      security:
        - OAuth: []
  '/phone/users/{userId}/settings/{settingType}':
    post:
      responses:
        '201':
          description: |-
            **HTTP Status Code** `201` <br>
            Created Successfully.
          schema:
            type: object
            properties:
              voice_mail:
                type: object
                properties:
                  access_user_id:
                    type: string
                    description: The user that is allowed to access voicemail messages for the extension.
                  download:
                    type: boolean
                    description: Specifies whether the user has download permissions. The default is **false**.
                  delete:
                    type: boolean
                    description: Specifies whether the user has delete permissions. The default is **false**.
                  shared_id:
                    type: string
                    description: Unique identifier of the voicemail that the user can access.
          examples:
            application/json:
              voice_mail: voicemailtest
              access_user_id: '12'
              permission:
                - download: 'false'
                  delete: 'false'
        '400':
          description: |-
            **HTTP Response Code:** `400`<br>
            Voicemail option has been disabled.<br>

            **Error Code:** `300`<br>
            Invalid user sub setting type.<br>
            Voicemail has already been shared to the user.<br>
          schema: {}
        '404':
          description: |-
            **HTTP Status Code:** `404` <br>

            **Error Code:** `1001`<br>
            User does not exist: {userId}.
      summary: Set up shared access
      description: |-
        Phone users can access [shared voicemail inboxes](https://support.zoom.us/hc/en-us/articles/360033863991-Sharing-and-controlling-access-to-a-voicemail-inbox) in the Zoom desktop client, web portal, or provisioned desk phone. Use this API to define the voicemail access permissions of a user.

        To view these settings in the Zoom web portal, navigate to **Admin >Phone System Management> Users & Rooms**. Click the **Users** tab and select **User Settings**. Scroll down to **Voicemail & Call Recordings**.<br>

        **Scope**:`phone:write:admin`<br>
        <br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>



        **Prerequisites**: <br>
        Business or Enterprise Account
      operationId: addUserSetting
      tags:
        - Phone
      parameters:
        - in: path
          name: userId
          type: string
          required: true
          description: Unique identifier for the user.
        - in: path
          name: settingType
          type: string
          description: 'Corresponds to the setting item you wish to modify. Allowed values: `voice_mail`'
          required: true
        - in: body
          name: body
          schema:
            type: object
            properties:
              voice_mail:
                type: object
                description: Update the voicemail setting.
                properties:
                  access_user_id:
                    type: string
                    description: 'Specify the user ID of a user with whom to share voicemail access permissions. '
                  download:
                    type: boolean
                    description: Specifies whether the user has download permissions. The default is **false**.
                  delete:
                    type: boolean
                    description: Specifies whether the user has delete permissions. The default is **false**.
          x-examples:
            application/json:
              voice_mail:
                access_user_id: sdfw35sdfd
                download: true
                delete: false
      security:
        - OAuth: []
    patch:
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`<br>
            No Content<br>
          schema: {}
        '400':
          description: |-
            **HTTP Response Code:** `400`<br>
            Voicemail option has been disabled.<br>

            **Error Code:** `300`<br>
            Invalid user setting Type: {settingType}.
          schema:
            type: object
            properties: {}
        '404':
          description: |-
            **HTTP Status Code:** `404` <br>
            Shared voicemail does not exist: {shared_id}.

            **Error Code:** `1001`<br>
            User does not exist: {userId}.
      summary: Update shared access
      description: |-
        Phone users can access [shared voicemail inboxes](https://support.zoom.us/hc/en-us/articles/360033863991-Sharing-and-controlling-access-to-a-voicemail-inbox) in the Zoom desktop client, web portal, or provisioned desk phone. Use this API to update the voicemail access permissions of a user.

        To view these settings in the Zoom web portal, navigate to **Admin >Phone System Management> Users & Rooms**. Click the **Users** tab and select **User Settings**. Scroll down to **Voicemail & Call Recordings**.<br>

        **Scope**: <br>`phone:write:admin`<br>
        <br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>



        **Prerequisites**:<br>
        Business or Enterprise Account
      operationId: updateUserSetting
      tags:
        - Phone
      security:
        - OAuth: []
      parameters:
        - in: path
          name: settingType
          type: string
          description: 'Corresponds to the setting item you wish to modify. Allowed values: `voice_mail`'
          required: true
        - in: body
          name: body
          schema:
            type: object
            properties:
              voice_mail:
                type: object
                description: Update the voicemail setting.
                properties:
                  shared_id:
                    type: string
                    description: |-

                      Specify the ID of the voicemail.
                  access_user_id:
                    type: string
                    description: Specify the user ID of the user whose voicemail permissions need to be updated.
                  download:
                    description: Specify whether the user has download permissions. The default is **false**.
                    type: boolean
                  delete:
                    description: Specify whether the user has delete permissions. The default is **false**.
                    type: boolean
        - in: path
          name: userId
          type: string
          required: true
          description: Unique identifier of the user.
    delete:
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`<br>
            No Content<br>
          schema: {}
        '400':
          description: |-
            **HTTP Status Codes** `404`<br>
            Voicemail option has been disabled.<br>

            **Error Code:** `300`<br>
            Invalid user sub setting type.<br>
        '404':
          description: |-
            **HTTP Status Codes** `404`<br>
            Shared voicemail does not exist:{shared_id}<br>

            **Error Code:** `1001`<br>
            User does not exist: {userId}<br>
      summary: Remove shared access
      operationId: deleteUserSetting
      tags:
        - Phone
      security:
        - OAuth: []
      parameters:
        - in: path
          name: userId
          type: string
          required: true
          description: Unique identifier of the user.
        - in: path
          name: settingType
          type: string
          description: 'Corresponds to the setting item you wish to remove. Allowed values: `voice_mail`'
          required: true
        - in: query
          name: shared_id
          type: string
          required: true
          description: Required only for voicemail setting type.
      description: |+
        Remove the shared voicemail access settings that were previously assigned to a user.

        To view these settings in your Zoom web portal, navigate to **Admin >Phone System Management> Users & Rooms**. Click the **Users** tab and select **User Settings**. Scroll down to **Voicemail & Call Recordings**.<br>

        **Scope**: `phone:write:admin`<br><br>
        **Prerequisites**:<br>
        * Business or enterprise Account<br>
        <br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>

  /phone/call_logs:
    get:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Account's call logs returned.
          schema:
            type: object
            description: Account Call Logs
            properties:
              from:
                type: string
                description: Date from which you would like to view the logs.
              to:
                type: string
                description: Date up to which you would like to view the phone log.
              page_count:
                type: integer
                description: Total number of pages
              page_size:
                type: integer
                description: The number of records returned within a single API call for each page.
              total_records:
                type: integer
                description: The total number of records returned.
              next_page_token:
                type: string
                description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
              call_logs:
                type: array
                description: Call Log
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Call Log ID
                    caller_number:
                      type: string
                      description: Number of caller
                    caller_number_type:
                      type: string
                      description: Type of caller's number. 1 - internal | 2 - external
                    caller_name:
                      type: string
                      description: Contact name of caller
                    callee_number:
                      type: string
                      description: Number of callee
                    callee_number_type:
                      type: string
                      description: Type of callee's number. 1 - internal | 2 - external
                    callee_name:
                      type: string
                      description: Contact name of callee
                    direction:
                      type: string
                      description: Direction of the call. "inbound" | "outbound"
                    duration:
                      description: Duration of the call in seconds.
                      type: integer
                    result:
                      type: string
                      description: Result of the call. "call_connected" | "recorded" | "no_answer"
                    date_time:
                      type: string
                      description: Start time of the call
                    site:
                      type: object
                      properties:
                        id:
                          type: string
                          description: 'Target [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) in which the phone number was assigned. Sites allow you to organize the phone users in your organization. For example, you sites could be created based on different office locations.'
                        name:
                          type: string
                          description: Name of the site where the phone number is assigned.
                    client_code:
                      type: string
                      description: Client code.
                    charge:
                      type: string
                      description: Billing charge for the call.
                    rate:
                      type: string
                      description: Billing rate for the call.
                    user_id:
                      type: string
                      description: User ID of the call log owner.
                    answer_start_time:
                      type: string
                      format: date-time
                      description: "GMT date and time at which the inbound call was answered. The value of this field is in `yyyy-MM-dd'T'HH:mm:ss'Z'` format.\n\t\t"
                    waiting_time:
                      type: string
                      description: "Duration that a  **call queue member** takes to answer a call from the time it started ringing. The value of the duration is in seconds.\n\t\t\t"
                    path:
                      type: string
                      description: 'Path of the call. '
                    recording_type:
                      type: string
                      description: |-
                        Type of a call recording:<br>
                        `1` OnDemand<br>
                        `2` Automatic
                      enum:
                        - 1
                        - 2
                    recording_id:
                      type: string
                      description: Unique identifier for the call recording.
                    call_id:
                      type: string
                      description: Unique identifier for the phone call.
          examples:
            application/json:
              page_count: 0
              page_number: 1
              page_size: 30
              total_records: 0
              from: '2019-05-19'
              to: '2019-05-20'
              call_logs:
                - id: sjbkfdsbfsdf
                  caller_number: '12345678'
                  caller_number_type: '1'
                  caller_name: ullamconame
                  callee_number: '34567889'
                  callee_number_type: '2'
                  callee_name: somename
                  direction: inbound
                  duration: 18677470
                  result: no_answer
                  date_time: '2019-05-19T20:00:00Z'
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            **Error Code:** `3001`<br>
            Error retrieving call logs.
      summary: Get account's call logs
      description: |-
        Retrieve [call logs](https://support.zoom.us/hc/en-us/articles/360021114452-Viewing-Call-Logs) for an account.

        **Scopes**: `phone:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>
        **Prerequisite:**<br>
        1. Business or Enterprise account<br>
        2. A Zoom Phone license<br>
        3. Account Owner and a [role](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control) with Zoom Phone Management<br>
      parameters:
        - in: query
          name: page_size
          type: integer
          default: 30
          maximum: 300
          description: The number of records returned within a single API call.
        - in: query
          name: from
          type: string
          description: |-
            Start date from which you would like to get the call logs. The start date should be within past six months. <br>

            The API only returns data pertaining to a month. Thus, the date range(defined using "from" and "to" fields) for which the call logs are to be returned must not exceed a month.
        - in: query
          name: to
          type: string
          description: The end date upto which you would like to get the call logs for. The end date should be within past six months.
        - in: query
          name: type
          type: string
          description: The type of the call logs. The value can be either "all" or "missed".
        - $ref: '#/parameters/NextPageToken'
        - in: query
          name: path
          type: string
          description: |-
            Filter the API response by [path](https://support.zoom.us/hc/en-us/articles/360021114452-Viewing-and-identifying-logs#h_646b46c6-0623-4ab1-8b8b-ea5b8bcef679) of the call. The value of this field can be one of the following: `voiceMail`, `message`, `forward`, `extension`, `callQueue`, `ivrMenu`, `companyDirectory`, `autoReceptionist`, `contactCenter`, `disconnected`, `commonAreaPhone`,
            `pstn`, `transfer`, `sharedLines`, `sharedLineGroup`, `tollFreeBilling`, `meetingService`, `parkPickup`,
            `parkTimeout`, `monitor`, `takeover`, `sipGroup`
        - in: query
          name: time_type
          type: string
          description: Enables you to sort call logs by start or end time. Choose the sort time value. Values include `startTime` or `endTime`.
          default: startTime
          enum:
            - startTime
            - endTime
      operationId: accountCallLogs
      tags:
        - Phone
      security:
        - OAuth: []
  '/phone/users/{userId}/phone_numbers':
    post:
      responses:
        '200':
          description: |
            **HTTP Status Code:** `200` <br>
            Phone number assigned successfully.
          schema:
            type: object
            properties:
              phone_numbers:
                type: array
                description: Assigned phone number
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: ID of the phone number
                    number:
                      type: string
                      description: The phone number that is assigned to the user.
          examples:
            application/json:
              phone_numbers:
                - id: djkfsd13
                  number: '+123456789'
        '300':
          description: |
            **Error Code:** `300`<br>
            User does not belong to this account.<br>
            Validation Failed. Phone number has already been assigned.
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>
            User does not have a calling plan.
        '404':
          description: |-
            **HTTP Status Code:** `404` <br>
            **Error Code:** `1001` <br>This user does not exist: {userId}.
      summary: Assign phone number to user
      description: |-
        Assign a [phone number](https://support.zoom.us/hc/en-us/articles/360020808292-Managing-Phone-Numbers) to a user who has already enabled Zoom Phone.

        **Scopes**: `phone:write` `phone:write:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>
        **Prerequisite:**
        1. Business or Enterprise account
        2. A Zoom Phone license
      operationId: assignPhoneNumber
      tags:
        - Phone
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              phone_numbers:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: ID for phone number
                    number:
                      type: string
                      description: Phone number in E164 format.
          description: Provide either an id or a number in the request body.
          x-examples:
            application/json:
              phone_numbers:
                - id: djkfsd13
      security:
        - OAuth: []
    parameters:
      - name: userId
        in: path
        type: string
        required: true
  '/phone/users/{userId}/phone_numbers/{phoneNumberId}':
    delete:
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`
            The phone number has been unassigned successfully.
          schema: {}
        '300':
          description: |-
            **Error Code:** `300`<br>
            User does not belong to this account.
        '404':
          description: |-
            **HTTP Status Code:** `404` <br>
            **Error Code:** `1001`<br>
            User does not exist.
      summary: Unassign phone number
      description: |-
        Unassign [phone number](https://support.zoom.us/hc/en-us/articles/360020808292-Managing-Phone-Numbers#h_38ba8b01-26e3-4b1b-a9b5-0717c00a7ca6) of a Zoom phone user. <br>

        After assigning a phone number, you can remove it if you don't want it to be assigned to anyone.

        **Scopes**: `phone:write` `phone:write:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>
        **Prerequisite:**
        1. Business or Enterprise account
        2. A Zoom Phone license
        3. User must have been previously assigned a Zoom Phone number.
      operationId: UnassignPhoneNumber
      tags:
        - Phone
      parameters:
        - in: path
          name: userId
          type: string
          required: true
          description: Provide either userId or email address of the user.
        - in: path
          name: phoneNumberId
          type: string
          required: true
          description: 'Provide either phone number or phoneNumberId of the user. '
      security:
        - OAuth: []
    parameters:
      - name: userId
        in: path
        type: string
        required: true
      - name: phoneNumberId
        in: path
        type: string
        required: true
  '/phone/users/{userId}/calling_plans':
    post:
      responses:
        '200':
          description: |-
            **HTTP Status code:** `200`<br>
            Calling plan assigned successfully.
          schema: {}
        '300':
          description: |-
            **Error Code:** `300` <br>
            User does not belong to this account.
        '404':
          description: |-
            **HTTP Status code:** `404`<br>
            **Error Code:** `1001` <br>
            User does not exist:{userId}.
      summary: Assign calling plan to a user
      description: |+
        Assign [calling plan](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) to a [Zoom Phone](https://support.zoom.us/hc/en-us/categories/360001370051-Zoom-Phone) user.

        **Scopes**: `phone:write` `phone:write:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>
        **Prerequisite:**
        1. Business or Enterprise account
        2. A Zoom Phone license

      operationId: assignCallingPlan
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              calling_plans:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: string
                      description: '[Type](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) of the calling plan.'
          x-examples:
            application/json:
              calling_plans:
                - type: '100'
                - type: '200'
      tags:
        - Phone
      security:
        - OAuth: []
    parameters:
      - name: userId
        in: path
        type: string
        required: true
  '/phone/users/{userId}/calling_plans/{type}':
    delete:
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` <br>
            Calling plan unassigned successfully.
          schema: {}
        '300':
          description: |-
            **Error Code:** `300` <br>
            User does not belong to this account.
        '404':
          description: |-
            **HTTP Status Code:** `404` <br>
            **Error Code:** `1001` <br>
            User does not exist:{userId}.
      summary: Unassign user's calling plan
      description: |-
        Unassign a [calling plan](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) that was previously assigned to a [Zoom Phone](https://support.zoom.us/hc/en-us/categories/360001370051) user.

        **Scopes**: `phone:write` `phone:write:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>
        **Prerequisite:**
        1. Business or Enterprise account
        2. A Zoom Phone license
      operationId: unassignCallingPlan
      tags:
        - Phone
      security:
        - OAuth: []
      parameters:
        - in: path
          name: type
          type: string
          required: true
          description: |
            The [type](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) of the calling plan that was assigned to user. (e.g: The value of type would be "200" for Unlimited US/Canada calling plan.)
    parameters:
      - name: userId
        in: path
        type: string
        required: true
      - name: type
        in: path
        type: string
        required: true
  /phone/recordings:
    get:
      responses:
        '200':
          description: |-
            **HTTP Status Code** `200`<br>
            OK.
          schema:
            type: object
            properties:
              next_page_token:
                type: string
                description: The current page number of returned records.
              page_size:
                type: integer
                description: 'The number of records returned within a single API call. The default is **30**, and the maximum is **100**.'
              total_records:
                type: integer
                description: Total number of records returned.
              recordings:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Unique identifier of the recording.
                    caller_number:
                      type: string
                      description: The phone number associated to the caller.
                    caller_number_type:
                      type: string
                      description: |-
                        Specifies the type of the caller number.<br>

                        `1` - internal<br>
                        `2` - external<br>
                      enum:
                        - 1
                        - 2
                    caller_name:
                      type: string
                      description: The contact name of the caller.
                    callee_number:
                      type: string
                      description: The phone number of the callee.
                    callee_number_type:
                      type: string
                      description: |-
                        Specifies the callee' number type.<br>
                        `1` - internal<br>
                        `2` - external<br>
                      enum:
                        - 1
                        - 2
                    callee_name:
                      type: string
                      description: The contact name of the callee.
                    recording_type:
                      type: string
                      description: 'The recording type. The allowed values are `All`, `OnDemand`, or `Automatic`. The default is `All`.'
                    owner:
                      type: object
                      description: The owner of the recording.
                      properties:
                        type:
                          type: string
                          description: 'Specifies the owner type. Values: `user` or `call queue`.'
                          enum:
                            - user
                            - call queue
                        id:
                          type: string
                          description: The owner's ID.
                        extension_number:
                          type: string
                          description: The extension number associated to the call number.
                        name:
                          type: string
                          description: Name of the owner.
                    site:
                      type: object
                      properties:
                        id:
                          type: string
                          description: The site ID.
                        name:
                          type: string
                          description: The site name.
                    direction:
                      type: string
                      description: 'The direction of the call. Values: `inbound` or `outbound`.'
                      enum:
                        - inbound
                        - outbound
                    duration:
                      type: integer
                      description: The duration of the recording.
                    download_url:
                      type: string
                      description: The download URL for the recording.
                    date_time:
                      type: string
                      description: The date and time when the recording was received.
                      format: date-time
          examples:
            application/json:
              next_page_token: '3'
              page_size: '2'
              total_records: '1'
              recordings:
                - id: test
                  caller_number: '4085552222'
                  caller_number_type: internal
                  caller_name: janedoe
                  callee_number: '4087778888'
                  callee_number_type: external
                  callee_name: johndoe
                  recording_type: OnDemand
                  owner:
                    type: user
                    id: '123'
                    extension_number: '43765674'
                    name: Tracy
                  site:
                    id: dfhg35273d
                    name: string
                  direction: inbound
                  duration: '5'
                  download_url: 'https://zoom.us/v2/phone/recording/download/6FHBshghfd3t7-45476zKrw'
                  date_time: '2020-11-03T14:31:41Z'
        '400':
          description: |-
            **HTTP Response Code:** `400`<br>
            The template name you entered already exists. Provide a new name for the template and try again.<br>

            **Error Code:** `300`<br>
            Validation failed. You provided an incorrect value for the template type. Provide a valid value and try again.
          schema: {}
        '401':
          description: |
            **HTTP Status Code:** `401`<br>

            **Error Code:** `124`<br>
            Account does not exist: {accountId}.
      summary: Get call recordings
      operationId: getPhoneRecordings
      tags:
        - Phone
      description: |+
        List [call recordings](https://support.zoom.us/hc/en-us/articles/360038521091-Accessing-and-sharing-call-recordings) of an account.<br>

        **Scopes:**<br>
        * `phone:read:admin` `phone:write:admin`

        **Prerequisties:** <br>
        * Pro or higher account with Zoom Phone license.
        * Account owner or admin privileges.

      security:
        - OAuth: []
      parameters:
        - in: query
          name: page_size
          type: integer
          description: 'The number of records returned within a single API call. The default is **30**, and the maximum is **100**.'
        - in: query
          name: next_page_token
          type: string
          description: The current page number of returned records.
        - in: query
          name: from
          type: string
          description: |
            Start date in **yyyy-mm-dd** format. The date range defined by the from and to parameters should only be one month as the report includes only one month worth of data at once.
        - in: query
          name: to
          type: string
          description: |+
            The End date in **yyyy-mm-dd** format.

        - in: query
          name: owner_type
          type: string
          description: |+
            Specify the owner type. The allowed values are `all`,  `user` or `callQueue`. The default is `all`.

          default: all
        - in: query
          name: recording_type
          type: string
          description: |
            Specify the recording type. The allowed values are `All`, `OnDemand`, or `Automatic`. The default is `All`.
          default: All
        - in: query
          name: site_id
          type: string
          description: The site ID. The default is `All sites`.
          default: All sites
  /phone/sip_trunk/trunks:
    get:
      responses:
        '200':
          description: |-
            **HTTP Status Codes**: `200`<br>
            OK.
          schema:
            type: object
            properties:
              next_page_token:
                type: string
                description: Used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is **15 minutes**.
              page_size:
                type: integer
                description: 'The number of records returned within a single API call. The default is **30**, and the maximum is **100**.'
                default: 30
              byoc_sip_trunk:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: The unique SIP Trunk ID.
                    name:
                      type: string
                      description: The display name of the SIP Trunk.
                    carrier:
                      type: string
                      description: Name of the carrier.
                    carrier_account:
                      type: string
                      description: The account associated to the carrier.
                    region:
                      type: string
                      description: The region of the carrier.
                    sbc_label:
                      type: string
                      description: The Session Border Controller (SBC) routing label.
          examples:
            application/json:
              next_page_token: ' '
              page_size: '30'
              byoc_sip_trunk:
                - id: con3t6gdt
                  name: Test 12
                  carrier: my_carrierr
                  carrier_account: dsgf63tt
                  region: US
                  sbc_label: abc-test
      summary: List BYOC SIP trunks
      description: |+
        List [BYOC SIP trunks](https://zoom.us/docs/doc/Zoom-Bring%20Your%20Own%20Carrier.pdf) that are assigned to an account.

        **Scopes**:<br>
        * `phone:write:admin` or `phone:master`<br>

        **Prerequisites**:<br>
        * Business or Enterprise Account
        <br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>

      operationId: listBYOCSIPTrunk
      tags:
        - Phone
      security:
        - OAuth: []
      parameters:
        - $ref: '#/parameters/NextPageToken'
        - $ref: '#/parameters/PageSize'
  '/accounts/{accountId}/phone/sip_trunk/trunks':
    post:
      responses:
        '201':
          description: |+
            **HTTP Status Code:** `201` **Created** <br>

          schema:
            type: object
            properties:
              sip_trunks:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Unique identifier of the SIP trunk of the sub account.
                    name:
                      type: string
                      description: Name of the SIP trunk.
                    carrier_account:
                      type: string
                      description: Carrier account.
          examples:
            application/json:
              sip_trunks:
                - id: '123111'
                  name: test1
                  carrier_account: '9866'
                - id: '123444'
                  name: test2
                  carrier_account: '986677'
        '404':
          description: |-
            **HTTP Status Code:** `404` <br>
            SIP Trunk does not exist: {sipTruniId}
      summary: Assign SIP trunks
      description: |+
        Using this API, a [master account](https://marketplace.zoom.us/docs/api-reference/master-account-apis) owner can assign SIP trunk(s) to a sub account.<br>

        **Scope**:<br>
        * `phone:master` <br>

        **Prerequisites**:<br>
        * Business or enterprise Account.<br>
        <br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>

      tags:
        - Phone
      operationId: postPhoneSIPTrunk
      security:
        - OAuth: []
      parameters:
        - in: path
          name: accountId
          type: string
          required: true
          description: Unique identifier for the account.
        - in: body
          name: body
          schema:
            type: object
            properties:
              sip_trunks:
                type: array
                maxItems: 3
                description: SIP trunk configurations.
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Unique identifier of the master account's SIP trunk.
                    name:
                      type: string
                      description: |
                        The name of the SIP Trunk. If this is not used, the master SIP Trunk name will be the default.
                      default: master SIP Trunk name
                    carrier_account:
                      type: string
                      description: The account associated to the carrier.
          x-examples:
            application/json:
              sip_trunks:
                - id: '1231'
                  name: test1
                  carrier_account: '9866'
                - id: '1234'
                  name: test2
                  carrier_account: '986677'
  '/accounts/{accountId}/phone/sip_trunk/trunks/{sipTrunkId}':
    patch:
      responses:
        '204':
          description: |
            **HTTP Response Code**: `204` **No Content**<br>
          schema: {}
        '404':
          description: |-
            **HTTP Status Code:** `404` <br>
            Sip trunk does not exist: {0}.
      summary: Update SIP trunk details
      description: |+
        Update details of a SIP trunk that is assigned to a sub account.<br>

        **Scope**:<br>
        * `phone:master` <br>

        **Prerequisites**:<br>
        Business or Enterprise Account.<br>
        <br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>

      operationId: updatePhoneSIPTrunk
      tags:
        - Phone
      security:
        - OAuth: []
      parameters:
        - in: path
          name: sipTrunkId
          type: string
          required: true
          description: Unique identifier of the SIP trunk.
        - in: path
          name: accountId
          type: string
          required: true
          description: Unique identifier of the sub account.
        - in: body
          name: body
          schema:
            type: object
            properties:
              name:
                type: string
                description: Name of the SIP Trunk.
              carrier_account:
                type: string
                description: Account associated with the carrier.
          x-examples:
            application/json:
              name: Test123
              carrier_account: re36fshedderit
  '/accounts/{accountId}/plans/base/status':
    patch:
      responses:
        '200':
          description: |-
            **Error Code:** `200`<br>
            Cannot cancel plan for a sub account which is under free plan.<br>
            You don’t have a major subscription yet.<br>
            You should first cancel all additional subscriptions.<br>
            Free trial and VIP accounts can not cancel plans of a sub account. Contact the Zoom Support team for details.<br>
            You don't have a plan subscription for ({planCode}) yet.
        '204':
          description: |-
            **HTTP Status Code:** `204`<br>
            Plan cancelled successfully.
          schema:
            type: object
            properties: {}
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>
            **Error Code:** `2100`<br>
            This sub account is paid by self.<br>
            You cannot make cancellation requests for a bundle plan. Contact the Zoom Support team for details.
        '404':
          description: |+
            **HTTP Status Code:** `404`<br>
            **Error Code:** `1001`<br>User does not exist. <br>
            **Error Code:** `2001`<br>This account does not exist or does not belong to this master account.


      summary: Cancel a base plan
      description: |-
        [Cancel a base plan](https://support.zoom.us/hc/en-us/articles/203634215-How-Do-I-Cancel-My-Subscription-) for a sub account.

        This API can only be used by master accounts that pay all billiing charges of their associated Pro or higher sub accounts. Zoom allows only [approved partners](https://marketplace.zoom.us/docs/api-reference/master-account-apis) to use master APIs and manage sub accounts' subscriptions. Email the partner programs team at **partner-success@zoom.us** for more details.<br><br>

        **Scopes**: `billing:master`<br>
        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>
        **Prerequisites:**<br>
        * The sub account must have a Pro or a higher plan.

      operationId: accountPlanBaseDelete
      tags:
        - Billing
      parameters:
        - in: path
          name: accountId
          type: string
          required: true
        - in: body
          name: body
          schema:
            type: object
            properties:
              action:
                type: string
                description: The action that needs to be taken for this sub account. Value must be set to "cancel".
              reason:
                type: integer
                description: 'The reason for the cancellation of plan. Reason options:<br>`1` - I am no longer working remote.<br>`2` - I had challenges getting the support I needed.<br>`3` - Features in the Basic Free Plan are sufficient.<br>`4` - The expense is too high.<br>`5` - I purchased the wrong product.<br> `6` - Paid purchase not needed right now, will repurchase in the future.'
                enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
              comment:
                type: string
                description: Additional comments about the cancellation decision.
            required:
              - action
          x-examples:
            application/json:
              action: cancel
              reason: 2
              comment: Amazing plan but I do not need it right now.
  '/accounts/{accountId}/plans/addons/status':
    patch:
      responses:
        '200':
          description: |-
            **Error Code:** `200`<br>
            You cannot cancel plan for a sub account that is under a free plan.<br>
            You cannot perform this action because you do not have a Zoom Phone subscription for this account.<br>
            Free trial and VIP accounts can not cancel plans of a sub account. Contact the Zoom Support team for details.<br>
            You don't have a plan subscription for ({planCode}) yet..
        '204':
          description: |-
            **HTTP Status Code:** `204`<br>
            Plan cancelled successfully.
          schema: {}
        '300':
          description: |-
            **Error Code:** `300`<br>
            Plan type is required.
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>
            **Error Code:** `2100`<br>
            This sub account is on self pay mode.<br>
            You cannot make cancellation requests for a bundle plan. Contact the Zoom Support team for details.
        '404':
          description: |+
            **HTTP Status Code:** `404`<br>
            **Error Code:** `1001`<br>
            User does not exist.<br>
            **Error Code:** `2001`<br>
            Account does not exist: {subAccountId}.

      summary: Cancel additional plans
      description: |-
        [Cancel additional plan](https://support.zoom.us/hc/en-us/articles/203634215-How-Do-I-Cancel-My-Subscription-) of a sub account. The cancellation does not provide refund for the current subscription. The service remains active for the current session.

        This API can only be used by master accounts that pay all billiing charges of their associated Pro or higher sub accounts. Zoom allows only [approved partners](https://marketplace.zoom.us/docs/api-reference/master-account-apis) to use master APIs and manage sub accounts' subscriptions. Email the partner programs team at **partner-success@zoom.us** for more details.<br><br>

        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>

        **Prerequisites:**<br>
        * Pro or a higher plan with master account option enabled.
        * The sub account must be a paid account.<br>
        **Scope:** `billing:master`<br>

      operationId: accountPlanAddonCancel
      tags:
        - Billing
      security:
        - OAuth: []
      parameters:
        - in: body
          name: body
          schema:
            type: object
            description: Account plan object
            properties:
              action:
                type: string
                description: The action that needs to be taken for this sub account. Value must be set to "cancel".
                enum:
                  - cancel
              type:
                type: string
                description: 'Plan [type](https://marketplace.zoom.us/docs/api-reference/other-references/plans).'
              reason:
                type: integer
                description: 'The reason for the cancellation of plan. Reason options:<br>`1` - I am no longer working remote.<br>`2` - I had challenges getting the support I needed.<br>`3` - Features in the Basic Free Plan are sufficient.<br>`4` - The expense is too high.<br>`5` - I purchased the wrong product.<br> `6` - Paid purchase not needed right now, will repurchase in the future.'
                enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
              comment:
                type: string
                description: Additional comments about the cancellation decision.
    parameters:
      - name: accountId
        in: path
        type: string
        required: true
  /report/activities:
    get:
      summary: Get sign In / sign out activity report
      description: |-
        Retrieve a list of sign in / sign out activity logs [report](https://support.zoom.us/hc/en-us/articles/201363213-Getting-Started-with-Reports) of users under a Zoom account.<br>
        **Prerequisites**<br>
        * Pro or higher plan.<br>
        **Scopes:** `report:read:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`
      operationId: reportSignInSignOutActivities
      tags:
        - Reports
      parameters:
        - in: query
          name: from
          type: string
          format: date
          description: 'Start date for which you would like to view the activity logs report. Using the `from` and `to` parameters, specify a monthly date range for the report as the API only provides one month worth of data in one request. The specified date range should fall within the last six months.'
        - in: query
          name: to
          type: string
          format: date
          description: End date up to which you would like to view the activity logs report.
        - in: query
          name: page_size
          type: integer
          description: The number of records to be returned within a single API call
        - in: query
          name: next_page_token
          type: string
          description: Next page token is used to paginate through large result sets
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Success
          schema:
            type: object
            description: Report object
            properties:
              from:
                type: string
                description: Start date from which you want the activity logs report to be generated.
              to:
                type: string
                description: End date until which you want the activity logs report to be generated
              page_size:
                type: string
                description: The number of records returned within a single API call.
              next_page_token:
                type: string
                description: Next page token is used to paginate through large result sets.
              activity_logs:
                type: array
                description: Array of activity logs.
                items:
                  type: object
                  properties:
                    email:
                      type: string
                      description: 'Email address of the user used for the activity. '
                    time:
                      type: string
                      description: 'Time during which the activity occurred. '
                      format: date-time
                    type:
                      type: string
                      description: 'The type of activity: <br>`Sign in`: Sign in activity by user.<br>`Sign out`: Sign out activity by user.'
                    ip_address:
                      type: string
                      description: The IP address of the user's device.
                    client_type:
                      type: string
                      description: The client interface type using which the activity was performed.
                    version:
                      type: string
                      description: Zoom client version of the user.
          examples:
            application/json: |-
              {
                          "email": "sfkjsldfhjdsf@dskjflhdsf.com",
                          "time": "2019-09-15T20:56:09Z",
                          "type": "Sign in",
                          "ip_address": "38.99.100.6",
                          "client_type": "Browser",
                          "version": "-"
                      },
                      {
                          "email": "dfdsfdfdf@gidfdfdl.com",
                          "time": "2019-09-15T19:13:41Z",
                          "type": "Sign in",
                          "ip_address": "38.99.100.6",
                          "client_type": "Browser",
                          "version": "-"
                      },
                      {
                          "email": "fdfdfdf@gfdgfdgdsfg.com",
                          "time": "2019-09-15T18:50:15Z",
                          "type": "Sign out",
                          "ip_address": "38.99.100.6",
                          "client_type": "Browser",
                          "version": "-"
                      }
      security:
        - OAuth: []
  '/groups/{groupId}/settings':
    get:
      responses:
        '200':
          description: |
            **Error Code**: `200` <br>
            Only available for paid account.

            **HTTP Status Code**: `200` <br>
            Group Settings Returned.
          schema:
            oneOf:
              - type: object
                properties:
                  schedule_meeting:
                    type: object
                    properties:
                      host_video:
                        type: boolean
                        description: Start meetings with host video on.
                      participant_video:
                        type: boolean
                        description: Start meetings with participant video on.
                      audio_type:
                        type: string
                        description: Determine how participants can join the audio portion of the meeting.
                      join_before_host:
                        type: boolean
                        description: Allow participants to join the meeting before the host arrives
                      force_pmi_jbh_password:
                        type: boolean
                        description: |+
                          If join before host option is enabled for a personal meeting, then enforce password requirement.


                          **This field will be deprecated in near future.** If you would like to enable this setting, we highly encourage you to use the `require_password_for_pmi_meetings` field.

                      pstn_password_protected:
                        type: boolean
                        description: Generate and send new passwords for newly scheduled or edited meetings.
                      mute_upon_entry:
                        type: boolean
                        description: Automatically mute all participants when they join the meeting.
                      upcoming_meeting_reminder:
                        type: boolean
                        description: Receive desktop notification for upcoming meetings.
                      require_password_for_scheduling_new_meetings:
                        type: boolean
                        description: 'This setting applies for regular meetings that do not use PMI. If enabled, a password will be generated while a host schedules a new meeting and participants will be required to enter the password before they can join the meeting.'
                      require_password_for_scheduled_meetings:
                        type: boolean
                        description: |
                          Require a password for meetings which have already been scheduled
                      require_password_for_instant_meetings:
                        type: boolean
                        description: 'If enabled, a random password will be generated on the user''s end who starts the instant meeting. Other participants will have to enter the password to join the meeting. If you use PMI for your instant meetings, this option will be disabled.'
                      require_password_for_pmi_meetings:
                        type: string
                        description: |-
                          Indicates whether a password is required for [PMI](https://support.zoom.us/hc/en-us/articles/203276937-Using-Personal-Meeting-ID-PMI-) meetings or not. The value can be one of the following:<br>
                          `none`: Do not require password for PMI meetings.<br>
                          `all`: Require participants to enter password for all PMI enabled meetings.<br> `jbh_only`: Require password only for meetings where the **"join before host"** setting is enabled.
                        enum:
                          - all
                          - jbh_only
                          - none
                      use_pmi_for_instant_meetings:
                        description: Indicates whether PMI is enabled for all instant meetings or not.
                        type: boolean
                      use_pmi_for_schedule_meetings:
                        type: boolean
                        description: Indicates whether PMI is enabled for all scheduled meetings or not.
                      embed_password_in_join_link:
                        description: |-
                          If the value is set to `true`, the meeting password will be encrypted and included in the join meeting link to allow participants to join with just one click without having to enter the password.

                        type: boolean
                      personal_meeting:
                        description: |+
                          Personal Meeting Setting.<br><br>
                          `true`: Indicates that the **"Enable Personal Meeting ID"** setting is turned on. Users can choose to use personal meeting ID for their meetings. <br><br>
                          `false`: Indicates that the **"Enable Personal Meeting ID"** setting is [turned off](https://support.zoom.us/hc/en-us/articles/201362843-Personal-meeting-ID-PMI-and-personal-link#h_aa0335c8-3b06-41bc-bc1f-a8b84ef17f2a). If this setting is disabled, meetings that were scheduled with PMI will be invalid. Scheduled meetings will need to be manually updated.
                          For Zoom Phone only:If a user has been assigned a desk phone, **"Elevate to Zoom Meeting"** on desk phone will be disabled.


                        type: boolean
                  in_meeting:
                    type: object
                    properties:
                      e2e_encryption:
                        type: boolean
                        description: Require that all meetings are encrypted using AES.
                      chat:
                        type: boolean
                        description: Allow meeting participants to send chat message visible to all participants.
                      private_chat:
                        type: boolean
                        description: 'Allow meeting participants to send a private 1:1 message to another participant.'
                      auto_saving_chat:
                        type: boolean
                        description: Automatically save all in-meeting chats.
                      entry_exit_chime:
                        type: string
                        description: Play sound when participants join or leave.
                      record_play_own_voice:
                        type: boolean
                        description: 'When each participant joins by telephone, allow the option to record and play their own voice as entry and exit chimes.'
                      feedback:
                        type: boolean
                        description: Enable users to provide feedback to Zoom at the end of the meeting.
                      post_meeting_feedback:
                        type: boolean
                        description: Display end-of-meeting experience feedback survey.
                      co_host:
                        type: boolean
                        description: Allow the host to add co-hosts. Co-hosts have the same in-meeting controls as the host.
                      polling:
                        type: boolean
                        description: Add 'Polls' to the meeting controls. This allows the host to survey the attendees.
                      attendee_on_hold:
                        type: boolean
                        default: false
                        description: |-
                          Allow host to put attendee on hold.

                          **This field has been deprecated and is no longer supported.**
                      show_meeting_control_toolbar:
                        type: boolean
                        description: Always show meeting controls during a meeting.
                      allow_show_zoom_windows:
                        type: boolean
                        description: Show Zoom windows during screen share.
                      annotation:
                        type: boolean
                        description: Allow participants to use annotation tools to add information to shared screens.
                      whiteboard:
                        type: boolean
                        description: Allow participants to share a whiteboard that includes annotation tools.
                      remote_control:
                        type: boolean
                        description: 'During screen sharing, allow the person who is sharing to let others control the shared content.'
                      non_verbal_feedback:
                        type: boolean
                        description: Allow participants in a meeting can provide nonverbal feedback and express opinions by clicking on icons in the Participants panel.
                      breakout_room:
                        type: boolean
                        description: 'Allow host to split meeting participants into separate, smaller rooms.'
                      remote_support:
                        type: boolean
                        description: 'Allow meeting host to provide 1:1 remote support to another participant.'
                      closed_caption:
                        type: boolean
                        description: Allow host to type closed captions or assign a participant/third party device to add closed captions.
                      far_end_camera_control:
                        type: boolean
                        description: Allow another user to take control of the camera during a meeting.
                      group_hd:
                        type: boolean
                        description: Enable higher quality video for host and participants. This will require more bandwidth.
                      virtual_background:
                        type: boolean
                        description: Enable virtual background.
                      virtual_background_settings:
                        type: object
                        description: Settings to manage virtual background.
                        properties:
                          enable:
                            type: boolean
                            description: Enable virtual background.
                          allow_videos:
                            type: boolean
                            description: Allow use of videos for virtual backgrounds.
                          allow_upload_custom:
                            type: boolean
                            description: Allow users to upload custom backgrounds.
                          files:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: string
                                  description: Unique identifier of the file.
                                name:
                                  type: string
                                  description: File name.
                                type:
                                  type: string
                                  description: File type.
                                is_default:
                                  type: boolean
                                  description: Indicates whether or not this file is the default virtual background file.
                                size:
                                  type: string
                                  description: File size.
                      alert_guest_join:
                        type: boolean
                        description: Allow participants who belong to your account to see that a guest (someone who does not belong to your account) is participating in the meeting/webinar.
                      auto_answer:
                        type: boolean
                        description: Enable users to see and add contacts to 'auto-answer group' in the contact list on chat. Any call from members of this group will be automatically answered.
                      sending_default_email_invites:
                        type: boolean
                        description: Allow users to invite participants by email only by default.
                      use_html_format_email:
                        type: boolean
                        description: Allow  HTML formatting instead of plain text for meeting invitations scheduled with the Outlook plugin.
                      stereo_audio:
                        type: boolean
                        description: Allow users to select stereo audio during a meeting.
                      original_audio:
                        type: boolean
                        description: Allow users to select original sound during a meeting.
                      show_device_list:
                        type: boolean
                        description: Show the list of H.323/SIP devices.
                      only_host_view_device_list:
                        type: boolean
                        description: Show the list of H.323/SIP devices only to the host.
                      screen_sharing:
                        type: boolean
                        description: Allow host and participants to share their screen or content during meetings.
                      who_can_share_screen:
                        type: string
                        description: |
                          Indicates who can share their screen or content during meetings. The value can be one of the following: <br>
                          `host`: Only host can share the screen.<br>
                          `all`: Both hosts and attendees can share their screen during meetings. For Webinar, the hosts and panelists can start screen sharing, but not the attendees.
                        enum:
                          - host
                          - all
                      who_can_share_screen_when_someone_is_sharing:
                        type: string
                        description: |
                          Indicates who is allowed to start sharing screen when someone else in the meeting is sharing their screen. The value can be one of the following:<br>
                          `host`: Only a host can share the screen when someone else is sharing.<br>
                          `all`: Anyone in the meeting is allowed to start sharing their screen when someone else is sharing. For Webinar, the hosts and panelists can start screen sharing, but not the attendees.
                        enum:
                          - host
                          - all
                      file_transfer:
                        type: boolean
                        description: 'Indicates whether [in-meeting file transfer](https://support.zoom.us/hc/en-us/articles/209605493-In-meeting-file-transfer) setting has been enabled for the users in the group or not.'
                      waiting_room:
                        type: boolean
                        description: Attendees cannot join a meeting until a host admits them individually from the waiting room.
                      show_browser_join_link:
                        type: boolean
                        description: Allow participants to join a meeting directly from their browser.
                      custom_data_center_regions:
                        type: boolean
                        description: 'If set to `true`, you can [select data center regions](https://support.zoom.us/hc/en-us/articles/360042411451-Selecting-data-center-regions-for-hosted-meetings-and-webinars) to be used by this group for hosting their real-time meeting and webinar traffic. These regions can be provided in the `data_center_regions` field. If set to `false`, the regions cannot be customized and the default regions will be used.'
                      data_center_regions:
                        type: array
                        description: |
                          If you have set the value of `custom_data_center_regions` to `true`, specify the data center regions that you would like to opt in to (country codes from among: ["EU", "HK", "AU", "IN", "LA", "TY", "CN", "US", "CA"]).
                        enum:
                          - EU
                          - HK
                          - AU
                          - IN
                          - TY
                          - CN
                          - US
                          - CA
                        items:
                          type: string
                      request_permission_to_unmute:
                        type: boolean
                        description: 'Indicates whether the [**Request permission to unmute participants**](https://support.zoom.us/hc/en-us/articles/203435537-Muting-and-unmuting-participants-in-a-meeting#h_01EGK4XFWS1SJGZ71MYGKF7260) option has been enabled for the group or not.'
                  email_notification:
                    type: object
                    properties:
                      cloud_recording_available_reminder:
                        type: boolean
                        description: Notify host when cloud recording is available.
                      jbh_reminder:
                        type: boolean
                        description: Notify host when participants join the meeting before them.
                      cancel_meeting_reminder:
                        type: boolean
                        description: Notify host and participants when the meeting is cancelled.
                      alternative_host_reminder:
                        type: boolean
                        description: Notify the alternative host who is set or removed.
                      schedule_for_host_reminder:
                        type: boolean
                        description: 'Notify the host there is a meeting is scheduled, rescheduled, or cancelled.'
                  recording:
                    type: object
                    properties:
                      local_recording:
                        type: boolean
                        description: Allow hosts and participants to record the meeting to a local file.
                      cloud_recording:
                        type: boolean
                        description: Allow hosts to record and save the meeting / webinar in the cloud.
                      record_speaker_view:
                        type: boolean
                        description: Record active speaker with shared screen.
                      record_gallery_view:
                        type: boolean
                        description: 'When someone is sharing their screen, active speaker will show on the top right corner of the shared screen.'
                      record_audio_file:
                        type: boolean
                        description: Record an audio only file.
                      save_chat_text:
                        type: boolean
                        description: Save chat messages from the meeting / webinar.
                      show_timestamp:
                        type: boolean
                        description: Add a timestamp to the recording.
                      recording_audio_transcript:
                        type: boolean
                        description: Automatically transcribe the audio of a meeting or webinar for cloud recordings.
                      auto_recording:
                        type: string
                        description: Record meetings automatically as they start.
                      cloud_recording_download:
                        type: boolean
                        description: Allow anyone with a link to the cloud recording to download.
                      cloud_recording_download_host:
                        type: boolean
                        description: Allow only the host with a link to the cloud recording to download.
                      account_user_access_recording:
                        type: boolean
                        description: Make cloud recordings accessible to account members only.
                      host_delete_cloud_recording:
                        type: boolean
                        description: 'Allow the host to delete the recordings. If this option is disabled, the recordings cannot be deleted by the host and only admin can delete them.'
                      prevent_host_access_recording:
                        type: boolean
                        description: |+
                          If set to `true`, meeting hosts cannot view their meeting cloud recordings. Only the admins who have recording management privilege can access them.

                      ip_address_access_control:
                        type: object
                        description: |
                          Setting to allow cloud recording access only from specific IP address ranges.
                        properties:
                          enable:
                            type: boolean
                            description: |+
                              If set to `true`, the cloud recordings of this account can only be accessed by the IP addresses defined in the `ip_addresses_or_ranges` property.

                          ip_addresses_or_ranges:
                            type: string
                            description: |+
                              IP addresses or ranges that have access to the cloud recordings. Separate multiple IP ranges with comma. Use n.n.n.n, n.n.n.n/n or n.n.n.n - n.n.n.n syntax where n is a number.

                              Example: `46.33.24.184, 48.99.100.2/25` or `200.181.108.17 - 220.181.108.157`

                  telephony:
                    type: object
                    properties:
                      third_party_audio:
                        type: boolean
                        description: Allow users to join the meeting using the existing 3rd party audio configuration.
                      audio_conference_info:
                        type: string
                        description: ''
                      telephony_regions:
                        type: object
                        description: Indicates where most of the participants call into or call from duriing a meeting.
                        properties:
                          selection_values:
                            type: array
                            description: Telephony regions selected by the account to indicate where most of the participants call into or call from during a meeting.
                            items:
                              type: string
                  profile:
                    $ref: '#/definitions/Profile'
              - $ref: '#/definitions/GroupUserSettingsAuthentication'
              - $ref: '#/definitions/MeetingSecuritySettings'
          examples:
            application/json:
              schedule_meeting:
                host_video: true
                participant_video: true
                audio_type: both
                join_before_host: true
                force_pmi_jbh_password: true
                require_password_for_scheduling_new_meetings: true
                require_password_for_scheduled_meetings: true
                require_password_for_instant_meetings: false
                require_password_for_pmi_meetings: all
                pstn_password_protected: true
                mute_upon_entry: true
                upcoming_meeting_reminder: true
              in_meeting:
                e2e_encryption: true
                chat: true
                private_chat: true
                auto_saving_chat: true
                entry_exit_chime: all
                record_play_own_voice: false
                feedback: true
                post_meeting_feedback: true
                co_host: true
                polling: true
                attendee_on_hold: true
                show_meeting_control_toolbar: true
                allow_show_zoom_windows: true
                annotation: true
                whiteboard: true
                remote_control: true
                non_verbal_feedback: true
                breakout_room: false
                remote_support: true
                closed_caption: true
                far_end_camera_control: true
                group_hd: true
                virtual_background: true
                alert_guest_join: true
                auto_answer: true
                sending_default_email_invites: true
                use_html_format_email: true
                stereo_audio: true
                original_audio: true
                show_device_list: false
                only_host_view_device_list: false
                screen_sharing: true
                waiting_room: true
                show_browser_join_link: true
              email_notification:
                cloud_recording_available_reminder: true
                jbh_reminder: true
                cancel_meeting_reminder: true
                alternative_host_reminder: true
                schedule_for_host_reminder: true
              recording:
                local_recording: true
                cloud_recording: true
                record_speaker_view: true
                record_gallery_view: false
                record_audio_file: true
                save_chat_text: true
                show_timestamp: false
                recording_audio_transcript: false
                auto_recording: none
                cloud_recording_download: true
                cloud_recording_download_host: true
                account_user_access_recording: false
                host_delete_cloud_recording: true
              telephony:
                third_party_audio: true
                audio_conference_info: '1234656'
        '404':
          description: |-
            **HTTP Status Code:** `404` <br>
            **Error Code:** `4130` <br>
            Group does not exist: {groupId}.
      summary: Get a group's settings
      operationId: getGroupSettings
      tags:
        - Groups
      description: |-
        Get settings for a [group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-).
        **Prerequisite**: Pro, Business, or Education account<br>
        **Scopes**: `group:read:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      security:
        - OAuth: []
      parameters:
        - in: query
          name: option
          type: string
          enum:
            - meeting_authentication
            - recording_authentication
          allowEmptyValue: true
          description: |-
            `meeting_authentication`: Use this query parameter to view [meeting authentication configuration](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) applied on the group.<br>`recording_authentication`: Use this query parameter to view [recording authentication configuration](https://support.zoom.us/hc/en-us/articles/360037756671-Authentication-Profiles-for-Cloud-Recordings) applied on the group.<br>
            `meeting_security`: Use this query parameter to view meeting security settings applied on the group.<br>
    parameters:
      - name: groupId
        in: path
        type: string
        required: true
      - in: query
        name: custom_query_fields
        type: string
        description: |-
          Provide the name of the field by which you would like to filter the response. For example, if you provide "host_video" as the value of this field, you will get a response similar to the following:<br>
          {
              "schedule_meeting": {
                  "host_video": false
              }
          }
          <br>You can provide multiple values by separating them with commas(example: "host_video,participant_video”).
    patch:
      responses:
        '200':
          description: |-
            **Error code:** `200`<br>
            Only available for Paid account, {accountId}
        '204':
          description: |-
            **HTTP Status Code:** `204`<br>
            Settings updated successfully.
          schema: {}
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            **Error Code:** `4130`<br>
            Group does not exist: {groupId}.
      description: |-
        Update settings for a [group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-).<p style="background-color:#FEEFB3; color:#9F6000"><br>Note:</b> The `force_pmi_jbh_password` field under meeting settings is planned to be deprecated on September 22, 2019. This field will be replaced by another field that will provide the same functionality.</p>
        **Prerequisite**: Pro, Business, or Education account<br>
        **Scopes**: `group:write:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      summary: Update a group's settings
      operationId: updateGroupSettings
      tags:
        - Groups
      parameters:
        - in: path
          name: groupId
          type: string
          required: true
          description: Id of the group.
        - in: body
          name: body
          schema:
            oneOf:
              - type: object
                properties:
                  schedule_meeting:
                    type: object
                    properties:
                      host_video:
                        type: boolean
                        description: Start meetings with host video on.
                      participant_video:
                        type: boolean
                        description: Start meetings with participant video on.
                      audio_type:
                        type: string
                        description: Determine how participants can join the audio portion of the meeting.
                      join_before_host:
                        type: boolean
                        description: Allow participants to join the meeting before the host arrives
                      require_password_for_all_meetings:
                        type: boolean
                        description: Require password from all participants before joining a meeting.
                      force_pmi_jbh_password:
                        type: boolean
                        description: 'If join before host option is enabled for a personal meeting, then enforce password requirement.'
                      require_password_for_scheduling_new_meetings:
                        type: boolean
                        description: 'This setting applies for regular meetings that do not use PMI. If enabled, a password will be generated while a host schedules a new meeting and participants will be required to enter the password before they can join the meeting. '
                      require_password_for_scheduled_meetings:
                        type: boolean
                        description: |
                          Require a password for meetings which have already been scheduled
                      require_password_for_instant_meetings:
                        type: boolean
                        description: 'If enabled, a random password will be generated on the user''s end who starts the instant meeting. Other participants will have to enter the password to join the meeting. If you use PMI for your instant meetings, this option will be disabled.'
                      require_password_for_pmi_meetings:
                        type: string
                        description: |-
                          Indicates whether a password is required for [PMI](https://support.zoom.us/hc/en-us/articles/203276937-Using-Personal-Meeting-ID-PMI-) meetings or not. The value can be one of the following:<br>
                          `none`: Do not require password for PMI meetings.<br>
                          `all`: Require participants to enter password for all PMI enabled meetings.<br> `jbh_only`: Require password only for meetings where the **"join before host"** setting is enabled.
                        enum:
                          - all
                          - jbh_only
                          - none
                      pstn_password_protected:
                        type: boolean
                        description: Generate and send new passwords for newly scheduled or edited meetings.
                      mute_upon_entry:
                        type: boolean
                        description: Automatically mute all participants when they join the meeting.
                      upcoming_meeting_reminder:
                        type: boolean
                        description: Receive desktop notification for upcoming meetings.
                      embed_password_in_join_link:
                        description: |-
                          If the value is set to `true`, the meeting password will be encrypted and included in the join meeting link to allow participants to join with just one click without having to enter the password.

                        type: boolean
                  in_meeting:
                    type: object
                    properties:
                      e2e_encryption:
                        type: boolean
                        description: Require that all meetings are encrypted using AES.
                      chat:
                        type: boolean
                        description: Allow meeting participants to send chat message visible to all participants.
                      private_chat:
                        type: boolean
                        description: 'Allow meeting participants to send a private 1:1 message to another participant.'
                      auto_saving_chat:
                        type: boolean
                        description: Automatically save all in-meeting chats.
                      entry_exit_chime:
                        type: string
                        description: Play sound when participants join or leave.
                      record_play_own_voice:
                        type: boolean
                        description: 'When each participant joins by telephone, allow the option to record and play their own voice as entry and exit chimes.'
                      feedback:
                        type: boolean
                        description: Enable users to provide feedback to Zoom at the end of the meeting.
                      post_meeting_feedback:
                        type: boolean
                        description: Display end-of-meeting experience feedback survey.
                      co_host:
                        type: boolean
                        description: Allow the host to add co-hosts. Co-hosts have the same in-meeting controls as the host.
                      polling:
                        type: boolean
                        description: Add 'Polls' to the meeting controls. This allows the host to survey the attendees.
                      attendee_on_hold:
                        type: boolean
                        default: false
                        description: |-
                          Allow host to put attendee on hold.

                          **This field has been deprecated and is no longer supported.**
                      show_meeting_control_toolbar:
                        type: boolean
                        description: Always show meeting controls during a meeting.
                      allow_show_zoom_windows:
                        type: boolean
                        description: Show Zoom windows during screen share.
                      annotation:
                        type: boolean
                        description: Allow participants to use annotation tools to add information to shared screens.
                      whiteboard:
                        type: boolean
                        description: Allow participants to share a whiteboard that includes annotation tools.
                      remote_control:
                        type: boolean
                        description: 'During screen sharing, allow the person who is sharing to let others control the shared content.'
                      non_verbal_feedback:
                        type: boolean
                        description: Allow participants in a meeting can provide nonverbal feedback and express opinions by clicking on icons in the Participants panel.
                      breakout_room:
                        type: boolean
                        description: 'Allow host to split meeting participants into separate, smaller rooms.'
                      remote_support:
                        type: boolean
                        description: 'Allow meeting host to provide 1:1 remote support to another participant.'
                      closed_caption:
                        type: boolean
                        description: Allow host to type closed captions or assign a participant/third party device to add closed captions.
                      far_end_camera_control:
                        type: boolean
                        description: Allow another user to take control of the camera during a meeting.
                      group_hd:
                        type: boolean
                        description: Enable higher quality video for host and participants. This will require more bandwidth.
                      virtual_background:
                        type: boolean
                        description: Enable virtual background.
                      alert_guest_join:
                        type: boolean
                        description: Allow participants who belong to your account to see that a guest (someone who does not belong to your account) is participating in the meeting/webinar.
                      auto_answer:
                        type: boolean
                        description: Enable users to see and add contacts to 'auto-answer group' in the contact list on chat. Any call from members of this group will be automatically answered.
                      sending_default_email_invites:
                        type: boolean
                        description: Allow users to invite participants by email only by default.
                      use_html_format_email:
                        type: boolean
                        description: Allow  HTML formatting instead of plain text for meeting invitations scheduled with the Outlook plugin.
                      stereo_audio:
                        type: boolean
                        description: Allow users to select stereo audio during a meeting.
                      original_audio:
                        type: boolean
                        description: Allow users to select original sound during a meeting.
                      show_device_list:
                        type: boolean
                        description: Show the list of H.323/SIP devices.
                      only_host_view_device_list:
                        type: boolean
                        description: Show the list of H.323/SIP devices only to the host.
                      screen_sharing:
                        type: boolean
                        description: Allow host and participants to share their screen or content during meetings.
                      who_can_share_screen:
                        type: string
                        description: |
                          Indicates who can share their screen or content during meetings. The value can be one of the following: <br>
                          `host`: Only host can share the screen.<br>
                          `all`: Both hosts and attendees can share their screen during meetings. For Webinar, the hosts and panelists can start screen sharing, but not the attendees.
                        enum:
                          - host
                          - all
                      who_can_share_screen_when_someone_is_sharing:
                        type: string
                        description: |
                          Indicates who is allowed to start sharing screen when someone else in the meeting is sharing their screen. The value can be one of the following:<br>
                          `host`: Only a host can share the screen when someone else is sharing.<br>
                          `all`: Anyone in the meeting is allowed to start sharing their screen when someone else is sharing. For Webinar, the hosts and panelists can start screen sharing, but not the attendees.
                        enum:
                          - host
                          - all
                      waiting_room:
                        type: boolean
                        description: Attendees cannot join a meeting until a host admits them individually from the waiting room.
                      show_browser_join_link:
                        type: boolean
                        description: Allow participants to join a meeting directly from their browser.
                      file_transfer:
                        type: boolean
                        description: 'Indicates whether [in-meeting file transfer](https://support.zoom.us/hc/en-us/articles/209605493-In-meeting-file-transfer) setting has been enabled for the users in the group or not.'
                      custom_data_center_regions:
                        type: boolean
                        description: 'If set to `true`, you can [select data center regions](https://support.zoom.us/hc/en-us/articles/360042411451-Selecting-data-center-regions-for-hosted-meetings-and-webinars) to be used by this group for hosting their real-time meeting and webinar traffic. These regions can be provided in the `data_center_regions` field. If set to `false`, the regions cannot be customized and the default regions will be used.'
                      data_center_regions:
                        type: array
                        description: |
                          If you have set the value of `custom_data_center_regions` to `true`, specify the data center regions that you would like to opt in to (country codes from among: ["EU", "HK", "AU", "IN", "LA", "TY", "CN", "US", "CA"]).
                        enum:
                          - EU
                          - HK
                          - AU
                          - IN
                          - TY
                          - CN
                          - US
                          - CA
                        items:
                          type: string
                      request_permission_to_unmute:
                        type: boolean
                        description: 'Indicate whether the [**Request permission to unmute participants**](https://support.zoom.us/hc/en-us/articles/203435537-Muting-and-unmuting-participants-in-a-meeting#h_01EGK4XFWS1SJGZ71MYGKF7260) option should be enabled for the group or not.'
                  email_notification:
                    type: object
                    properties:
                      cloud_recording_available_reminder:
                        type: boolean
                        description: Notify host when cloud recording is available.
                      jbh_reminder:
                        type: boolean
                        description: Notify host when participants join the meeting before them.
                      cancel_meeting_reminder:
                        type: boolean
                        description: Notify host and participants when the meeting is cancelled.
                      alternative_host_reminder:
                        type: boolean
                        description: Notify the alternative host who is set or removed.
                      schedule_for_host_reminder:
                        type: boolean
                        description: 'Notify the host there is a meeting is scheduled, rescheduled, or cancelled.'
                  recording:
                    type: object
                    properties:
                      local_recording:
                        type: boolean
                        description: Allow hosts and participants to record the meeting to a local file.
                      cloud_recording:
                        type: boolean
                        description: Allow hosts to record and save the meeting / webinar in the cloud.
                      record_speaker_view:
                        type: boolean
                        description: Record active speaker with shared screen.
                      record_gallery_view:
                        type: boolean
                        description: 'When someone is sharing their screen, active speaker will show on the top right corner of the shared screen.'
                      record_audio_file:
                        type: boolean
                        description: Record an audio only file.
                      save_chat_text:
                        type: boolean
                        description: Save chat messages from the meeting / webinar.
                      show_timestamp:
                        type: boolean
                        description: Add a timestamp to the recording.
                      recording_audio_transcript:
                        type: boolean
                        description: Automatically transcribe the audio of a meeting or webinar for cloud recordings.
                      auto_recording:
                        type: string
                        description: Record meetings automatically as they start.
                      cloud_recording_download:
                        type: boolean
                        description: Allow anyone with a link to the cloud recording to download.
                      cloud_recording_download_host:
                        type: boolean
                        description: Allow only the host with a link to the cloud recording to download.
                      account_user_access_recording:
                        type: boolean
                        description: Make cloud recordings accessible to account members only.
                      host_delete_cloud_recording:
                        type: boolean
                        description: 'Allow the host to delete the recordings. If this option is disabled, the recordings cannot be deleted by the host and only admin can delete them.'
                      prevent_host_access_recording:
                        type: boolean
                        description: |+
                          If set to `true`, meeting hosts cannot view their meeting cloud recordings. Only the admins who have recording management privilege can access them.

                      ip_address_access_control:
                        type: object
                        description: |
                          Setting to allow cloud recording access only from specific IP address ranges.
                        properties:
                          enable:
                            type: boolean
                            description: |+
                              If set to `true`, the cloud recordings of this account can only be accessed by the IP addresses defined in the `ip_addresses_or_ranges` property.

                          ip_addresses_or_ranges:
                            type: string
                            description: |+
                              IP addresses or ranges that have access to the cloud recordings. Separate multiple IP ranges with comma. Use n.n.n.n, n.n.n.n/n or n.n.n.n - n.n.n.n syntax where n is a number.

                              Example: `46.33.24.184, 48.99.100.2/25` or `200.181.108.17 - 220.181.108.157`

                  telephony:
                    type: object
                    properties:
                      third_party_audio:
                        type: boolean
                        description: Allow users to join the meeting using the existing 3rd party audio configuration.
                      audio_conference_info:
                        type: string
                        description: ''
                  profile:
                    $ref: '#/definitions/Profile'
              - $ref: '#/definitions/GroupUserSettingsAuthenticationUpdate'
              - $ref: '#/definitions/MeetingSecuritySettings'
          x-examples:
            application/json:
              schedule_meeting:
                host_video: true
                participant_video: true
                audio_type: both
                join_before_host: true
                require_password_for_all_meetings: false
                force_pmi_jbh_password: true
                require_password_for_scheduling_new_meetings: true
                require_password_for_scheduled_meetings: true
                require_password_for_instant_meetings: false
                require_password_for_pmi_meetings: all
                pstn_password_protected: true
                mute_upon_entry: true
                upcoming_meeting_reminder: true
              in_meeting:
                e2e_encryption: true
                chat: true
                private_chat: true
                auto_saving_chat: true
                entry_exit_chime: all
                record_play_own_voice: false
                feedback: true
                post_meeting_feedback: true
                co_host: true
                polling: true
                attendee_on_hold: true
                show_meeting_control_toolbar: true
                allow_show_zoom_windows: true
                annotation: true
                whiteboard: true
                remote_control: true
                non_verbal_feedback: true
                breakout_room: false
                remote_support: true
                closed_caption: true
                far_end_camera_control: true
                group_hd: true
                virtual_background: true
                alert_guest_join: true
                auto_answer: true
                sending_default_email_invites: true
                use_html_format_email: true
                stereo_audio: true
                original_audio: true
                show_device_list: false
                only_host_view_device_list: false
                screen_sharing: true
                waiting_room: true
                show_browser_join_link: true
              email_notification:
                cloud_recording_available_reminder: true
                jbh_reminder: true
                cancel_meeting_reminder: true
                alternative_host_reminder: true
                schedule_for_host_reminder: true
              recording:
                local_recording: true
                cloud_recording: true
                record_speaker_view: true
                record_gallery_view: false
                record_audio_file: true
                save_chat_text: true
                show_timestamp: false
                recording_audio_transcript: false
                auto_recording: none
                cloud_recording_download: true
                cloud_recording_download_host: true
                account_user_access_recording: false
                host_delete_cloud_recording: true
              telephony:
                third_party_audio: true
                audio_conference_info: '1234656'
        - in: query
          name: option
          type: string
          enum:
            - meeting_authentication
            - recording_authentication
            - meeting_security
          allowEmptyValue: true
  '/groups/{groupId}/lock_settings':
    get:
      responses:
        '200':
          description: |
            **Error Code:** `200`<br>
            Only available for paid account.

            **Status Code:** `200`<br>
            Locked settings of group returned.
          schema:
            oneOf:
              - type: object
                properties:
                  schedule_meeting:
                    type: object
                    properties:
                      host_video:
                        type: boolean
                        description: Start meetings with host video on.
                      participant_video:
                        type: boolean
                        description: Start meetings with participant video on.
                      audio_type:
                        type: boolean
                        description: Determine how participants can join the audio portion of the meeting.
                      join_before_host:
                        type: boolean
                        description: Allow participants to join the meeting before the host arrives
                      force_pmi_jbh_password:
                        type: boolean
                        description: 'If join before host option is enabled for a personal meeting, then enforce password requirement.'
                      require_password_for_scheduling_new_meetings:
                        type: boolean
                        description: 'This setting applies for regular meetings that do not use PMI. If enabled, a password will be generated while a host schedules a new meeting and participants will be required to enter the password before they can join the meeting.'
                      require_password_for_instant_meetings:
                        type: boolean
                        description: 'Require password for instant meetings. If you use PMI for your instant meetings, this option will be disabled.'
                      require_password_for_pmi_meetings:
                        description: Require participants to enter password for PMI meetings.
                        type: boolean
                      pstn_password_protected:
                        type: boolean
                        description: Generate and send new passwords for newly scheduled or edited meetings.
                      mute_upon_entry:
                        type: boolean
                        description: Automatically mute all participants when they join the meeting.
                      upcoming_meeting_reminder:
                        type: boolean
                        description: Receive desktop notification for upcoming meetings.
                      meeting_authentication:
                        type: boolean
                        description: Only authenticated users can join meetings
                      embed_password_in_join_link:
                        description: |-
                          If the value is set to `true`, the meeting password will be encrypted and included in the join meeting link to allow participants to join with just one click without having to enter the password.

                        type: boolean
                  in_meeting:
                    type: object
                    properties:
                      e2e_encryption:
                        type: boolean
                        description: Require that all meetings are encrypted using AES.
                      chat:
                        type: boolean
                        description: Allow meeting participants to send chat message visible to all participants.
                      private_chat:
                        type: boolean
                        description: 'Allow meeting participants to send a private 1:1 message to another participant.'
                      auto_saving_chat:
                        type: boolean
                        description: Automatically save all in-meeting chats.
                      entry_exit_chime:
                        type: string
                        description: Play sound when participants join or leave.
                      feedback:
                        type: boolean
                        description: Enable users to provide feedback to Zoom at the end of the meeting.
                      post_meeting_feedback:
                        type: boolean
                        description: Display end-of-meeting experience feedback survey.
                      co_host:
                        type: boolean
                        description: Allow the host to add co-hosts. Co-hosts have the same in-meeting controls as the host.
                      polling:
                        type: boolean
                        description: Add 'Polls' to the meeting controls. This allows the host to survey the attendees.
                      attendee_on_hold:
                        type: boolean
                        default: false
                        description: |-
                          Allow host to put attendee on hold.

                          **This field has been deprecated and is no longer supported.**
                      show_meeting_control_toolbar:
                        type: boolean
                        description: Always show meeting controls during a meeting.
                      allow_show_zoom_windows:
                        type: boolean
                        description: Show Zoom windows during screen share.
                      annotation:
                        type: boolean
                        description: Allow participants to use annotation tools to add information to shared screens.
                      whiteboard:
                        type: boolean
                        description: Allow participants to share a whiteboard that includes annotation tools.
                      remote_control:
                        type: boolean
                        description: 'During screen sharing, allow the person who is sharing to let others control the shared content.'
                      non_verbal_feedback:
                        type: boolean
                        description: Allow participants in a meeting can provide nonverbal feedback and express opinions by clicking on icons in the Participants panel.
                      breakout_room:
                        type: boolean
                        description: 'Allow host to split meeting participants into separate, smaller rooms.'
                      remote_support:
                        type: boolean
                        description: 'Allow meeting host to provide 1:1 remote support to another participant.'
                      closed_caption:
                        type: boolean
                        description: Allow host to type closed captions or assign a participant/third party device to add closed captions.
                      far_end_camera_control:
                        type: boolean
                        description: Allow another user to take control of the camera during a meeting.
                      group_hd:
                        type: boolean
                        description: Enable higher quality video for host and participants. This will require more bandwidth.
                      virtual_background:
                        type: boolean
                        description: Enable virtual background.
                      alert_guest_join:
                        type: boolean
                        description: Allow participants who belong to your account to see that a guest (someone who does not belong to your account) is participating in the meeting/webinar.
                      auto_answer:
                        type: boolean
                        description: Enable users to see and add contacts to 'auto-answer group' in the contact list on chat. Any call from members of this group will be automatically answered.
                      sending_default_email_invites:
                        type: boolean
                        description: Allow users to invite participants by email only by default.
                      use_html_format_email:
                        type: boolean
                        description: Allow  HTML formatting instead of plain text for meeting invitations scheduled with the Outlook plugin.
                      stereo_audio:
                        type: boolean
                        description: Allow users to select stereo audio during a meeting.
                      original_audio:
                        type: boolean
                        description: Allow users to select original sound during a meeting.
                      screen_sharing:
                        type: boolean
                        description: Allow host and participants to share their screen or content during meetings.
                      waiting_room:
                        type: boolean
                        description: Attendees cannot join a meeting until a host admits them individually from the waiting room.
                      show_browser_join_link:
                        type: boolean
                        description: Allow participants to join a meeting directly from their browser.
                      custom_data_center_regions:
                        type: boolean
                        description: 'Displays whether or not custom [data center regions](https://support.zoom.us/hc/en-us/articles/360042411451-Selecting-data-center-regions-for-hosted-meetings-and-webinars) have been selected for meetings/webinars hosted by this group.'
                      file_transfer:
                        type: boolean
                        description: 'Indicates whether [in-meeting file transfer](https://support.zoom.us/hc/en-us/articles/209605493-In-meeting-file-transfer) setting has been enabled for the users in the group or not.'
                      request_permission_to_unmute:
                        type: boolean
                        description: 'Indicates whether the [**Request permission to unmute participants**](https://support.zoom.us/hc/en-us/articles/203435537-Muting-and-unmuting-participants-in-a-meeting#h_01EGK4XFWS1SJGZ71MYGKF7260) option has been enabled and locked for the group or not.'
                  email_notification:
                    type: object
                    properties:
                      cloud_recording_available_reminder:
                        type: boolean
                        description: Notify host when cloud recording is available.
                      jbh_reminder:
                        type: boolean
                        description: Notify host when participants join the meeting before them.
                      cancel_meeting_reminder:
                        type: boolean
                        description: Notify host and participants when the meeting is cancelled.
                      alternative_host_reminder:
                        type: boolean
                        description: Notify the alternative host who is set or removed.
                      schedule_for_host_reminder:
                        type: boolean
                        description: 'Notify the host there is a meeting is scheduled, rescheduled, or cancelled.'
                  recording:
                    type: object
                    properties:
                      local_recording:
                        type: boolean
                        description: Allow hosts and participants to record the meeting to a local file.
                      cloud_recording:
                        type: boolean
                        description: Allow hosts to record and save the meeting / webinar in the cloud.
                      auto_recording:
                        type: string
                        description: Record meetings automatically as they start.
                      cloud_recording_download:
                        type: boolean
                        description: Allow anyone with a link to the cloud recording to download.
                      account_user_access_recording:
                        type: boolean
                        description: Make cloud recordings accessible to account members only.
                      host_delete_cloud_recording:
                        type: boolean
                        description: 'Allow the host to delete the recordings. If this option is disabled, the recordings cannot be deleted by the host and only admin can delete them.'
                      auto_delete_cmr:
                        type: boolean
                        description: Allow Zoom to automatically delete recordings permanently after a specified number of days.
                      recording_authentication:
                        type: boolean
                        description: Only authenticated users can view cloud recordings
                      prevent_host_access_recording:
                        type: boolean
                        description: |+
                          If set to `true`, meeting hosts cannot view their meeting cloud recordings. Only the admins who have recording management privilege can access them.

                      ip_address_access_control:
                        type: object
                        description: |
                          Setting to allow cloud recording access only from specific IP address ranges.
                        properties:
                          enable:
                            type: boolean
                            description: |+
                              If set to `true`, the cloud recordings of this account can only be accessed by the IP addresses defined in the `ip_addresses_or_ranges` property.

                          ip_addresses_or_ranges:
                            type: string
                            description: |+
                              IP addresses or ranges that have access to the cloud recordings. Separate multiple IP ranges with comma. Use n.n.n.n, n.n.n.n/n or n.n.n.n - n.n.n.n syntax where n is a number.

                              Example: `46.33.24.184, 48.99.100.2/25` or `200.181.108.17 - 220.181.108.157`

                  telephony:
                    type: object
                    properties:
                      third_party_audio:
                        type: boolean
                        description: Allow users to join the meeting using the existing 3rd party audio configuration.
                      telephony_regions:
                        type: boolean
              - $ref: '#/definitions/MeetingSecuritySettings'
          examples:
            application/json:
              schedule_meeting:
                host_video: true
                participant_video: true
                audio_type: true
                join_before_host: true
                force_pmi_jbh_password: true
                require_password_for_scheduling_new_meetings: true
                require_password_for_instant_meetings: false
                require_password_for_pmi_meetings: true
                pstn_password_protected: true
                mute_upon_entry: true
                upcoming_meeting_reminder: true
              in_meeting:
                e2e_encryption: true
                chat: true
                private_chat: true
                auto_saving_chat: true
                entry_exit_chime: false
                feedback: true
                post_meeting_feedback: true
                co_host: true
                polling: true
                attendee_on_hold: true
                show_meeting_control_toolbar: true
                allow_show_zoom_windows: true
                annotation: true
                whiteboard: true
                remote_control: true
                non_verbal_feedback: true
                breakout_room: true
                remote_support: true
                closed_caption: true
                far_end_camera_control: true
                group_hd: true
                virtual_background: true
                alert_guest_join: true
                auto_answer: true
                sending_default_email_invites: true
                use_html_format_email: true
                stereo_audio: true
                original_audio: true
                screen_sharing: true
                waiting_room: true
                show_browser_join_link: true
              email_notification:
                cloud_recording_available_reminder: true
                jbh_reminder: true
                cancel_meeting_reminder: true
                alternative_host_reminder: true
                schedule_for_host_reminder: true
              recording:
                local_recording: false
                cloud_recording: false
                auto_recording: false
                cloud_recording_download: false
                account_user_access_recording: false
                host_delete_cloud_recording: false
                auto_delete_cmr: false
              telephony:
                third_party_audio: false
        '404':
          description: |-
            **Status Code:** `404`<br>
            Not found.<br>
            **Error Code:** `4130`<br>
            Group does not exist: {groupId}
      summary: Get locked settings
      description: |-
        Retrieve a [group's](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-) locked settings. If you lock a setting, the group members will not be able to modify it individually. <p style="background-color:#FEEFB3; color:#9F6000"><br>Note:</b> The `force_pmi_jbh_password` field under meeting settings is planned to be deprecated on September 22, 2019. This field will be replaced by another field that will provide the same functionality.</p>

        **Prerequisite**: Pro, Business, or Education account<br>
        **Scopes**: `group:read:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      operationId: getGroupLockSettings
      tags:
        - Groups
      security:
        - OAuth: []
      parameters:
        - in: path
          name: groupId
          type: string
          required: true
          description: Id of the group.
        - in: query
          name: option
          type: string
          description: Specify `meeting_security` as the value of this field if you would like to view security settings applied on a meeting hosted by the users in this group.
    parameters:
      - name: groupId
        in: path
        type: string
        required: true
      - in: query
        name: custom_query_fields
        type: string
        description: |-
          Provide the name of the field by which you would like to filter the response. For example, if you provide "host_video" as the value of this field, you will get a response similar to the following:<br>
          {
              "schedule_meeting": {
                  "host_video": false
              }
          }
          <br>You can provide multiple values by separating them with commas(example: "host_video,participant_video”).
    patch:
      responses:
        '204':
          description: |-
            **Status Code:** `204`<br>
            Group's locked settings updated.
          schema: {}
        '400':
          description: |
            **HTTP Status Code:** `400` **Bad Request**<br>
            **Error Code:** `200`<br>
            Only available for paid account.
          examples: {}
        '404':
          description: |
            **Status Code:** `404`<br>
            Not found.<br>
            **Error Code:** `4130`<br>
            This group does not exist.
      summary: Update locked settings
      operationId: groupLockedSettings
      tags:
        - Groups
      parameters:
        - in: body
          name: body
          schema:
            oneOf:
              - type: object
                properties:
                  schedule_meeting:
                    type: object
                    properties:
                      host_video:
                        type: boolean
                        description: Start meetings with host video on.
                      participant_video:
                        type: boolean
                        description: Start meetings with participant video on.
                      audio_type:
                        type: boolean
                        description: Determine how participants can join the audio portion of the meeting.
                      join_before_host:
                        type: boolean
                        description: Allow participants to join the meeting before the host arrives
                      force_pmi_jbh_password:
                        type: boolean
                        description: 'If join before host option is enabled for a personal meeting, then enforce password requirement.'
                      require_password_for_scheduling_new_meetings:
                        type: boolean
                        description: 'This setting applies for regular meetings that do not use PMI. If enabled, a password will be generated while a host schedules a new meeting and participants will be required to enter the password before they can join the meeting.'
                      require_password_for_instant_meetings:
                        type: boolean
                        description: 'Require password for instant meetings. If you use PMI for your instant meetings, this option will be disabled.'
                      require_password_for_pmi_meetings:
                        description: Require participants to enter password for PMI meetings.
                        type: boolean
                      pstn_password_protected:
                        type: boolean
                        description: Generate and send new passwords for newly scheduled or edited meetings.
                      mute_upon_entry:
                        type: boolean
                        description: Automatically mute all participants when they join the meeting.
                      upcoming_meeting_reminder:
                        type: boolean
                        description: Receive desktop notification for upcoming meetings.
                      meeting_authentication:
                        type: boolean
                        description: Only authenticated users can join meetings
                      embed_password_in_join_link:
                        description: |-
                          If the value is set to `true`, the meeting password will be encrypted and included in the join meeting link to allow participants to join with just one click without having to enter the password.

                        type: boolean
                      personal_meeting:
                        description: |+
                          Turn the lock setting on or off for the **Enable Personal Meeting ID** setting for a group.<br><br>
                          `true`: Turn the **"Enable Personal Meeting ID"** setting **on** for all users in the group. Users can choose to use personal meeting ID for their meetings. <br><br>
                          `false`: Turn **off** the **"Enable Personal Meeting ID"** setting. **If this setting is [disabled](https://support.zoom.us/hc/en-us/articles/201362843-Personal-meeting-ID-PMI-and-personal-link?flash_digest=eb7ac62d8c7fb4daf285916e3e15d87537806133#h_aa0335c8-3b06-41bc-bc1f-a8b84ef17f2a), meetings that were scheduled with PMI by this group members will be invalid. Users will have to update previously scheduled PMI meetings.**<br><br>
                          For Zoom Phone only:If a user has been assigned a desk phone, **"Elevate to Zoom Meeting"** on desk phone will be disabled.


                        type: boolean
                  in_meeting:
                    type: object
                    properties:
                      e2e_encryption:
                        type: boolean
                        description: Require that all meetings are encrypted using AES.
                      chat:
                        type: boolean
                        description: Allow meeting participants to send chat message visible to all participants.
                      private_chat:
                        type: boolean
                        description: 'Allow meeting participants to send a private 1:1 message to another participant.'
                      auto_saving_chat:
                        type: boolean
                        description: Automatically save all in-meeting chats.
                      entry_exit_chime:
                        type: string
                        description: Play sound when participants join or leave.
                      feedback:
                        type: boolean
                        description: Enable users to provide feedback to Zoom at the end of the meeting.
                      post_meeting_feedback:
                        type: boolean
                        description: Display end-of-meeting experience feedback survey.
                      co_host:
                        type: boolean
                        description: Allow the host to add co-hosts. Co-hosts have the same in-meeting controls as the host.
                      polling:
                        type: boolean
                        description: Add 'Polls' to the meeting controls. This allows the host to survey the attendees.
                      attendee_on_hold:
                        type: boolean
                        default: false
                        description: |-
                          Allow host to put attendee on hold.

                          **This field has been deprecated and is no longer supported.**
                      show_meeting_control_toolbar:
                        type: boolean
                        description: Always show meeting controls during a meeting.
                      allow_show_zoom_windows:
                        type: boolean
                        description: Show Zoom windows during screen share.
                      annotation:
                        type: boolean
                        description: Allow participants to use annotation tools to add information to shared screens.
                      whiteboard:
                        type: boolean
                        description: Allow participants to share a whiteboard that includes annotation tools.
                      remote_control:
                        type: boolean
                        description: 'During screen sharing, allow the person who is sharing to let others control the shared content.'
                      non_verbal_feedback:
                        type: boolean
                        description: Allow participants in a meeting can provide nonverbal feedback and express opinions by clicking on icons in the Participants panel.
                      breakout_room:
                        type: boolean
                        description: 'Allow host to split meeting participants into separate, smaller rooms.'
                      remote_support:
                        type: boolean
                        description: 'Allow meeting host to provide 1:1 remote support to another participant.'
                      closed_caption:
                        type: boolean
                        description: Allow host to type closed captions or assign a participant/third party device to add closed captions.
                      far_end_camera_control:
                        type: boolean
                        description: Allow another user to take control of the camera during a meeting.
                      group_hd:
                        type: boolean
                        description: Enable higher quality video for host and participants. This will require more bandwidth.
                      virtual_background:
                        type: boolean
                        description: Enable virtual background.
                      alert_guest_join:
                        type: boolean
                        description: Allow participants who belong to your account to see that a guest (someone who does not belong to your account) is participating in the meeting/webinar.
                      auto_answer:
                        type: boolean
                        description: Enable users to see and add contacts to 'auto-answer group' in the contact list on chat. Any call from members of this group will be automatically answered.
                      sending_default_email_invites:
                        type: boolean
                        description: Allow users to invite participants by email only by default.
                      use_html_format_email:
                        type: boolean
                        description: Allow  HTML formatting instead of plain text for meeting invitations scheduled with the Outlook plugin.
                      stereo_audio:
                        type: boolean
                        description: Allow users to select stereo audio during a meeting.
                      original_audio:
                        type: boolean
                        description: Allow users to select original sound during a meeting.
                      screen_sharing:
                        type: boolean
                        description: Allow host and participants to share their screen or content during meetings.
                      waiting_room:
                        type: boolean
                        description: Attendees cannot join a meeting until a host admits them individually from the waiting room.
                      show_browser_join_link:
                        type: boolean
                        description: Allow participants to join a meeting directly from their browser.
                      custom_data_center_regions:
                        type: boolean
                        description: 'Displays whether or not custom [data center regions](https://support.zoom.us/hc/en-us/articles/360042411451-Selecting-data-center-regions-for-hosted-meetings-and-webinars) have been selected for meetings/webinars hosted by this group.'
                      file_transfer:
                        type: boolean
                        description: 'Indicates whether [in-meeting file transfer](https://support.zoom.us/hc/en-us/articles/209605493-In-meeting-file-transfer) setting has been enabled for the users in the group or not.'
                      request_permission_to_unmute:
                        type: boolean
                        description: 'Indicate whether the [**Request permission to unmute participants**](https://support.zoom.us/hc/en-us/articles/203435537-Muting-and-unmuting-participants-in-a-meeting#h_01EGK4XFWS1SJGZ71MYGKF7260) option should be enabled and locked for the group or not.'
                  email_notification:
                    type: object
                    properties:
                      cloud_recording_available_reminder:
                        type: boolean
                        description: Notify host when cloud recording is available.
                      jbh_reminder:
                        type: boolean
                        description: Notify host when participants join the meeting before them.
                      cancel_meeting_reminder:
                        type: boolean
                        description: Notify host and participants when the meeting is cancelled.
                      alternative_host_reminder:
                        type: boolean
                        description: Notify the alternative host who is set or removed.
                      schedule_for_host_reminder:
                        type: boolean
                        description: 'Notify the host there is a meeting is scheduled, rescheduled, or cancelled.'
                  recording:
                    type: object
                    properties:
                      local_recording:
                        type: boolean
                        description: Allow hosts and participants to record the meeting to a local file.
                      cloud_recording:
                        type: boolean
                        description: Allow hosts to record and save the meeting / webinar in the cloud.
                      auto_recording:
                        type: string
                        description: Record meetings automatically as they start.
                      cloud_recording_download:
                        type: boolean
                        description: Allow anyone with a link to the cloud recording to download.
                      account_user_access_recording:
                        type: boolean
                        description: Make cloud recordings accessible to account members only.
                      host_delete_cloud_recording:
                        type: boolean
                        description: 'Allow the host to delete the recordings. If this option is disabled, the recordings cannot be deleted by the host and only admin can delete them.'
                      auto_delete_cmr:
                        type: boolean
                        description: Allow Zoom to automatically delete recordings permanently after a specified number of days.
                      recording_authentication:
                        type: string
                      ip_address_access_control:
                        type: object
                        description: |
                          Setting to allow cloud recording access only from specific IP address ranges.
                        properties:
                          enable:
                            type: boolean
                            description: |+
                              If set to `true`, the cloud recordings of this account can only be accessed by the IP addresses defined in the `ip_addresses_or_ranges` property.

                          ip_addresses_or_ranges:
                            type: string
                            description: |+
                              IP addresses or ranges that have access to the cloud recordings. Separate multiple IP ranges with comma. Use n.n.n.n, n.n.n.n/n or n.n.n.n - n.n.n.n syntax where n is a number.

                              Example: `46.33.24.184, 48.99.100.2/25` or `200.181.108.17 - 220.181.108.157`

                  telephony:
                    type: object
                    properties:
                      third_party_audio:
                        type: boolean
                        description: Allow users to join the meeting using the existing 3rd party audio configuration.
                      telephony_regions:
                        type: boolean
              - $ref: '#/definitions/MeetingSecuritySettings'
          x-examples:
            application/json:
              schedule_meeting:
                host_video: true
                participant_video: true
                audio_type: true
                join_before_host: true
                force_pmi_jbh_password: true
                require_password_for_scheduling_new_meetings: true
                require_password_for_instant_meetings: false
                require_password_for_pmi_meetings: true
                pstn_password_protected: true
                mute_upon_entry: true
                upcoming_meeting_reminder: true
              in_meeting:
                e2e_encryption: true
                chat: true
                private_chat: true
                auto_saving_chat: true
                entry_exit_chime: false
                feedback: true
                post_meeting_feedback: true
                co_host: true
                polling: true
                attendee_on_hold: true
                show_meeting_control_toolbar: true
                allow_show_zoom_windows: true
                annotation: true
                whiteboard: true
                remote_control: true
                non_verbal_feedback: true
                breakout_room: true
                remote_support: true
                closed_caption: true
                far_end_camera_control: true
                group_hd: true
                virtual_background: true
                alert_guest_join: true
                auto_answer: true
                sending_default_email_invites: true
                use_html_format_email: true
                stereo_audio: true
                original_audio: true
                screen_sharing: true
                waiting_room: true
                show_browser_join_link: true
              email_notification:
                cloud_recording_available_reminder: true
                jbh_reminder: true
                cancel_meeting_reminder: true
                alternative_host_reminder: true
                schedule_for_host_reminder: true
              recording:
                local_recording: false
                cloud_recording: false
                auto_recording: false
                cloud_recording_download: false
                account_user_access_recording: false
                host_delete_cloud_recording: false
                auto_delete_cmr: false
              telephony:
                third_party_audio: false
        - in: path
          name: groupId
          type: string
          required: true
          description: The Id of the group.
        - in: query
          name: option
          type: string
          description: Specify `meeting_security` as the value of this field if you would like to view security settings applied on a meeting hosted by the users in this group.
      description: |-
        Update a [group's](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-) locked settings. If you lock a setting, the group members will not be able to modify it individually. <p style="background-color:#FEEFB3; color:#9F6000"><br>Note:</b> The `force_pmi_jbh_password` field under meeting settings is planned to be deprecated on September 22, 2019. This field will be replaced by another field that will provide the same functionality.</p>

        **Prerequisite**: Pro, Business, or Education account<br>
        **Scopes**: `group:write:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      security:
        - OAuth: []
  '/accounts/{accountId}/lock_settings':
    get:
      responses:
        '200':
          description: |+
            **Error Code:** `200`<br>
            Only available for paid account:$accountId.

            **HTTP Status Code:** `200`<br>
            Locked settings for the Account returned.

          schema:
            oneOf:
              - properties:
                  schedule_meeting:
                    type: object
                    properties:
                      host_video:
                        type: boolean
                        description: Start meetings with host video on.
                      participant_video:
                        type: boolean
                        description: Start meetings with participant video on.
                      audio_type:
                        type: boolean
                        description: Determine how participants can join the audio portion of the meeting.
                      join_before_host:
                        type: boolean
                        description: Allow participants to join the meeting before the host arrives
                      enforce_login:
                        type: boolean
                        description: |
                          Allow only signed-in users to join meetings.
                      enforce_login_with_domains:
                        type: boolean
                        description: |
                          Allow only signed-in users with specified domains to join meetings.
                      enforce_login_domains:
                        type: string
                        description: |
                          Specify the domains from which users can join a meeting.
                      not_store_meeting_topic:
                        type: boolean
                        description: Hide actual meeting topic and display "Zoom Meeting" for your scheduled meetings
                      require_password_for_scheduling_new_meetings:
                        type: boolean
                        description: 'This setting applies for regular meetings that do not use PMI. If enabled, a password will be generated while a host schedules a new meeting and participants will be required to enter the password before they can join the meeting. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.'
                      require_password_for_instant_meetings:
                        type: boolean
                        description: 'Require password for instant meetings. If you use PMI for your instant meetings, this option will be disabled. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.'
                      require_password_for_pmi_meetings:
                        description: Require participants to enter password for PMI meetings. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.
                        type: boolean
                      meeting_authentication:
                        type: boolean
                        description: Only authenticated users can join meetings
                      embed_password_in_join_link:
                        description: |-
                          If the value is set to `true`, the meeting password will be encrypted and included in the join meeting link to allow participants to join with just one click without having to enter the password.

                        type: boolean
                  in_meeting:
                    type: object
                    properties:
                      e2e_encryption:
                        type: boolean
                        description: Require that all meetings are encrypted using AES.
                      chat:
                        type: boolean
                        description: Allow meeting participants to send chat message visible to all participants.
                      private_chat:
                        type: boolean
                        description: 'Allow meeting participants to send a private 1:1 message to another participant.'
                      auto_saving_chat:
                        type: boolean
                        description: Automatically save all in-meeting chats.
                      entry_exit_chime:
                        type: string
                        description: Play sound when participants join or leave.
                      feedback:
                        type: boolean
                        description: Enable users to provide feedback to Zoom at the end of the meeting.
                      post_meeting_feedback:
                        type: boolean
                        description: Display end-of-meeting experience feedback survey.
                      co_host:
                        type: boolean
                        description: Allow the host to add co-hosts. Co-hosts have the same in-meeting controls as the host.
                      polling:
                        type: boolean
                        description: Add 'Polls' to the meeting controls. This allows the host to survey the attendees.
                      attendee_on_hold:
                        type: boolean
                        default: false
                        description: |-
                          Allow host to put attendee on hold.

                          **This field has been deprecated and is no longer supported.**
                      show_meeting_control_toolbar:
                        type: boolean
                        description: Always show meeting controls during a meeting.
                      allow_show_zoom_windows:
                        type: boolean
                        description: Show Zoom windows during screen share.
                      annotation:
                        type: boolean
                        description: Allow participants to use annotation tools to add information to shared screens.
                      whiteboard:
                        type: boolean
                        description: Allow participants to share a whiteboard that includes annotation tools.
                      remote_control:
                        type: boolean
                        description: 'During screen sharing, allow the person who is sharing to let others control the shared content.'
                      webinar_question_answer:
                        type: boolean
                        description: Allow attendees to ask questions for the host and panelists to answer in the webinar.
                      anonymous_question_answer:
                        type: boolean
                        description: ''
                      breakout_room:
                        type: boolean
                        description: 'Allow host to split meeting participants into separate, smaller rooms.'
                      closed_caption:
                        type: boolean
                        description: Allow host to type closed captions or assign a participant/third party device to add closed captions.
                      far_end_camera_control:
                        type: boolean
                        description: Allow another user to take control of the camera during a meeting.
                      group_hd:
                        type: boolean
                        description: Enable higher quality video for host and participants. This will require more bandwidth.
                      virtual_background:
                        type: boolean
                        description: Enable virtual background.
                      alert_guest_join:
                        type: boolean
                        description: Allow participants who belong to your account to see that a guest (someone who does not belong to your account) is participating in the meeting/webinar.
                      auto_answer:
                        type: boolean
                        description: Enable users to see and add contacts to 'auto-answer group' in the contact list on chat. Any call from members of this group will be automatically answered.
                      sending_default_email_invites:
                        type: boolean
                        description: Allow users to invite participants by email only by default.
                      use_html_format_email:
                        type: boolean
                        description: Allow  HTML formatting instead of plain text for meeting invitations scheduled with the Outlook plugin.
                      dscp_marking:
                        type: boolean
                        description: 'Enable DSCP marking for signaling and media packets. (Default is 56 for audio, 40 for video, and 40 for signaling.) '
                      stereo_audio:
                        type: boolean
                        description: Allow users to select stereo audio during a meeting.
                      original_audio:
                        type: boolean
                        description: Allow users to select original sound during a meeting.
                      screen_sharing:
                        type: boolean
                        description: Allow host and participants to share their screen or content during meetings.
                      custom_data_center_regions:
                        type: boolean
                        description: 'Displays whether or not custom [data center regions](https://support.zoom.us/hc/en-us/articles/360042411451-Selecting-data-center-regions-for-hosted-meetings-and-webinars) have been selected for meetings/webinars hosted by the account.'
                      file_transfer:
                        type: boolean
                        description: 'Indicates whether [in-meeting file transfer](https://support.zoom.us/hc/en-us/articles/209605493-In-meeting-file-transfer) setting has been enabled for all users on the account or not.'
                      request_permission_to_unmute:
                        type: boolean
                        description: 'Indicates whether the [**Request permission to unmute participants**](https://support.zoom.us/hc/en-us/articles/203435537-Muting-and-unmuting-participants-in-a-meeting#h_01EGK4XFWS1SJGZ71MYGKF7260) option is enabled and locked for the account or not.'
                  email_notification:
                    type: object
                    properties:
                      cloud_recording_available_reminder:
                        type: boolean
                        description: Notify host when cloud recording is available.
                      jbh_reminder:
                        type: boolean
                        description: Notify host when participants join the meeting before them.
                      cancel_meeting_reminder:
                        type: boolean
                        description: Notify host and participants when the meeting is cancelled.
                      alternative_host_reminder:
                        type: boolean
                        description: Notify the alternative host who is set or removed.
                      schedule_for_host_reminder:
                        type: boolean
                        description: 'Notify the host there is a meeting is scheduled, rescheduled, or cancelled.'
                  recording:
                    type: object
                    properties:
                      local_recording:
                        type: boolean
                        description: Allow hosts and participants to record the meeting to a local file.
                      cloud_recording:
                        type: boolean
                        description: Allow hosts to record and save the meeting / webinar in the cloud.
                      auto_recording:
                        type: string
                        description: Record meetings automatically as they start.
                      cloud_recording_download:
                        type: boolean
                        description: Allow anyone with a link to the cloud recording to download.
                      account_user_access_recording:
                        type: boolean
                        description: Make cloud recordings accessible to account members only.
                      host_delete_cloud_recording:
                        type: boolean
                        description: 'Allow the host to delete the recordings. If this option is disabled, the recordings cannot be deleted by the host and only admin can delete them.'
                      auto_delete_cmr:
                        type: boolean
                        description: Allow Zoom to automatically delete recordings permanently after a specified number of days.
                      recording_authentication:
                        type: string
                        description: Only authenticated users can view cloud recordings
                      prevent_host_access_recording:
                        type: boolean
                        description: |+
                          If set to `true`, meeting hosts cannot view their meeting cloud recordings. Only the admins who have recording management privilege can access them.

                      ip_address_access_control:
                        type: object
                        description: |
                          Setting to allow cloud recording access only from specific IP address ranges.
                        properties:
                          enable:
                            type: boolean
                            description: |+
                              If set to `true`, the cloud recordings of this account can only be accessed by the IP addresses defined in the `ip_addresses_or_ranges` property.

                          ip_addresses_or_ranges:
                            type: string
                            description: |+
                              IP addresses or ranges that have access to the cloud recordings. Separate multiple IP ranges with comma. Use n.n.n.n, n.n.n.n/n or n.n.n.n - n.n.n.n syntax where n is a number.

                              Example: `46.33.24.184, 48.99.100.2/25` or `200.181.108.17 - 220.181.108.157`

                  telephony:
                    type: object
                    properties:
                      third_party_audio:
                        type: boolean
                        description: Allow users to join the meeting using the existing 3rd party audio configuration.
                      telephony_regions:
                        type: boolean
                  tsp:
                    type: object
                    properties:
                      call_out:
                        type: boolean
                        description: ''
                      show_international_numbers_link:
                        type: boolean
                        description: ''
              - $ref: '#/definitions/MeetingSecuritySettings'
            type: object
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>
            **Error Code:** `2001`<br>
            Account does not exist: $subAccountId.
      summary: Get locked settings
      description: |-
        [Account Locked Settings](https://support.zoom.us/hc/en-us/articles/115005269866) allow you turn settings on or off for all users in your account. No user except the account admin or account owner can change these settings. With lock settings, you force the settings on for all users.
        Use this API to retrieve an account's locked settings.

        **Note:** This API can be used by Zoom Accounts that are on a Pro or a higher plan as well accounts that have master and sub accounts options enabled. <br><br>
        **Prerequisites:**
        * Pro or a higher paid account. <br>

        **Scope**: `account:read:admin`.
        <br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>





        **Scope:** account:read:admin
      operationId: getAccountLockSettings
      tags:
        - Accounts
      parameters:
        - in: path
          name: accountId
          type: string
          required: true
          description: 'Unique Identifier of the account. To retrieve locked settings of the master account or a regular account, provide "me" as the value of this field. <br> To retrieve locked settings of a sub account, provide the Account ID of the sub account in this field.'
        - in: query
          name: option
          type: string
          description: '`meeting_security`: Use this query parameter to view meeting security settings applied on the account.<br>'
        - in: query
          name: custom_query_fields
          type: string
          description: |-
            Provide the name of the field by which you would like to filter the response. For example, if you provide "host_video" as the value of this field, you will get a response similar to the following:<br>
            {
                "schedule_meeting": {
                    "host_video": false
                }
            }
            <br>You can provide multiple values by separating them with commas(example: "host_video,participant_video”).
    parameters:
      - name: accountId
        in: path
        type: string
        required: true
    patch:
      responses:
        '200':
          description: |
            **Error Code:** `200`<br>
            Only available for Paid account: $accountId.
          schema: {}
        '204':
          description: |-
            **HTTP Status Code:** `204`<br>
            Account lock settings updated.
          schema:
            type: object
            properties: {}
        '404':
          description: |
            **HTTP Status Code:** `404`<br>
            **Error Code:** `2001`<br>
            TAccount does not exist: $subAccountId.
      summary: Update locked settings
      tags:
        - Accounts
      operationId: updateAccountLockSettings
      description: |-
        [Account Locked Settings](https://support.zoom.us/hc/en-us/articles/115005269866) allow you turn settings on or off for all users in your account. No user except the account admin or account owner can change these settings. With lock settings, you force the settings on for all users. Use this API to update an account's locked settings.

        **Note:** This API can be used by Zoom Accounts that are on a Pro or a higher plan as well accounts that have master and sub accounts options enabled.<br><br>
        **Prerequisites:**<br>
        * Pro or a higher paid account. <br>

        **Scope:** `account:write:admin`<br>
        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>



      parameters:
        - in: body
          name: body
          schema:
            oneOf:
              - properties:
                  schedule_meeting:
                    type: object
                    properties:
                      host_video:
                        type: boolean
                        description: Start meetings with host video on.
                      participant_video:
                        type: boolean
                        description: Start meetings with participant video on.
                      audio_type:
                        type: boolean
                        description: Determine how participants can join the audio portion of the meeting.
                      join_before_host:
                        type: boolean
                        description: Allow participants to join the meeting before the host arrives
                      enforce_login:
                        type: boolean
                        description: Participants must always sign in before joining the scheduled meeting.
                      enforce_login_with_domains:
                        type: boolean
                      enforce_login_domains:
                        type: string
                      not_store_meeting_topic:
                        type: boolean
                      require_password_for_scheduling_new_meetings:
                        type: boolean
                        description: 'This setting applies for regular meetings that do not use PMI. If enabled, a password will be generated while a host schedules a new meeting and participants will be required to enter the password before they can join the meeting. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.'
                      require_password_for_instant_meetings:
                        type: boolean
                        description: 'Require password for instant meetings. If you use PMI for your instant meetings, this option will be disabled. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.'
                      require_password_for_pmi_meetings:
                        description: Require participants to enter password for PMI meetings. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.
                        type: boolean
                      meeting_authentication:
                        type: boolean
                      embed_password_in_join_link:
                        description: |-
                          If the value is set to `true`, the meeting password will be encrypted and included in the join meeting link to allow participants to join with just one click without having to enter the password.

                        type: boolean
                      personal_meeting:
                        description: |+
                          Turn the lock setting on or off for the **Enable Personal Meeting ID** setting for an entire account.<br><br>
                          `true`: Turn the **"Enable Personal Meeting ID"** setting **on** for all users in the account. Users can choose to use personal meeting ID for their meetings. <br><br>
                          `false`: Turn **off** the **"Enable Personal Meeting ID"** setting. **If this setting is [disabled](https://support.zoom.us/hc/en-us/articles/201362843-Personal-meeting-ID-PMI-and-personal-link?flash_digest=eb7ac62d8c7fb4daf285916e3e15d87537806133#h_aa0335c8-3b06-41bc-bc1f-a8b84ef17f2a), meetings that were scheduled with PMI by the users in the account will be invalid. Users will have to update previously scheduled PMI meetings.**<br><br>
                          For Zoom Phone only: If a user has been assigned a desk phone, **"Elevate to Zoom Meeting"** on desk phone will be disabled.


                        type: boolean
                  in_meeting:
                    type: object
                    properties:
                      e2e_encryption:
                        type: boolean
                        description: Require that all meetings are encrypted using AES.
                      chat:
                        type: boolean
                        description: Allow meeting participants to send chat message visible to all participants.
                      private_chat:
                        type: boolean
                        description: 'Allow meeting participants to send a private 1:1 message to another participant.'
                      auto_saving_chat:
                        type: boolean
                        description: Automatically save all in-meeting chats.
                      entry_exit_chime:
                        type: string
                        description: Play sound when participants join or leave.
                      feedback:
                        type: boolean
                        description: Enable users to provide feedback to Zoom at the end of the meeting.
                      post_meeting_feedback:
                        type: boolean
                        description: Display end-of-meeting experience feedback survey.
                      co_host:
                        type: boolean
                        description: Allow the host to add co-hosts. Co-hosts have the same in-meeting controls as the host.
                      polling:
                        type: boolean
                        description: Add 'Polls' to the meeting controls. This allows the host to survey the attendees.
                      attendee_on_hold:
                        type: boolean
                        default: false
                        description: |-
                          Allow host to put attendee on hold.

                          **This field has been deprecated and is no longer supported.**
                      show_meeting_control_toolbar:
                        type: boolean
                        description: Always show meeting controls during a meeting.
                      allow_show_zoom_windows:
                        type: boolean
                        description: Show Zoom windows during screen share.
                      annotation:
                        type: boolean
                        description: Allow participants to use annotation tools to add information to shared screens.
                      whiteboard:
                        type: boolean
                        description: Allow participants to share a whiteboard that includes annotation tools.
                      remote_control:
                        type: boolean
                        description: 'During screen sharing, allow the person who is sharing to let others control the shared content.'
                      webinar_question_answer:
                        type: boolean
                        description: ''
                      anonymous_question_answer:
                        type: boolean
                        description: ''
                      breakout_room:
                        type: boolean
                        description: 'Allow host to split meeting participants into separate, smaller rooms.'
                      closed_caption:
                        type: boolean
                        description: Allow host to type closed captions or assign a participant/third party device to add closed captions.
                      far_end_camera_control:
                        type: boolean
                        description: Allow another user to take control of the camera during a meeting.
                      group_hd:
                        type: boolean
                        description: Enable higher quality video for host and participants. This will require more bandwidth.
                      virtual_background:
                        type: boolean
                        description: Enable virtual background.
                      alert_guest_join:
                        type: boolean
                        description: Allow participants who belong to your account to see that a guest (someone who does not belong to your account) is participating in the meeting/webinar.
                      auto_answer:
                        type: boolean
                        description: Enable users to see and add contacts to 'auto-answer group' in the contact list on chat. Any call from members of this group will be automatically answered.
                      sending_default_email_invites:
                        type: boolean
                        description: Allow users to invite participants by email only by default.
                      use_html_format_email:
                        type: boolean
                        description: Allow  HTML formatting instead of plain text for meeting invitations scheduled with the Outlook plugin.
                      dscp_marking:
                        type: boolean
                        description: Allow users to select stereo audio during a meeting.
                      stereo_audio:
                        type: boolean
                        description: Allow users to select stereo audio during a meeting.
                      original_audio:
                        type: boolean
                        description: Allow users to select original sound during a meeting.
                      screen_sharing:
                        type: boolean
                        description: Allow host and participants to share their screen or content during meetings.
                      file_transfer:
                        type: boolean
                        description: 'Indicates whether [in-meeting file transfer](https://support.zoom.us/hc/en-us/articles/209605493-In-meeting-file-transfer) setting has been enabled for all users on the account or not.'
                      custom_data_center_regions:
                        type: boolean
                        description: 'If set to `true`, account owners and admins on paid accounts can [select data center regions](https://support.zoom.us/hc/en-us/articles/360042411451-Selecting-data-center-regions-for-hosted-meetings-and-webinars) to use for hosting their real-time meeting and webinar traffic. These regions can be provided in the `data_center_regions` field in the account settings. If set to `false`, the regions cannot be customized and the default regions will be used.'
                      request_permission_to_unmute:
                        type: boolean
                        description: 'Indicate whether the [**Request permission to unmute participants**](https://support.zoom.us/hc/en-us/articles/203435537-Muting-and-unmuting-participants-in-a-meeting#h_01EGK4XFWS1SJGZ71MYGKF7260) option should be enabled and locked for the account or not.'
                  email_notification:
                    type: object
                    properties:
                      cloud_recording_available_reminder:
                        type: boolean
                        description: Notify host when cloud recording is available.
                      jbh_reminder:
                        type: boolean
                        description: Notify host when participants join the meeting before them.
                      cancel_meeting_reminder:
                        type: boolean
                        description: Notify host and participants when the meeting is cancelled.
                      alternative_host_reminder:
                        type: boolean
                        description: Notify the alternative host who is set or removed.
                      schedule_for_host_reminder:
                        type: boolean
                        description: 'Notify the host there is a meeting is scheduled, rescheduled, or cancelled.'
                  recording:
                    type: object
                    properties:
                      local_recording:
                        type: boolean
                        description: Allow hosts and participants to record the meeting to a local file.
                      cloud_recording:
                        type: boolean
                        description: Allow hosts to record and save the meeting / webinar in the cloud.
                      auto_recording:
                        type: string
                        description: Record meetings automatically as they start.
                      cloud_recording_download:
                        type: boolean
                        description: Allow anyone with a link to the cloud recording to download.
                      account_user_access_recording:
                        type: boolean
                        description: Make cloud recordings accessible to account members only.
                      host_delete_cloud_recording:
                        type: boolean
                        description: 'Allow the host to delete the recordings. If this option is disabled, the recordings cannot be deleted by the host and only admin can delete them.'
                      auto_delete_cmr:
                        type: boolean
                        description: Allow Zoom to automatically delete recordings permanently after a specified number of days.
                      recording_authentication:
                        type: string
                      prevent_host_access_recording:
                        type: boolean
                        description: |+
                          If set to `true`, meeting hosts cannot view their meeting cloud recordings. Only the admins who have recording management privilege can access them.

                      ip_address_access_control:
                        type: object
                        description: |
                          Setting to allow cloud recording access only from specific IP address ranges.
                        properties:
                          enable:
                            type: boolean
                            description: |+
                              If set to `true`, the cloud recordings of this account can only be accessed by the IP addresses defined in the `ip_addresses_or_ranges` property.

                          ip_addresses_or_ranges:
                            type: string
                            description: |+
                              IP addresses or ranges that have access to the cloud recordings. Separate multiple IP ranges with comma. Use n.n.n.n, n.n.n.n/n or n.n.n.n - n.n.n.n syntax where n is a number.

                              Example: `46.33.24.184, 48.99.100.2/25` or `200.181.108.17 - 220.181.108.157`

                  telephony:
                    type: object
                    properties:
                      third_party_audio:
                        type: boolean
                        description: Allow users to join the meeting using the existing 3rd party audio configuration.
                      telephony_regions:
                        type: boolean
                  tsp:
                    type: object
                    properties:
                      call_out:
                        type: boolean
                        description: ''
                      show_international_numbers_link:
                        type: boolean
                        description: ''
              - $ref: '#/definitions/MeetingSecuritySettings'
            type: object
          x-examples: {}
        - in: path
          name: accountId
          type: string
          required: true
          description: 'Unique Identifier of the account. To retrieve locked settings of the master account or a regular account, provide "me" as the value of this field. <br> To retrieve locked settings of a sub account, provide the Account ID of the sub account in this field.'
      security:
        - OAuth: []
  '/roles/{roleId}':
    get:
      responses:
        '200':
          description: |
            **Status Code:** `200`<br>
            Information about a specific role returned.

            **Error Code:** `200`<br>
            You do not have the permission to retrieve role information.
          schema:
            type: object
            properties:
              id:
                type: string
                description: Role Id.
              name:
                type: string
                description: Name of the role.
              description:
                type: string
                description: Description of the role.
              total_members:
                description: Total members assigned to that role.
                type: integer
              privileges:
                type: array
                description: |
                  Privileges assigned to the role. Can be one or a combination of [these permissions](https://marketplace.zoom.us/docs/api-reference/other-references/privileges).
                items:
                  type: string
              sub_account_privileges:
                type: object
                description: This field will only be displayed to accounts that are enrolled in a partner plan and follow the master accounts and sub accounts structure.
                properties:
                  second_level:
                    type: integer
                    description: |-
                      Indicates how the account can manage sub accounts. The value can be one of the following:<br>
                      `1`: Manage the sub account as an owner of the account.<br>
                      `2`: Manage the sub account with the same privileges as the current account.<br>
                      `3`: Manage the sub account with specified privileges.
          examples: {}
        '300':
          description: |-
            **Error Code:** `300`<br>
            Role not found.
      summary: Get role information
      description: |-
        Each Zoom user automatically has a role which can either be owner, administrator, or a member. Account Owners and users with edit privileges for Role management can add customized roles with a list of privileges.

        Use this API to get information including specific privileges assigned to a [role](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control).<br>
        **Pre-requisite:**<br>
        * A Pro or higher plan.<br>
        * For role management and updates, you must be the Account Owner or user with role management permissions.

        **Scopes:** `role:read:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      operationId: getRoleInformation
      tags:
        - Roles
      security:
        - OAuth: []
      parameters:
        - in: path
          name: roleId
          type: string
          required: true
          description: 'Role Id. '
    parameters:
      - name: roleId
        in: path
        type: string
        required: true
    patch:
      responses:
        '200':
          description: |-
            **Error Code:** `200`<br>
            The account must be a paid account to update the role.
          schema: {}
        '204':
          description: |-
            **Status Code:** `400`<br>
            Role updated.
        '300':
          description: |-
            **Error Code:** `300`
            This role cannot be updated.
      summary: Update role information
      description: |-
        Each Zoom user automatically has a [role](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control) which can either be owner, administrator, or a member. Account Owners and users with edit privileges for Role management can add customized roles with a list.

        Use this API to change the privileges, name and description of a specific role.<br>
        **Pre-requisite:**<br>
        * A Pro or higher plan.<br>
        * For role management and updates, you must be the Account Owner or user with role management permissions.<br>**Scopes:** `role:write:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      operationId: updateRole
      tags:
        - Roles
      security:
        - OAuth: []
      parameters:
        - in: path
          name: roleId
          type: string
          required: true
          description: Role Id
        - in: body
          name: body
          schema:
            type: object
            properties:
              id:
                type: string
                description: Role Id.
              name:
                type: string
                description: Name of the role.
              description:
                type: string
                description: Description of the role.
              total_members:
                description: Total members assigned to that role.
                type: integer
              privileges:
                type: array
                description: |
                  Privileges assigned to the role. Can be one or a combination of [these permissions](https://marketplace.zoom.us/docs/api-reference/other-references/privileges).
                items:
                  type: string
              sub_account_privileges:
                type: object
                description: This field will only be displayed to accounts that are enrolled in the partner plan and follow master accounts and sub accounts structure.
                properties:
                  second_level:
                    type: integer
                    description: |-
                      Indicates how the account can manage sub accounts. The value can be one of the following:<br>
                      `1`: Manage the sub account as an owner of the account.<br>
                      `2`: Manage the sub account with the same privileges as the current account.<br>
                      `3`: Manage the sub account with specified privileges.
          x-examples:
            application/json:
              id: '102'
              name: Some Role Name
              description: This role has privileges to view and manage users.
              total_members: '3'
              privileges:
                - 'User:Read'
                - 'User:Edit'
    delete:
      responses:
        '200':
          description: |-
            **Error Code:** `200`<br>
            Role not found.
        '204':
          description: |-
            **Status Code:** `204`<br>
            Role deleted.
          schema:
            type: object
            properties: {}
        '300':
          description: |-
            **Error Code:** `300`<br>
            Role not found.
      summary: Delete a role
      description: |-
        Each Zoom user automatically has a role which can either be owner, administrator, or a member. Account Owners and users with edit privileges for Role management can add customized roles with a list.

        Use this API to delete a role.<br>
        **Pre-requisite:**<br>
        * A Pro or higher plan.<br>
        * For role management and updates, you must be the Account Owner or user with role management permissions.

        **Scopes:** `role:write:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      operationId: deleteRole
      tags:
        - Roles
      security:
        - OAuth: []
      parameters:
        - in: path
          name: roleId
          type: string
          required: true
          description: Role Id.
  '/accounts/{accountId}/plans/usage':
    get:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` <br>
            Plan Usage returned.<br>
          schema:
            type: object
            properties:
              plan_base:
                type: array
                description: The base plan subscribed for the sub account.
                items:
                  type: object
                  properties:
                    type:
                      type: string
                      description: 'Type of the base plan. '
                    hosts:
                      type: integer
                      description: Number of hosts under the base plan.
                    usage:
                      description: Total number of usage of this plan.
                      type: integer
              plan_webinar:
                type: array
                description: Webinar Plan
                items:
                  type: object
                  properties:
                    type:
                      type: string
                      description: The type of Webinar plan for the account.
                    hosts:
                      description: The number of hosts in this plan.
                      type: integer
                    usage:
                      description: The total number of plan usage.
                      type: integer
              plan_large_meeting:
                type: array
                description: Large Meeting Plan
                items:
                  type: object
                  properties:
                    type:
                      type: string
                      description: Large meeting Plan Type
                    hosts:
                      description: 'Number of hosts in this plan. '
                      type: integer
                    usage:
                      description: Number of usages for this account plan.
                      type: integer
              plan_zoom_rooms:
                type: array
                description: Zoom Rooms Plan
                items:
                  type: object
                  properties:
                    type:
                      type: string
                      description: THe plan type for Zoom room plan.
                    hosts:
                      type: integer
                      description: The number of hosts in this plan.
                    usage:
                      description: The total number of usage for this plan.
                      type: integer
              plan_recording:
                type: object
                description: Recording Plan
                properties:
                  type:
                    type: string
                    description: Recording plan type.
                  free_storage:
                    type: string
                    description: Recording free storage.
                  free_storage_usage:
                    type: string
                    description: Amount of free storage used.
                  plan_storage:
                    type: string
                    description: Recording plan storage.
                  plan_storage_usage:
                    type: string
                    description: Recording storage usage.
                  plan_storage_exceed:
                    type: string
              plan_united:
                type: object
                description: '[Zoom United](https://zoom.us/pricing/zoom-bundles) plan.'
                properties:
                  name:
                    type: string
                    description: Name of the plan.
                  type:
                    type: string
                    description: 'Plan [type](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-united-plans).'
                  hosts:
                    type: integer
                    description: Number of licenses purchased.
                  usage:
                    type: integer
                    description: Number of licenses that are already being used.
          examples:
            application/json:
              plan_base:
                type: monthly
                hosts: 2
                usage: 1
              plan_zoom_rooms:
                type: zroom_monthly
                hosts: 1
                usage: 0
              plan_webinar:
                - type: webinar100_monthly
                  hosts: 1
                  usage: 1
              plan_large_meeting:
                - type: large500_monthly
                  hosts: 1
                  usage: 1
              plan_recording:
                free_storage: 3 GB
                free_storage_usage: '0'
                plan_storage: '0'
                plan_storage_usage: '0'
                plan_storage_exceed: '0'
        '400':
          description: |-
            **HTTP Status Code:** `400` <br>
            **Error Code:** `200` <br>
            Only available for paid account.
      summary: Get plan usage
      operationId: getPlanUsage
      tags:
        - Billing
      description: "Get information on usage of [plans](https://marketplace.zoom.us/docs/api-reference/other-references/plans) of an account. This API supports regular accounts as well as master and sub accounts. To get plan usage of a regular account, use the `account:read:admin` scope and provide “me” as the value of the  `accountId` path parameter.\L\LTo get plan usage of a master account, provide the keyword \"me\" as the value of the `accountId` path parameter and use the `billing:master` scope. To get plan usage of a sub account, provide the actual account Id of the sub account as the value of the `accountId` path parameter and use the `billing:master` scope. \n\n**Prerequisite**:<br>\nAccount type: master account on a paid Pro, Business or Enterprise plan.<br>\n**Scope:** `billing:master` for master and sub accounts. `account:read:admin` for regular Zoom accounts.<br>\n **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`"
      security:
        - OAuth: []
      parameters: []
    parameters:
      - name: accountId
        in: path
        type: string
        required: true
  '/accounts/{accountId}/owner':
    put:
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`<br>
            Account owner updated.
          schema: {}
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>

            **Error Code:** `200`<br>
            User is not an admin or is an API user or doesn’t belong to this account: {accountId}.<br>
            Cannot make a user outside of your account an owner.<br>
            Cannot update the role of an account owner.
        '404':
          description: |
            **HTTP Status Code:** `404`<br>
            **Error Code:** `2001`<br>
            Account does not exist: $subAccountId.<br>
            **Error Code:** `3201`<br>
            Cannot find a billing account for this: $accountId.<br>
            **Error Code:** `3211`<br>
            Cannot find a billing contact for this: $accountId.
      summary: Update the account owner
      description: |-
        The current account owner can [change the owner of an account](https://support.zoom.us/hc/en-us/articles/115005686983-Change-Account-Owner) to another user on the same account.<br> Use this API to change the owner of a sub account.

        **Prerequisites**: <br>
        * Account owner or admin permissions of an account.
        * The account making this API request must be on a pro or a hiigher plan with [master account](https://marketplace.zoom.us/docs/api-reference/master-account-apis) privilege.<br><br>

        **Scopes:**  `account:write:admin` or `account:master`<br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>


        <br>
      operationId: updateAccountOwner
      tags:
        - Accounts
      security:
        - OAuth: []
      parameters:
        - in: path
          name: accountId
          type: string
          required: true
          description: Account Id of the account.
        - in: body
          name: body
          schema:
            type: object
            properties:
              email:
                type: string
                description: Email address of the new owner.
                format: email
            required:
              - email
          x-examples:
            application/json:
              email: AfRxe@ugAQaOgcbRq.vczy@somemailservice.com
    parameters:
      - name: accountId
        in: path
        type: string
        required: true
  '/accounts/{accountId}/users/{userId}/account':
    put:
      responses:
        '204':
          description: |-
            **HTTP Status Code**: `204`<br>
            User's account switched successfully.
          schema: {}
        '400':
          description: |-
            **HTTP Status Code**: `400` **Bad Request**<br>
            **Error Code:** `1117`<br> Can not disassociate Admin user
        '404':
          description: "**HTTP Status Code**: `404` **Not Found**<br>\n\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br><br>\n\n**Error Code:** `1010`<br>\nUser not found on this account.<br>\n\n**Error Code:** `1120`<br> Invite not exist\n\t\n\n"
      summary: Switch a user's account
      description: |-
        Disassociate a user from one Account and move the user to another Account under the same master account.

        With this API, a user under a master account or a sub account can be moved to another sub account within the same master account. To move a user from a master account to a sub account, use `me` as the value for `accountId`. In this scenario, "me" refers to the Account ID of the master account.

        To move a user from one sub account to another sub account, provide the sub account's Account ID as the value for `accountId`.

        **Prerequisites**:
        * The account should have Pro or a higher plan with master account option enabled.
        * The user whose account needs to be switched should not be an admin or an owner of that account.
        * The user should not have the same [managed domain](https://support.zoom.us/hc/en-us/articles/203395207-What-is-Managed-Domain-) as the account owner.

        **Scope:** `user:master`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      operationId: switchUserAccount
      tags:
        - Users
      security:
        - OAuth: []
      parameters:
        - in: path
          name: accountId
          type: string
          required: true
        - in: body
          name: body
          schema:
            type: object
            properties:
              account_id:
                type: string
                description: The Account ID of the account to which you would like move the user to.
            required:
              - account_id
          x-examples:
            application/json:
              account_id: ABCDEF0G0YxBBB
    parameters:
      - name: accountId
        in: path
        type: string
        required: true
      - name: userId
        in: path
        type: string
        required: true
  '/accounts/{accountId}/recordings':
    get:
      responses:
        '200':
          description: |+
            **Response Error Code:** `200` <br>
            Only available for Paid account.

            **HTTP Status Code:** `200` <br>
            Recording(s) listed successfully.

          schema:
            type: object
            properties:
              from:
                type: string
                description: 'The start date for the monthly range for which you would like to retrieve recordings. The maximum range can be a month. If no value is provided for this field, the default will be current date. For example, if you make the API request on June 30, 2020, without providing the “from” and “to” parameters, by default the value of ''from'' field will be “2020-06-30” and the value of the ''to'' field will be “2020-07-01”.'
                format: date-time
              to:
                type: string
                description: The end date for the monthly range for which you would like to retrieve recordings. The maximum range can be a month.
                format: date-time
              page_size:
                type: integer
                description: The number of records returned within a single API call.
              total_records:
                type: integer
                description: Total number of records found for this request across all pages.
              next_page_token:
                type: string
                description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
              meetings:
                type: array
                description: Meetings Object
                items:
                  type: object
                  properties:
                    uuid:
                      type: string
                      description: Universally Unique Identifier of a meeting instance. Each meeting instance will have its own meeting UUID.
                    id:
                      type: string
                      description: 'Meeting ID - Unique Identifier for a meeting, also known as Meeting Number.'
                    host_id:
                      type: string
                      description: User ID of the user who is set as the host of the meeting.
                    topic:
                      type: string
                      description: Meeting topic.
                    start_time:
                      type: string
                      description: The date and time at which the meeting started.
                      format: date-time
                    duration:
                      description: The scheduled duration of the meeting.
                      type: integer
                    total_size:
                      description: The total size of the meeting in bytes.
                      type: integer
                    recording_count:
                      description: The total number of recordings retrieved from the account.
                      type: integer
                    recording_files:
                      type: array
                      description: Recording files object
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            description: Recording ID. Identifier for the recording.
                          recording_start:
                            type: string
                            description: The date and time at which the recording started.
                          recording_end:
                            type: string
                            description: The date and time at which the recording ended.
                          file_type:
                            type: string
                            description: "The recording file type. The value of this field could be one of the following:<br>\n* `MP4`: Video file of the recording.<br>\n* `M4A` Audio-only file of the recording.<br>\n* `TIMELINE`: Timestamp file of the recording in JSON format.<br> \n* `TRANSCRIPT`: Transcription file of the recording in VTT format.<br> \n* `CHAT`: A TXT file containing in-meeting chat messages that were sent during the meeting.<br>\n* `CC`: File containing closed captions of the recording in VTT file format.<br>\n* `CSV`: File containing polling data in csv format.\n\nA recording file object with file type of either `CC` or `TIMELINE` **does not have** the following properties:<br>\n\t`id`, `status`, `file_size`, `recording_type`, and `play_url`."
                            enum:
                              - MP4
                              - M4A
                              - CHAT
                              - TRANSCRIPT
                              - CC
                              - TIMELINE
                              - CSV
                          file_size:
                            description: The size of the recording file in bytes.
                            type: number
                          play_url:
                            type: string
                            description: The URL using which recording can be played.
                          download_url:
                            type: string
                            description: The URL using which the recording can be downloaded
                          status:
                            type: string
                            description: 'The status of the recording, either `completed` or `processing`. '
                            enum:
                              - completed
                              - processing
                          recording_type:
                            type: string
                            description: |-
                              The recording type. The value of this field can be one of the following:<br>
                              * `shared_screen_with_speaker_view(CC)`
                              * `shared_screen_with_speaker_view`
                              * `shared_screen_with_gallery_view`
                              * `speaker_view`
                              * `gallery_view`
                              * `shared_screen`
                              * `audio_only`
                              * `audio_transcript`
                              * `active_speaker`
                              * `chat_file`
                              * `poll`
                            enum:
                              - shared_screen_with_speaker_view(CC)
                              - shared_screen_with_speaker_view
                              - shared_screen_with_gallery_view
                              - active_speaker
                              - gallery_view
                              - shared_screen
                              - audio_only
                              - audio_transcript
                              - chat_file
                              - speaker_view
                              - poll
                          meeting_id:
                            type: string
                            description: Universally unique identifier of the meeting instance that was being recorded.
          examples:
            application/json:
              from: '2019-08-19'
              to: '2019-08-20'
              page_size: 30
              next_page_token: ''
              meetings:
                - uuid: i9zq0MR8S/abcdef==
                  id: 101010101
                  account_id: lq8QK_AAAAAAAAA
                  host_id: uLoABCDEF_qQGIsQ
                  topic: MyTestMeeting
                  type: 2
                  start_time: '2019-08-20T00:52:13Z'
                  timezone: America/Los_Angeles
                  host_email: thehostemail@somemail.com
                  duration: 2
                  total_size: 128682
                  recording_count: 3
                  share_url: 'https://zoom.us/recording/share/SBDDBJKsbjdAAAAA'
                  recording_files:
                    - id: 2f6bbbb-0fd7-4691-af13-aaaaaa
                      meeting_id: i9zq0MR8S/abcdef==
                      recording_start: '2019-08-20T00:51:54Z'
                      recording_end: '2019-08-20T00:53:16Z'
                      file_type: M4A
                      file_size: 26966
                      play_url: 'https://zoomdev.us/recording/play/abcdEFgkkkkk'
                      download_url: 'https://zoom.us/recording/download/abcdEFgkkkkk'
                      status: completed
                      recording_type: audio_only
                    - id: 39362666-0fd7-4691-af13-aaaaaa
                      meeting_id: i9zq0MR8S/abcdef==
                      recording_start: '2019-08-20T00:51:54Z'
                      recording_end: '2019-08-20T00:53:16Z'
                      file_type: CHAT
                      file_size: 37
                      play_url: 'https://zoom.us/recording/play/UpBEo44Q31BVEXrGeCdbT4-MOAAAAAAA'
                      download_url: 'https://zoom.us/recording/download/JolGd4kUpBEo44Q31BVEXrGeCdbT4-MOAAAAA'
                      status: completed
                      recording_type: chat_file
                    - id: K809nk-014djkfsgf-00a98c13ec783
                      meeting_id: i9zq0MR8S/abcdef==
                      recording_start: '2019-08-20T00:51:54Z'
                      recording_end: '2019-08-20T00:53:16Z'
                      file_type: MP4
                      file_size: 101679
                      play_url: 'https://zoom.us/recording/play/5Y2YnU-56ZY4lEA5AAAABBBBBCCCCCDDDDD'
                      download_url: 'https://zoom.us/recording/download/5Y2YnU-56ZY4lEA5AAAABBBBBCCCCCDDDDD'
                      status: completed
                      recording_type: shared_screen_with_speaker_view
        '404':
          description: |
            **HTTP Status Code:** `400` <br>
            Account not found.

            **Response Error Code:** `2001`<br>
            This account does not exist or does not belong to you: {accountId}.
          examples: {}
      summary: List recordings of an account
      description: |
        List [Cloud Recordings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording) available on an Account.

        > To access a password protected cloud recording, add an "access_token" parameter to the download URL and provide [JWT](https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-jwt-app) as the value of the "access_token".
        <br>
        **Prerequisites**:<br>
        * A Pro or a higher paid plan with Cloud Recording option enabled.<br>
        **Scopes**: `recording:read:admin` or `account:read:admin`

        If the scope `recording:read:admin` is used, the Account ID of the Account must be provided in the `accountId` path parameter to list recordings that belong to the Account. This scope only works for sub accounts.

        To list recordings of a master account, the scope must be `account:read:admin` and the value of `accountId` should be `me`.<br>  **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>
      tags:
        - Cloud Recording
      operationId: getAccountCloudRecording
      security:
        - OAuth: []
      parameters:
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/NextPageToken'
        - in: query
          name: from
          type: string
          format: date-time
          description: 'The start date in UTC for the monthly range for which you would like to retrieve recordings. The maximum range can be a month. If no value is provided for this field, the default will be current date. For example, if you make the API request on June 30, 2020, without providing the “from” and “to” parameters, by default the value of ''from'' field will be “2020-06-30” and the value of the ''to'' field will be “2020-07-01”.'
        - in: query
          name: to
          type: string
          format: date-time
          description: The end date for the monthly range for which you would like to retrieve recordings. The maximum range can be a month.
        - in: path
          name: accountId
          type: string
          required: true
          description: Unique identifier of the account.
    parameters:
      - name: accountId
        in: path
        type: string
        required: true
  '/webinars/{webinarId}/tracking_sources':
    get:
      responses:
        '200':
          description: '**HTTP Status Code:** `200`'
          schema:
            type: object
            properties:
              total_records:
                type: integer
                description: The total number of registration records for this Webinar.
              tracking_sources:
                type: array
                description: Tracking Sources object.
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Unique Identifier for the tracking source.
                    source_name:
                      type: string
                      description: Name of the source (platform) where the registration URL was shared.
                    tracking_url:
                      type: string
                      description: Tracking URL. The URL that was shared for the registration.
                    registration_count:
                      description: Number of registrations made from this source.
                      type: integer
                    visitor_count:
                      description: Number of visitors who visited the registration page from this source.
                      type: integer
          examples:
            application/json:
              total_records: 1
              tracking_sources:
                - id: '1100011100'
                  source_name: general
                  visitor_count: 2
                  registrationr_count: 1
                  tracking_url: 'https://zoom.us/webinar/register/1100011100/WN_6ToMP5n6Quas2SdMjIWu7Q'
      summary: Get webinar tracking sources
      description: |
        [Webinar Registration Tracking Sources](https://support.zoom.us/hc/en-us/articles/360000315683-Webinar-Registration-Source-Tracking) allow you to see where your registrants are coming from if you share the webinar registration page in multiple platforms. You can then use the source tracking to see the number of registrants generated from each platform.<br> Use this API to list information on all the tracking sources of a Webinar.<br>
        **Scopes:** `webinar:read:admin`, `webinar:read`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>
        **Prerequisites**:<br>
        * [Webinar license](https://zoom.us/webinar).
        * Registration must be required for the Webinar.
      operationId: getTrackingSources
      tags:
        - Webinars
      security:
        - OAuth: []
      parameters:
        - $ref: '#/parameters/WebinarId'
    parameters:
      - name: webinarId
        in: path
        type: string
        required: true
  /rooms/account_profile:
    get:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Zoom Room Account Profile returned successfully.
          schema:
            type: object
            properties:
              basic:
                type: object
                properties:
                  support_email:
                    type: string
                    description: The email address used for reporting Zoom Room issues.
                    format: email
                  support_phone:
                    type: string
                    description: The phone number used for reporting Zoom room issues.
                  room_passcode:
                    type: string
                    description: 1-16 digit number or characters used to secure your Zoom Rooms application. This code must be entered on your Zoom Room Controller to change settings or to sign out.
                    minLength: 1
                    maxLength: 16
                  required_code_to_ext:
                    description: |
                      Require code to exit out of the Zoom Rooms application to switch between other apps.
                    type: boolean
          examples:
            application/json:
              basic:
                support_email: abc123@someemailaddress.sbfj
                support_phone: '00222'
                room_passcode: '12234'
                required_code_to_ext: true
        '400':
          description: |-
            **HTTP Status Code:** `400` **Bad Request**<br>
            **Error Code:** `200`<br>
            Zoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>
            Access restricted.
      summary: Get Zoom Room account profile
      description: |-
        Get details on the account profile of a Zoom Room. This information can only by accessed either by the Zoom Room Account Owner or a user with Zoom Rooms admin permission. To get information on an individual Room Profile, use [Get Zoom Room Profile API](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms/getzrprofile) instead.

        **Prerequisites:**<br>
        * Zoom account owner or Zoom Rooms admin permissions<br>

        **Scopes:** `room:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      tags:
        - Rooms Account
      operationId: getZRAccountProfile
      security:
        - OAuth: []
    patch:
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` **No Content**<br>
            Profile updated successfully.
          schema:
            type: object
            properties: {}
        '400':
          description: |-
            **HTTP Status Code:** `400` **Bad Request**<br><br>
            **Error Code:** `200`<br>
            Zoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>
            Access restricted.
      summary: Update Zoom Room account profile
      description: |-
        Update information on the account profile of a Zoom Room. This information can only by accessed either by the Zoom Room Account Owner or a user with Zoom Rooms admin permission. To update information on an individual Room Profile, use [Update Zoom Room Profile API](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms/updatezrprofile) instead.

        **Prerequisites:**<br>
        * Zoom account owner or Zoom Rooms admin permissions<br>

        **Scopes:** `room:write:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      operationId: updateZRAccProfile
      tags:
        - Rooms Account
      security:
        - OAuth: []
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              basic:
                type: object
                properties:
                  support_email:
                    type: string
                    description: The email address used for reporting Zoom Room issues.
                    format: email
                  support_phone:
                    type: string
                    description: The phone number used for reporting Zoom room issues.
                  room_passcode:
                    type: string
                    description: 1-16 digit number or characters used to secure your Zoom Rooms application. This code must be entered on your Zoom Room Controller to change settings or to sign out.
                    minLength: 1
                    maxLength: 16
                  required_code_to_ext:
                    description: |
                      Require code to exit out of the Zoom Rooms application to switch between other apps.
                    type: boolean
          x-examples:
            application/json:
              basic:
                support_email: uoBBgT2soq1vfH@oZjIHwma.erjp
                support_phone: '123445654656'
                room_passcode: '121212'
                required_code_to_ext: true
  /rooms/account_settings:
    get:
      responses:
        '200':
          description: |
            **HTTP Status Code:** `200` **OK**<br>
            ZR Account Settings returned successfully.
          schema:
            oneOf:
              - properties:
                  zoom_rooms:
                    type: object
                    properties:
                      upcoming_meeting_alert:
                        type: boolean
                        description: 'If enabled, a reminder will display 10 minutes prior to the next scheduled meeting on the controller.'
                      show_alert_before_meeting:
                        type: boolean
                        description: 'If enabled, the upcoming meeting alert message will be shown on the TV display. The value of the `upcoming_meeting_alert` field should be set to `true` to use this field. '
                      start_airplay_manually:
                        type: boolean
                        description: 'Require the AirPlay service to be [started by an administrator](https://support.zoom.us/hc/en-us/articles/204726885-Screen-Share-Using-Airplay-Mirroring#h_a342ad38-4e46-47a8-a1d9-cded3b144b39) rather than always being available.'
                      weekly_system_restart:
                        type: boolean
                        description: '[Restart](https://support.zoom.us/hc/en-us/articles/205418949-Zoom-Rooms-Weekly-System-Restart) the Zoom Rooms computer and controller once a week.'
                      display_meeting_list:
                        type: boolean
                        description: ' Show the same information on the TV that is shown on the controller.'
                      display_top_banner:
                        type: boolean
                        description: 'Allow to display room name, time and sharing key on the top portion of TV.'
                      display_feedback_survey:
                        type: boolean
                        description: 'Display a [survey](https://support.zoom.us/hc/en-us/articles/214193146-End-of-Meeting-Attendee-Feedback) at the end of each meeting regarding the audio and video quality on the Zoom Rooms Controller.'
                      auto_direct_sharing:
                        type: boolean
                        description: Enable participants in a Zoom Room to share their laptop screen on the Zoom Room TV without entering a meeting ID or sharing code.
                      transform_meeting_to_private:
                        type: boolean
                        description: 'If enabled, all meetings in this room will be treated as [private meetings](https://support.zoom.us/hc/en-us/articles/115001051063-Zoom-Rooms-Private-Meetings), and the Zoom Room will display "Your Name''s Meeting" instead of the real meeting topic.'
                      hide_id_for_private_meeting:
                        type: boolean
                        description: 'If enabled, the meeting host and meeting ID (in addition to the meeting topic) are hidden from the Zoom Rooms display for private meetings. This affects meetings that were originally scheduled as private, as well as public meetings that were transformed to private.'
                      auto_start_scheduled_meeting:
                        type: boolean
                        description: Automatically start scheduled meetings according to the start time listed on the calendar associated with the room. A meeting alert will appear 10 minutes prior to the scheduled time on the TV.
                      auto_stop_scheduled_meeting:
                        type: boolean
                        description: 'Automatically stop the meeting at the end time as scheduled and listed in the calendar associated with the room. '
                      audio_device_daily_auto_test:
                        type: boolean
                        description: 'Enable [automated audio test](https://support.zoom.us/hc/en-us/articles/360000319683-Zoom-Rooms-Daily-Audio-Testing) to ensure high quality audio.'
                      support_join_3rd_party_meeting:
                        type: boolean
                        description: 'Integrate with Skype for Business, GoToMeeting, or WebEx and show the meeting dial-in button on the meeting list tab for Zoom Rooms Controllers.'
                      email_address_prompt_before_recording:
                        type: boolean
                        description: Allow in-room participants to input email address where they can recieve the recording before starting a recording if the meeting was created on the Scheduling Display or if it was started using the "Meet Now" option.
                      secure_connection_channel:
                        type: boolean
                        description: Enable secure connection between Zoom Rooms computer and controller.
                      encrypt_shared_screen_content:
                        type: boolean
                        description: Encrypt screen and content shared in meetings.
                      allow_multiple_content_sharing:
                        type: boolean
                        description: 'Enable multiple participants to [share content simultaneously](https://support.zoom.us/hc/en-us/articles/360017767812-Sharing-Multiple-Screens-in-a-Zoom-Room) by default.'
                      show_non_video_participants:
                        type: boolean
                        description: 'When enabled, meeting participants that are audio only or have their video turned off will also be shown on the Zoom Rooms display by default.'
                      show_call_history_in_room:
                        type: boolean
                        description: |
                          Allow users to see call history of joined meetings and phone calls from the Zoom Rooms controller.
                      make_room_alternative_host:
                        type: boolean
                        description: |
                          Set [Zoom Rooms as the alternative host](https://support.zoom.us/hc/en-us/articles/203614149-Zoom-Rooms-as-Alternative-Host).
                      show_contact_list_on_controller:
                        type: boolean
                        description: 'If enabled, you can invite participants from the contact list during a meeting or when starting a meeting'
                      count_attendees_number_in_room:
                        type: boolean
                        description: |
                          Use facial detection technology to [determine and display the attendees count](https://support.zoom.us/hc/en-us/articles/360031027111-Count-Attendees-in-Zoom-Rooms) after meetings on Dashboard.
                      send_whiteboard_to_internal_contact_only:
                        type: boolean
                        description: 'Restrict[ sending Whiteboard sessions](https://support.zoom.us/hc/en-us/articles/115004797286-Using-the-Whiteboard-in-Zoom-Rooms-for-Touch#h_781274b3-5237-4320-8826-be2120b00e21) to contacts or internal users only.'
                      start_airplay_mirroring:
                        type: boolean
                        description: Allow users to share content via Apple Screen Mirroring (called Airplay on iOS 11 or earlier) in Zoom Rooms
              - properties:
                  client_alert:
                    type: object
                    description: 'The Client Alert Settings section includes alerts that display on the TV screen of the Zoom Room. Disable these settings if you have deliberately disconnected one or more peripheral devices or have never enabled them. '
                    properties:
                      detect_microphone_error_alert:
                        type: boolean
                        description: Display an alert message when an issue is detected with microphone.
                      detect_bluetooth_microphone_error_alert:
                        type: boolean
                        description: Display an alert message when an issue is detected with a bluetooth microphone.
                      detect_speaker_error_alert:
                        type: boolean
                        description: Display an alert message when an issue is detected with a speaker.
                      detect_bluetooth_speaker_error_alert:
                        type: boolean
                        description: Display an alert message when an issue is detected with a bluetooth speaker.
                      detect_camera_error_alert:
                        type: boolean
                        description: Display an alert message when an issue is detected with a camera.
                  notification:
                    type: object
                    description: '[Notifications Settings](https://support.zoom.us/hc/en-us/articles/205394099-Zoom-Room-Alerts#h_b430b5f2-5150-4522-9c96-c77f22ab70bc) includes the circumstances in which the room sends an email alert to the support team to notify them of a potentially urgent issue. These issues can affect the operation of the room, but do not display on the TV screen. The email alert is sent to the email address specified in the Notification Email Recipients section. '
                    properties:
                      audio_not_meet_usability_threshold:
                        type: boolean
                        description: Send an alert when the audio echo test result does not meet usability threshold.
                      audio_meet_usability_threshold:
                        type: boolean
                        description: Send an alert when the audio echo test result meets usability threshold.
                      battery_low_and_not_charging:
                        type: boolean
                        description: Send an alert when the battery of the controller or the scheduling display is low (at 20%) and is not being charged.
                      battery_is_charging:
                        type: boolean
                        description: Send an alert when the battery starts charging.
                      battery_percentage:
                        type: string
                        description: 'Specify a percentage so that an alert is sent when the battery is less than the {battery_percentage} that you specified.'
                      controller_scheduling_disconnected:
                        type: boolean
                        description: Send an alert when the connection to the Controller or Scheduling Display cannot be detected.
                      controller_scheduling_reconnected:
                        type: boolean
                        description: Send an alert when the Controller or Scheduling Display can be detected again.
                      cpu_usage_high_detected:
                        type: boolean
                        description: Send an alert when CPU usage is above 90%.
                      network_unstable_detected:
                        type: boolean
                        description: Send an alert when low bandwidth network is detected
                      zoom_room_offline:
                        type: boolean
                        description: Send an alert when the machine hosting the Zoom Room application has a network issue or cannot connect with the Controller.
                      zoom_room_come_back_online:
                        type: boolean
                        description: Send an alert when the Zoom Room is online after previously being offline.
                      sip_registration_failed:
                        type: boolean
                        description: 'Send an alert when SIP registration stops working. '
                      sip_registration_re_enabled:
                        type: boolean
                        description: Send an alert after the SIP registration is re-enabled.
                      mic_speaker_camera_disconnected:
                        type: boolean
                        description: 'Send an alert when the mic, speaker or camera is disconnected in the Zoom Room.'
                      mic_speaker_camera_reconnected:
                        type: boolean
                        description: 'Send an alert when the mic, speaker or camera is reconnected.'
                      zoom_room_display_disconnected:
                        type: boolean
                        description: Send an alert when the TV display is disconnected
                  digital_signage:
                    type: object
                    properties:
                      layout:
                        type: string
                        description: |-
                          Set the [layout](https://support.zoom.us/hc/en-us/articles/360000030683-Zoom-Rooms-digital-signage#h_4e25ddf3-8f97-4957-8f8b-99725f940fa7). The value of this field can be either `standard` or `video_content`.

                          `standard`: Standard Center<br>
                          `video_content`: Video + Content
                      banner:
                        type: object
                        description: Specifies the elements that you want to display in the top banner.
                        properties:
                          banner_room_name:
                            type: boolean
                            description: Display or hide banner room name.
                          banner_sharing_key:
                            type: boolean
                            description: Display or hide banner sharing key.
                          banner_time:
                            type: boolean
                            description: Display or hide time in the banner.
                      display_period:
                        type: object
                        description: Display period object lets you define the number of minutes before or after the scheduled meeting time you would like the content to display.
                        properties:
                          start_displaying_content:
                            type: integer
                            description: Start displaying digital signage content after certain duration after the meeting ends. The value of this field indicates the duration in minutes.
                          stop_displaying_content:
                            type: integer
                            description: 'Stop displaying content {certain_duration} before a meeting is scheduled to begin. The value of this field indicates the duration in minutes.'
                      mute:
                        type: boolean
                        description: Sound of all contents will be muted if the value of this field is set to `true`.
                      enable_digital_signage:
                        type: boolean
                        description: |-
                          [Indicates whether digital signage is on or off,](https://support.zoom.us/hc/en-us/articles/360000030683-Zoom-Rooms-digital-signage#h_767fbb33-82a8-45a8-8392-a1bfa9687edd). <br>
                          `true`: enable<br> `false`: disable
                      play_list:
                        type: array
                        maxItems: 2
                        description: Content list.
                        items:
                          type: object
                          properties:
                            action:
                              type: string
                              enum:
                                - add
                                - update
                                - delete
                              description: |
                                Specify an action for the content list. The value can be one of the following:<br>
                                `add`: Add another content list.<br>
                                `update`: Update existing content list.<br>
                                `delete`: Delete content list.
                            id:
                              type: string
                              description: Unique identifier of the content list. This field is only required if you would like to remove or update the content list.
                            name:
                              type: string
                              description: Name of the content list.
                            start_time:
                              type: string
                              description: Specify the display start time for the content list in GMT.
                            end_time:
                              type: string
                              description: Specify the display end time for the content list in GMT.
                            contents:
                              type: array
                              maxItems: 3
                              items:
                                type: object
                                description: Content list.
                                properties:
                                  content_id:
                                    type: string
                                    description: Content Id.
                                  name:
                                    type: string
                                    description: Name of the content.
                                  duration:
                                    type: integer
                                    description: Duration for how long the content will be displayed.
                                  order:
                                    type: integer
                                    description: Order of the content in the display.
                                  id:
                                    type: string
            type: object
          examples:
            application/json:
              client_alert:
                detect_microphone_error_alert: true
                detect_bluetooth_microphone_error_alert: true
                detect_speaker_error_alert: true
                detect_bluetooth_speaker_error_alert: true
                detect_camera_error_alert: true
              notification:
                audio_not_meet_usability_threshold: false
                battery_low_and_not_charging: false
                controller_scheduling_disconnected: false
                cpu_usage_high_detected: false
                network_unstable_detected: false
                zoom_room_offline: false
                sip_registration_failed: false
                mic_speaker_camera_disconnected: false
                zoom_room_display_disconnected: false
        '400':
          description: |-
            **HTTP Status Code:** `400` **Bad Request**<br>
            **Error Code:** `200`<br>
            Zoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>
            Access restricted.
      summary: Get Zoom Room account settings
      description: |-
        Get details on Account Settings of a Zoom Room. With this API, you can view either the **Account Meeting Settings** or the **Alert Settings** (Client Alert Settings and Notfication Settings) of the Zoom Rooms account. By default, only **Account Meeting Settings** are returned. To view only **Alert Settings**, specify `alert` as the value of the `setting_type` query parameter.<br><br>
        **Prerequisites:**<br>
        * Zoom Room licenses
        * Owner or Admin privileges on the Zoom Account.<br>
        **Scopes:** `room:read:admin`<br><br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      operationId: getZRAccountSettings
      tags:
        - Rooms Account
      security:
        - OAuth: []
      parameters:
        - in: query
          name: setting_type
          type: string
          default: meeting
          required: true
          enum:
            - meeting
            - alert
          description: |-
            The type of setting that you would like to retrieve.<br> `alert`: Alert Settings applied on the Zoom Rooms Account.<br>
            `meeting`: Meeting settings of the Zoom Rooms Account. <br>
            `signage`: View digital signage settings of the Zoom Rooms Account.
    patch:
      responses:
        '204':
          description: |
            **HTTP Status Code:** `204` **No Content**<br>
            Settings updated successfully.
          schema:
            type: object
            properties: {}
        '400':
          description: |-
            **HTTP Status Code:** `400` **Bad Request**<br><br>
            **Error Code:** `200`<br>
            Zoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>
            Access restricted.
      summary: Update Zoom Room account settings
      description: |-
        Update account settings applied for Zoom Rooms in a Zoom account. With this API, you can update either the **Account Meeting Settings** or the **Alert Settings** (Client Alert Settings and Notfication Settings) of the Zoom Rooms account by specifying the required setting type in the `setting_type` parameter. To update only **Alert Settings**, specify `alert` as the value of the `setting_type` query parameter and to update only **Account Meeting Settings**, specify `meeting` as the value of the `setting_type` query parameter.<br><br>
        **Prerequisites:**<br>
        * Zoom Room licenses
        * Owner or Admin privileges on the Zoom Account.<br>
        **Scopes:** `room:write:admin`<br>

          **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      operationId: updateZoomRoomAccSettings
      tags:
        - Rooms Account
      security:
        - OAuth: []
      parameters:
        - in: body
          name: body
          schema:
            oneOf:
              - properties:
                  zoom_rooms:
                    type: object
                    properties:
                      upcoming_meeting_alert:
                        type: boolean
                        description: 'If enabled, a reminder will display 10 minutes prior to the next scheduled meeting on the controller.'
                      show_alert_before_meeting:
                        type: boolean
                        description: 'If enabled, the upcoming meeting alert message will be shown on the TV display. The value of the `upcoming_meeting_alert` field should be set to `true` to use this field. '
                      start_airplay_manually:
                        type: boolean
                        description: 'Require the AirPlay service to be [started by an administrator](https://support.zoom.us/hc/en-us/articles/204726885-Screen-Share-Using-Airplay-Mirroring#h_a342ad38-4e46-47a8-a1d9-cded3b144b39) rather than always being available.'
                      weekly_system_restart:
                        type: boolean
                        description: '[Restart](https://support.zoom.us/hc/en-us/articles/205418949-Zoom-Rooms-Weekly-System-Restart) the Zoom Rooms computer and controller once a week.'
                      display_meeting_list:
                        type: boolean
                        description: ' Show the same information on the TV that is shown on the controller.'
                      display_top_banner:
                        type: boolean
                        description: 'Allow to display room name, time and sharing key on the top portion of TV.'
                      display_feedback_survey:
                        type: boolean
                        description: 'Display a [survey](https://support.zoom.us/hc/en-us/articles/214193146-End-of-Meeting-Attendee-Feedback) at the end of each meeting regarding the audio and video quality on the Zoom Rooms Controller.'
                      auto_direct_sharing:
                        type: boolean
                        description: Enable participants in a Zoom Room to share their laptop screen on the Zoom Room TV without entering a meeting ID or sharing code.
                      transform_meeting_to_private:
                        type: boolean
                        description: 'If enabled, all meetings in this room will be treated as [private meetings](https://support.zoom.us/hc/en-us/articles/115001051063-Zoom-Rooms-Private-Meetings), and the Zoom Room will display "Your Name''s Meeting" instead of the real meeting topic.'
                      hide_id_for_private_meeting:
                        type: boolean
                        description: 'If enabled, the meeting host and meeting ID (in addition to the meeting topic) are hidden from the Zoom Rooms display for private meetings. This affects meetings that were originally scheduled as private, as well as public meetings that were transformed to private.'
                      auto_start_scheduled_meeting:
                        type: boolean
                        description: Automatically start scheduled meetings according to the start time listed on the calendar associated with the room. A meeting alert will appear 10 minutes prior to the scheduled time on the TV.
                      auto_stop_scheduled_meeting:
                        type: boolean
                        description: 'Automatically stop the meeting at the end time as scheduled and listed in the calendar associated with the room. '
                      audio_device_daily_auto_test:
                        type: boolean
                        description: 'Enable [automated audio test](https://support.zoom.us/hc/en-us/articles/360000319683-Zoom-Rooms-Daily-Audio-Testing) to ensure high quality audio.'
                      support_join_3rd_party_meeting:
                        type: boolean
                        description: 'Integrate with Skype for Business, GoToMeeting, or WebEx and show the meeting dial-in button on the meeting list tab for Zoom Rooms Controllers.'
                      email_address_prompt_before_recording:
                        type: boolean
                        description: Allow in-room participants to input email address where they can recieve the recording before starting a recording if the meeting was created on the Scheduling Display or if it was started using the "Meet Now" option.
                      secure_connection_channel:
                        type: boolean
                        description: Enable secure connection between Zoom Rooms computer and controller.
                      encrypt_shared_screen_content:
                        type: boolean
                        description: Encrypt screen and content shared in meetings.
                      allow_multiple_content_sharing:
                        type: boolean
                        description: 'Enable multiple participants to [share content simultaneously](https://support.zoom.us/hc/en-us/articles/360017767812-Sharing-Multiple-Screens-in-a-Zoom-Room) by default.'
                      show_non_video_participants:
                        type: boolean
                        description: 'When enabled, meeting participants that are audio only or have their video turned off will also be shown on the Zoom Rooms display by default.'
                      show_call_history_in_room:
                        type: boolean
                        description: |
                          Allow users to see call history of joined meetings and phone calls from the Zoom Rooms controller.
                      make_room_alternative_host:
                        type: boolean
                        description: |
                          Set [Zoom Rooms as the alternative host](https://support.zoom.us/hc/en-us/articles/203614149-Zoom-Rooms-as-Alternative-Host).
                      show_contact_list_on_controller:
                        type: boolean
                        description: 'If enabled, you can invite participants from the contact list during a meeting or when starting a meeting'
                      count_attendees_number_in_room:
                        type: boolean
                        description: |
                          Use facial detection technology to [determine and display the attendees count](https://support.zoom.us/hc/en-us/articles/360031027111-Count-Attendees-in-Zoom-Rooms) after meetings on Dashboard.
                      send_whiteboard_to_internal_contact_only:
                        type: boolean
                        description: 'Restrict[ sending Whiteboard sessions](https://support.zoom.us/hc/en-us/articles/115004797286-Using-the-Whiteboard-in-Zoom-Rooms-for-Touch#h_781274b3-5237-4320-8826-be2120b00e21) to contacts or internal users only.'
              - properties:
                  client_alert:
                    type: object
                    description: 'The Client Alert Settings section includes alerts that display on the TV screen of the Zoom Room. Disable these settings if you have deliberately disconnected one or more peripheral devices or have never enabled them. '
                    properties:
                      detect_microphone_error_alert:
                        type: boolean
                        description: Display an alert message when an issue is detected with microphone.
                      detect_bluetooth_microphone_error_alert:
                        type: boolean
                        description: Display an alert message when an issue is detected with a bluetooth microphone.
                      detect_speaker_error_alert:
                        type: boolean
                        description: Display an alert message when an issue is detected with a speaker.
                      detect_bluetooth_speaker_error_alert:
                        type: boolean
                        description: Display an alert message when an issue is detected with a bluetooth speaker.
                      detect_camera_error_alert:
                        type: boolean
                        description: Display an alert message when an issue is detected with a camera.
                  notification:
                    type: object
                    description: '[Notifications Settings](https://support.zoom.us/hc/en-us/articles/205394099-Zoom-Room-Alerts#h_b430b5f2-5150-4522-9c96-c77f22ab70bc) includes the circumstances in which the room sends an email alert to the support team to notify them of a potentially urgent issue. These issues can affect the operation of the room, but do not display on the TV screen. The email alert is sent to the email address specified in the Notification Email Recipients section. '
                    properties:
                      audio_not_meet_usability_threshold:
                        type: boolean
                        description: Send an alert when the audio echo test result does not meet usability threshold.
                      audio_meet_usability_threshold:
                        type: boolean
                        description: Send an alert when the audio echo test result meets usability threshold.
                      battery_low_and_not_charging:
                        type: boolean
                        description: Send an alert when the battery of the controller or the scheduling display is low (at 20%) and is not being charged.
                      battery_is_charging:
                        type: boolean
                        description: Send an alert when the battery starts charging.
                      battery_percentage:
                        type: string
                        description: 'Specify a percentage so that an alert is sent when the battery is less than the {battery_percentage} that you specified.'
                      controller_scheduling_disconnected:
                        type: boolean
                        description: Send an alert when the connection to the Controller or Scheduling Display cannot be detected.
                      controller_scheduling_reconnected:
                        type: boolean
                        description: Send an alert when the Controller or Scheduling Display can be detected again.
                      cpu_usage_high_detected:
                        type: boolean
                        description: Send an alert when CPU usage is above 90%.
                      network_unstable_detected:
                        type: boolean
                        description: Send an alert when low bandwidth network is detected
                      network_stable_detected:
                        type: boolean
                        description: Send an alert when the network is stable.
                      zoom_room_offline:
                        type: boolean
                        description: Send an alert when the machine hosting the Zoom Room application has a network issue or cannot connect with the Controller.
                      zoom_room_come_back_online:
                        type: boolean
                        description: Send an alert when the Zoom Room is online after previously being offline.
                      sip_registration_failed:
                        type: boolean
                        description: 'Send an alert when SIP registration stops working. '
                      sip_registration_re_enabled:
                        type: boolean
                        description: Send an alert after the SIP registration is re-enabled.
                      mic_speaker_camera_disconnected:
                        type: boolean
                        description: 'Send an alert when the mic, speaker or camera is disconnected in the Zoom Room.'
                      mic_speaker_camera_reconnected:
                        type: boolean
                        description: 'Send an alert when the mic, speaker or camera is reconnected.'
                      zoom_room_display_disconnected:
                        type: boolean
                        description: Send an alert when the TV display is disconnected
                  digital_signage:
                    type: object
                    properties:
                      layout:
                        type: string
                        description: |-
                          Set the [layout](https://support.zoom.us/hc/en-us/articles/360000030683-Zoom-Rooms-digital-signage#h_4e25ddf3-8f97-4957-8f8b-99725f940fa7). The value of this field can be either `standard` or `video_content`.

                          `standard`: Standard Center<br>
                          `video_content`: Video + Content
                      banner:
                        type: object
                        properties:
                          banner_room_name:
                            type: boolean
                          banner_sharing_key:
                            type: boolean
                          banner_time:
                            type: boolean
                      display_period:
                        type: object
                        description: Display period object lets you define the number of minutes before or after the scheduled meeting time you would like the content to display.
                        properties:
                          start_displaying_content:
                            type: integer
                            description: Start displaying digital signage content after certain duration after the meeting ends. Specify the value of the duration in minutes in this field.
                          stop_displaying_content:
                            type: integer
                            description: 'Stop displaying content {certain_duration} before a meeting is scheduled to begin. Specify the value of duration in minutes in this field.'
                      mute:
                        type: boolean
                        description: Sound of all contents will be muted if the value of this field is set to `true`.
                      enable_digital_signage:
                        type: boolean
                        description: |-
                          [Enable or disable digital signage](https://support.zoom.us/hc/en-us/articles/360000030683-Zoom-Rooms-digital-signage#h_767fbb33-82a8-45a8-8392-a1bfa9687edd). <br>
                          `true`: enable<br> `false`: disable
                      play_list:
                        type: array
                        maxItems: 2
                        description: Content list.
                        items:
                          type: object
                          properties:
                            action:
                              type: string
                              enum:
                                - add
                                - update
                                - delete
                              description: |
                                Specify an action for the content list. The value can be one of the following:<br>
                                `add`: Add another content list.<br>
                                `update`: Update existing content list.<br>
                                `delete`: Delete content list.
                            id:
                              type: string
                              description: Unique identifier of the content list. This field is only required if you would like to remove or update the content list.
                            name:
                              type: string
                              description: Name of the content list.
                            start_time:
                              type: string
                              description: Specify the display start time for the content list in GMT.
                            end_time:
                              type: string
                              description: Specify the display end time for the content list in GMT.
                            contents:
                              type: array
                              maxItems: 3
                              items:
                                type: object
                                description: Content list.
                                properties:
                                  action:
                                    type: string
                                    description: |+
                                      Specify an action for the content in the content list. The value can be one of the following:<br>
                                      `add`: Add another content to the content list.<br>
                                      `update`: Update existing content's information in the content list.<br>
                                      `delete`: Delete content from the content list.

                                  id:
                                    type: string
                                    description: Unique identifier of the content. This field is only required if you would like to remove or update the content information.
                                  content_id:
                                    type: string
                                    description: Content Id.
                                  name:
                                    type: string
                                    description: Name of the content.
                                  duration:
                                    type: integer
                                    description: 'By default each content is display for 5 seconds. Using this field, specify how long you would like to display the content.'
                                  order:
                                    type: integer
                                    description: Order of the content in the display.
            type: object
          x-examples:
            application/json:
              zoom_rooms:
                upcoming_meeting_alert: true
                show_alert_before_meeting: false
                start_airplay_manually: false
                weekly_system_restart: false
                display_meeting_list: false
                display_top_banner: false
                display_feedback_survey: false
                auto_direct_sharing: true
                transform_meeting_to_private: true
                hide_id_for_private_meeting: false
                auto_start_scheduled_meeting: true
                auto_stop_scheduled_meeting: false
                audio_device_daily_auto_test: false
                support_join_3rd_party_meeting: false
                email_address_prompt_before_recording: true
                secure_connection_channel: true
                encrypt_shared_screen_content: false
                allow_multiple_content_sharing: false
                show_non_video_participants: true
                show_call_history_in_room: true
                make_room_alternative_host: true
                show_contact_list_on_controller: false
                count_attendees_number_in_room: false
                send_whiteboard_to_internal_contact_only: true
        - in: query
          name: setting_type
          type: string
          description: |-
            The type of setting that you would like to update.<br> `alert`: Alert Settings applied on the Zoom Rooms Account.<br>
            `meeting`: Meeting settings of the Zoom Rooms Account.<br>
            `signage`: View digital signage settings of the Zoom Rooms Account.
          required: true
          default: meeting
  /rooms/locations:
    get:
      responses:
        '200':
          description: |
            **HTTP Status Code:** `200` **OK**<br>
            Zoom Room locations listed successfully.
          schema:
            type: object
            properties:
              page_size:
                type: integer
                description: The number of records returned within a single API call.
              next_page_token:
                type: string
                description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
              locations:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Unique Identifier of the location.
                    name:
                      type: string
                      description: Name of the location.
                    parent_location_id:
                      type: string
                      description: |-
                        ID (Unique Identifier) of the parent location. For instance, if a Zoom Room is located in Floor 1 of Building A, the location of Building A will be the parent location of Floor 1 and the parent_location_id of Floor 1 will be the ID of Building A.<br>
                        The value of parent_location_id of the top-level location (country) is the Account ID of the Zoom account.
                    type:
                      type: string
                      description: |-
                        The type of location. The value can be one of the following:
                        `country`, `states`, `city`, `campus`, `building`, `floor`.
                      enum:
                        - country
                        - states
                        - city
                        - campus
                        - building
                        - floor
          examples:
            application/json: |-
              {
                "page_size": 30,
                "next_page_token": "",
                "locations": [
                  {
                    "id": "AAAAAAAAAA",
                    "name": "Country/Region1",
                    "parent_location_id": "I-qsfdUbbbbg",
                    "type": "country"
                  },
                  {
                    "id": "BBBBBBBB",
                    "name": "State1",
                    "parent_location_id": "AAAAAAAAAA",
                    "type": "state"
                  },
                  {
                    "id": "ccccddddd,
                    "name": "City1",
                    "parent_location_id": "BBBBBBBB",
                    "type": "city"
                  },
                  {
                    "id": "fgaajfjfhgjgjgjg",
                    "name": "Campus1",
                    "parent_location_id": "ccccddddd,
                    "type": "campus"
                  },
                  {
                    "id": "YQGK12344",
                    "name": "Building1",
                    "parent_location_id": "fgaajfjfhgjgjgjg",
                    "type": "building"
                  },
                  {
                    "id": "uUbbbbbbbb",
                    "name": "Floor1",
                    "parent_location_id": "YQGK12344",
                    "type": "floor"
                  }
                ]
              }
        '400':
          description: |
            **HTTP Status Code:** `400` **Bad Request**<br>

            **Error Code:** `200`<br>
            Zoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>
            **Error Code:** `300`<br>
            Location type not exist.<br>
        '404':
          description: |-
            **HTTP Status Code:** `404` **Not Found**<br>

            **Error Code:** `4801`<br>
             Location not found:{parent_location_id}.
      summary: List Zoom Room locations
      description: |-
        A Zoom account owner or a Zoom Room administrator can establish a [location hierarchy](https://support.zoom.us/hc/en-us/articles/115000342983-Zoom-Rooms-Location-Hierarchy) to help manage Zoom Rooms that are spread among a variety of locations. Use this API to list the different location types used for Zoom Rooms in an account.<br><br>
        **Prerequisites:**
        * Account owner or admin permissions.
        * Zoom Rooms Version 4.0 or higher<br><br>
        **Scopes:** `room:read:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      operationId: listZRLocations
      security:
        - OAuth: []
      parameters:
        - in: query
          name: parent_location_id
          type: string
          description: 'A unique identifier for the parent location. For instance, if a Zoom Room is located in Floor 1 of Building A, the location of Building A will be the parent location of Floor 1. Use this parameter to filter the response by a specific location hierarchy level.'
        - in: query
          name: type
          type: string
          description: |-
            Use this field to filter the response by the type of location. The value can be one of the following:
            `country`, `states`, `city`, `campus`, `building`, `floor`.
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/NextPageToken'
      tags:
        - Rooms Location
    post:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` **OK**<br>
            Location added successfully.
          schema:
            type: object
            properties:
              id:
                type: string
                description: 'Location ID: Unique Identifier of the location that was added.'
              name:
                type: string
                description: Name of the location.
              type:
                type: string
                description: |-
                  Type of location. The value should be one of the following:<br>
                  `country`, `states`, `city`, `campus`, `building`, `floor`.
                enum:
                  - country
                  - states
                  - city
                  - campus
                  - building
                  - floor
              parent_location_id:
                type: string
                description: Unique Identifier of the parent location.
          examples:
            application/json:
              id: sedo534pis
              name: San Jose City
              type: City
              parent_location_id: gdrgre54t5th
        '400':
          description: |
            **HTTP Status Code:** `400` **Bad Request**<br><br>
            **Error Code:** `200`<br>
            Zoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br><br>
            **Error Code:** `300`<br>
            Location name already exists. Try a different location name.<br>
            Invalid parent location id {parent_location_id}
        '404':
          description: |-
            **HTTP Status Code:** `404` **Not Found**<br><br>
            **Error Code:** `4801`<br>
            Location not exist {parent_location_id}
      summary: Add a location
      description: |-
        Add a location to the [location hierarchial structure(s)](https://support.zoom.us/hc/en-us/articles/115000342983-Zoom-Rooms-Location-Hierarchy) of Zoom Rooms in an account.

        **Prerequisites:**
        * Account owner or admin permissions.
        * Zoom Rooms Version 4.0 or higher<br><br>
        **Scopes:** `room:write:admin`<br>


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      operationId: addAZRLocation
      tags:
        - Rooms Location
      security:
        - OAuth: []
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              name:
                type: string
                description: Name of the location. The name must be unique and shouldn't have already been used in the same account.
              parent_location_id:
                type: string
                description: 'The location ID of the location that is a level higher from the location that is being added.<br><br> For example, to add a City named "City 1" as the child location under a State named "State 1", you must provide the location ID of "State 1". This can be retrieved using the [List Zoom Room Locations](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations) API.'
          x-examples:
            application/json:
              name: San Jose City
              parent_location_id: csdfus33dsf
  '/rooms/locations/{locationId}':
    get:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` **OK**<br>
            Zoom Rooms Location Profile returned successfully.
          schema:
            type: object
            properties:
              basic:
                type: object
                properties:
                  name:
                    type: string
                    description: Name of the location type.
                  'description ':
                    type: string
                    description: Description about the location.
                  timezone:
                    type: string
                    description: Timezone (only returned for location type - city).
                  address:
                    type: string
                    description: Address
                  support_email:
                    type: string
                    description: |
                      The email address to be used for reporting Zoom Room issues.
                    format: email
                  support_phone:
                    type: string
                    description: |
                      The phone number to be used for reporting Zoom Room issues.
                  room_passcode:
                    type: string
                    description: 1-16 digit number or characters that is used to secure your Zoom Rooms application.
                    minLength: 1
                    maxLength: 16
                  required_code_to_ext:
                    description: |
                      Require code to exit out of your Zoom Rooms application to switch between other apps.
                    type: boolean
          examples:
            application/json:
              basic:
                name: Kathmandu
                description: This Zoom Rooms is located in Kathmandu.
                timezone: Asia/Kathmandu
                support_email: abb123@123
                support_phone: '00222'
                room_passcode: '12234'
                required_code_to_ext: true
        '400':
          description: |+
            **HTTP Status Code:** `400` **Bad Request**<br>
            **Error Code:** `200`<br>
            Zoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>
            Access restricted.<br>





        '404':
          description: |-
            **HTTP Status Code:** `404` **Not Found**<br>
            **Error Code:** `4801`<br>
            Location not found: {locationId}.
      summary: Get Zoom Room location profile
      description: |-
        Each location type of the [Zoom Rooms location hierarchy](https://support.zoom.us/hc/en-us/articles/115000342983-Zoom-Rooms-Location-Hierarchy) has a profile page that includes information such as name of the location, address, support email, etc. Use this API to retrieve information about a specific Zoom Rooms location type such as information about the city where the Zoom Rooms is located.

        **Prerequisite:**<br>
        * Account owner or admin permission
        * Zoom Rooms version 4.0 or higher<br>
        **Scopes:** `room:read:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      operationId: getZRLocationProfile
      tags:
        - Rooms Location
      security:
        - OAuth: []
      parameters:
        - in: path
          name: locationId
          type: string
          required: true
          description: 'Unique identifier of the location type. This can be retrieved using the [List Zoom Room Location API](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations) (Id property in the response).'
    parameters:
      - name: locationId
        in: path
        type: string
        required: true
    patch:
      responses:
        '200':
          description: ''
          schema: {}
      summary: Update Zoom Room location profile
      description: |-
        Each location type of the [Zoom Rooms location hierarchy](https://support.zoom.us/hc/en-us/articles/115000342983-Zoom-Rooms-Location-Hierarchy) has a profile page that includes information such as name of the location, address, support email, etc. Use this API to update information about a specific Zoom Rooms location type such as information about the city where the Zoom Rooms is located.

        **Prerequisite:**<br>
        * Account owner or admin permission
        * Zoom Rooms version 4.0 or higher<br>
        **Scopes:** `room:write:admin`<br>


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      operationId: updateZRLocationProfile
      tags:
        - Rooms Location
      security:
        - OAuth: []
      parameters:
        - in: path
          name: locationId
          type: string
          required: true
          description: 'Unique Identifier of the location. This can be retrieved from the [List Zoom Room Locations](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations) API.'
        - in: body
          name: body
          schema:
            type: object
            properties:
              basic:
                type: object
                properties:
                  name:
                    type: string
                    description: Name of the location type.
                  'description ':
                    type: string
                    description: Description about the location.
                  timezone:
                    type: string
                    description: Timezone (can only be updated for location type - city).
                  address:
                    type: string
                    description: Address. Can only be updated for Campus and Building.
                  support_email:
                    type: string
                    description: |
                      The email address to be used for reporting Zoom Room issues.
                    format: email
                  support_phone:
                    type: string
                    description: |
                      The phone number to be used for reporting Zoom Room issues.
                  room_passcode:
                    type: string
                    description: 1-16 digit number or characters that is used to secure your Zoom Rooms application.
                    minLength: 1
                    maxLength: 16
                  required_code_to_ext:
                    description: |
                      Require code to exit out of your Zoom Rooms application to switch between other apps.
                    type: boolean
          x-examples:
            application/json:
              basic:
                name: gfhgfhfh
                'description ': esse
                timezone: magna incididunt irure voluptate id
                address: enim id sint
                support_email: WjFz@iYxpxDCRJQhZeBYtla.qb
                support_phone: anim eiusmod sit
                room_passcode: et
                required_code_to_ext: false
  '/rooms/locations/{locationId}/settings':
    get:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` **OK**<br>
            Zoom Room location settings returned successfully.
          schema:
            oneOf:
              - properties:
                  zoom_rooms:
                    type: object
                    properties:
                      upcoming_meeting_alert:
                        type: boolean
                        description: 'If enabled, a reminder will display 10 minutes prior to the next scheduled meeting on the controller.'
                      show_alert_before_meeting:
                        type: boolean
                        description: 'If enabled, the upcoming meeting alert message will be shown on the TV display. The value of the `upcoming_meeting_alert` field should be set to `true` to use this field. '
                      start_airplay_mirroring:
                        type: boolean
                        description: Allow users to share content via Apple Screen Mirroring (called Airplay on iOS 11 or earlier) in Zoom Rooms
                      start_airplay_manually:
                        type: boolean
                        description: 'Require the AirPlay service to be [started by an administrator](https://support.zoom.us/hc/en-us/articles/204726885-Screen-Share-Using-Airplay-Mirroring#h_a342ad38-4e46-47a8-a1d9-cded3b144b39) rather than always being available.'
                      weekly_system_restart:
                        type: boolean
                        description: '[Restart](https://support.zoom.us/hc/en-us/articles/205418949-Zoom-Rooms-Weekly-System-Restart) the Zoom Rooms computer and controller once a week.'
                      display_meeting_list:
                        type: boolean
                        description: ' Show the same information on the TV that is shown on the controller.'
                      display_top_banner:
                        type: boolean
                        description: 'Allow to display room name, time and sharing key on the top portion of TV.'
                      display_feedback_survey:
                        type: boolean
                        description: 'Display a [survey](https://support.zoom.us/hc/en-us/articles/214193146-End-of-Meeting-Attendee-Feedback) at the end of each meeting regarding the audio and video quality on the Zoom Rooms Controller.'
                      auto_accept_incoming_call_and_fecc:
                        type: boolean
                        description: |-
                          Automatically accept incoming calls made from other Zoom Rooms or contacts in your account. Enabling this setting will also automatically allow far-end camera control.

                          This setting is returned only for location type - "country".
                      hide_self_view:
                        type: boolean
                        description: |-
                          If enabled, you will not see your own video but other people in the meeting can still see your video.

                          This setting is returned only for location type - "country".
                      lock_speaker_volume_control:
                        type: boolean
                        description: |-
                          Lock speaker volume control on controller.

                          This setting is returned only for location type - "country".
                      start_hdmi_content_share_manualy:
                        type: boolean
                        description: |-
                          Disable automatic detection and enable manual content sharing from a device to a Zoom Room. Learn more [here](https://support.zoom.us/hc/en-us/articles/201504265-Wired-HDMI-Screen-Share-via-Capture-Device).

                          This setting is returned only for location type - "country".
                      auto_direct_sharing:
                        type: boolean
                        description: Enable participants in a Zoom Room to share their laptop screen on the Zoom Room TV without entering a meeting ID or sharing code.
                      voice_commands:
                        type: boolean
                        description: 'Enable [voice commands](https://support.zoom.us/hc/en-us/articles/115000527983-Voice-Command-with-Zoom-Rooms) with Zoom Rooms.'
                      transform_meeting_to_private:
                        type: boolean
                        description: 'If enabled, all meetings in this room will be treated as [private meetings](https://support.zoom.us/hc/en-us/articles/115001051063-Zoom-Rooms-Private-Meetings), and the Zoom Room will display "Your Name''s Meeting" instead of the real meeting topic.'
                      hide_id_for_private_meeting:
                        type: boolean
                        description: 'If enabled, the meeting host and meeting ID (in addition to the meeting topic) are hidden from the Zoom Rooms display for private meetings. This affects meetings that were originally scheduled as private, as well as public meetings that were transformed to private.'
                      auto_start_scheduled_meeting:
                        type: boolean
                        description: Automatically start scheduled meetings according to the start time listed on the calendar associated with the room. A meeting alert will appear 10 minutes prior to the scheduled time on the TV.
                      auto_stop_scheduled_meeting:
                        type: boolean
                        description: 'Automatically stop the meeting at the end time as scheduled and listed in the calendar associated with the room. '
                      audio_device_daily_auto_test:
                        type: boolean
                        description: 'Enable [automated audio test](https://support.zoom.us/hc/en-us/articles/360000319683-Zoom-Rooms-Daily-Audio-Testing) to ensure high quality audio.'
                      support_join_3rd_party_meeting:
                        type: boolean
                        description: 'Integrate with Skype for Business, GoToMeeting, or WebEx and show the meeting dial-in button on the meeting list tab for Zoom Rooms Controllers.'
                      encrypt_shared_screen_content:
                        type: boolean
                        description: Encrypt screen and content shared in meetings.
                      allow_multiple_content_sharing:
                        type: boolean
                        description: 'Enable multiple participants to [share content simultaneously](https://support.zoom.us/hc/en-us/articles/360017767812-Sharing-Multiple-Screens-in-a-Zoom-Room) by default.'
                      show_non_video_participants:
                        type: boolean
                        description: 'When enabled, meeting participants that are audio only or have their video turned off will also be shown on the Zoom Rooms display by default.'
                      show_call_history_in_room:
                        type: boolean
                        description: |
                          Allow users to see call history of joined meetings and phone calls from the Zoom Rooms controller.
                      show_contact_list_on_controller:
                        type: boolean
                        description: 'If enabled, you can invite participants from the contact list during a meeting or when starting a meeting'
                      count_attendees_number_in_room:
                        type: boolean
                        description: |
                          Use facial detection technology to [determine and display the attendees count](https://support.zoom.us/hc/en-us/articles/360031027111-Count-Attendees-in-Zoom-Rooms) after meetings on Dashboard.
                      send_whiteboard_to_internal_contact_only:
                        type: boolean
                        description: 'Restrict[ sending Whiteboard sessions](https://support.zoom.us/hc/en-us/articles/115004797286-Using-the-Whiteboard-in-Zoom-Rooms-for-Touch#h_781274b3-5237-4320-8826-be2120b00e21) to contacts or internal users only.'
                  meeting_security:
                    type: object
                    properties:
                      end_to_end_encrypted_meetings:
                        type: boolean
                        description: 'Allows use of end-to-end encryption for meetings. If set to `true`, the encryption type is specified in `encryption_type` field.'
                      encryption_type:
                        type: string
                        description: |-
                          Specifies whether enhanced encryption or [end-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871) is being used when starting or a meeting. When using end-to-end encryption, several features (e.g. cloud recording, phone/SIP/H.323 dial-in) will be **automatically disabled**. <br><br>The value of this field can be one of the following:<br>
                          `enhanced_encryption`: Enhanced encryption. Encryption is stored in the cloud if you enable this option. <br>

                          `e2ee`: [End-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871). The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also **disables** the following features: join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions.
                        enum:
                          - enhanced_encryption
                          - e2ee
              - properties:
                  client_alert:
                    type: object
                    description: 'The Client Alert Settings section includes alerts that display on the TV screen of the Zoom Room. Disable these settings if you have deliberately disconnected one or more peripheral devices or have never enabled them. '
                    properties:
                      detect_microphone_error_alert:
                        type: boolean
                        description: Display an alert message when an issue is detected with microphone.
                      detect_bluetooth_microphone_error_alert:
                        type: boolean
                        description: Display an alert message when an issue is detected with a bluetooth microphone.
                      detect_speaker_error_alert:
                        type: boolean
                        description: Display an alert message when an issue is detected with a speaker.
                      detect_bluetooth_speaker_error_alert:
                        type: boolean
                        description: Display an alert message when an issue is detected with a bluetooth speaker.
                      detect_camera_error_alert:
                        type: boolean
                        description: Display an alert message when an issue is detected with a camera.
                  notification:
                    type: object
                    description: '[Notifications Settings](https://support.zoom.us/hc/en-us/articles/205394099-Zoom-Room-Alerts#h_b430b5f2-5150-4522-9c96-c77f22ab70bc) includes the circumstances in which the room sends an email alert to the support team to notify them of a potentially urgent issue. These issues can affect the operation of the room, but do not display on the TV screen. The email alert is sent to the email address specified in the Notification Email Recipients section. '
                    properties:
                      audio_not_meet_usability_threshold:
                        type: boolean
                        description: Send an alert when the audio echo test result does not meet usability threshold.
                      audio_meet_usability_threshold:
                        type: boolean
                        description: Send an alert when the audio echo test result meets usability threshold.
                      battery_low_and_not_charging:
                        type: boolean
                        description: Send an alert when the battery of the controller or the scheduling display is low (at 20%) and is not being charged.
                      battery_is_charging:
                        type: boolean
                        description: Send an alert when the battery starts charging.
                      battery_percentage:
                        type: string
                        description: 'Specify a percentage so that an alert is sent when the battery is less than the {battery_percentage} that you specified.'
                      controller_scheduling_disconnected:
                        type: boolean
                        description: Send an alert when the connection to the Controller or Scheduling Display cannot be detected.
                      controller_scheduling_reconnected:
                        type: boolean
                        description: Send an alert when the Controller or Scheduling Display can be detected again.
                      cpu_usage_high_detected:
                        type: boolean
                        description: Send an alert when CPU usage is above 90%.
                      network_unstable_detected:
                        type: boolean
                        description: Send an alert when low bandwidth network is detected
                      zoom_room_offline:
                        type: boolean
                        description: Send an alert when the machine hosting the Zoom Room application has a network issue or cannot connect with the Controller.
                      zoom_room_come_back_online:
                        type: boolean
                        description: Send an alert when the Zoom Room is online after previously being offline.
                      sip_registration_failed:
                        type: boolean
                        description: 'Send an alert when SIP registration stops working. '
                      sip_registration_re_enabled:
                        type: boolean
                        description: Send an alert after the SIP registration is re-enabled.
                      mic_speaker_camera_disconnected:
                        type: boolean
                        description: 'Send an alert when the mic, speaker or camera is disconnected in the Zoom Room.'
                      mic_speaker_camera_reconnected:
                        type: boolean
                        description: 'Send an alert when the mic, speaker or camera is reconnected.'
                      zoom_room_display_disconnected:
                        type: boolean
                        description: Send an alert when the TV display is disconnected
                  digital_signage:
                    type: object
                    properties:
                      layout:
                        type: string
                        description: |-
                          Set the [layout](https://support.zoom.us/hc/en-us/articles/360000030683-Zoom-Rooms-digital-signage#h_4e25ddf3-8f97-4957-8f8b-99725f940fa7). The value of this field can be either `standard` or `video_content`.

                          `standard`: Standard Center<br>
                          `video_content`: Video + Content
                      banner:
                        type: object
                        description: Specifies the elements that you want to display in the top banner.
                        properties:
                          banner_room_name:
                            type: boolean
                            description: Display or hide banner room name.
                          banner_sharing_key:
                            type: boolean
                            description: Display or hide banner sharing key.
                          banner_time:
                            type: boolean
                            description: Display or hide time in the banner.
                      display_period:
                        type: object
                        description: Display period object lets you define the number of minutes before or after the scheduled meeting time you would like the content to display.
                        properties:
                          start_displaying_content:
                            type: integer
                            description: Start displaying digital signage content after certain duration after the meeting ends. The value of this field indicates the duration in minutes.
                          stop_displaying_content:
                            type: integer
                            description: 'Stop displaying content {certain_duration} before a meeting is scheduled to begin. The value of this field indicates the duration in minutes.'
                      mute:
                        type: boolean
                        description: Sound of all contents will be muted if the value of this field is set to `true`.
                      enable_digital_signage:
                        type: boolean
                        description: |-
                          [Indicates whether digital signage is on or off,](https://support.zoom.us/hc/en-us/articles/360000030683-Zoom-Rooms-digital-signage#h_767fbb33-82a8-45a8-8392-a1bfa9687edd). <br>
                          `true`: enable<br> `false`: disable
                      play_list:
                        type: array
                        maxItems: 2
                        description: Content list.
                        items:
                          type: object
                          properties:
                            action:
                              type: string
                              enum:
                                - add
                                - update
                                - delete
                              description: |
                                Specify an action for the content list. The value can be one of the following:<br>
                                `add`: Add another content list.<br>
                                `update`: Update existing content list.<br>
                                `delete`: Delete content list.
                            id:
                              type: string
                              description: Unique identifier of the content list. This field is only required if you would like to remove or update the content list.
                            name:
                              type: string
                              description: Name of the content list.
                            start_time:
                              type: string
                              description: Specify the display start time for the content list in GMT.
                            end_time:
                              type: string
                              description: Specify the display end time for the content list in GMT.
                            contents:
                              type: array
                              maxItems: 3
                              items:
                                type: object
                                description: Content list.
                                properties:
                                  content_id:
                                    type: string
                                    description: Content Id.
                                  name:
                                    type: string
                                    description: Name of the content.
                                  duration:
                                    type: integer
                                    description: Duration for how long the content will be displayed.
                                  order:
                                    type: integer
                                    description: Order of the content in the display.
                                  id:
                                    type: string
            type: object
          examples:
            application/json:
              client_alert:
                detect_microphone_error_alert: true
                detect_bluetooth_microphone_error_alert: true
                detect_speaker_error_alert: true
                detect_bluetooth_speaker_error_alert: true
                detect_camera_error_alert: true
              notification:
                audio_not_meet_usability_threshold: false
                battery_low_and_not_charging: false
                controller_scheduling_disconnected: false
                cpu_usage_high_detected: false
                network_unstable_detected: false
                zoom_room_offline: false
                sip_registration_failed: false
                mic_speaker_camera_disconnected: false
                zoom_room_display_disconnected: false
        '400':
          description: |-
            **HTTP Status Code:** `400` **Bad Request**<br>

            **Error Code:** `200`<br>
            Zoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>
            Access Restricted.
        '404':
          description: |+
            **HTTP Status Code:** `404` **Not Found**<br>

            **Error Code:** `4801`<br>
            Location not found: {locationId}

      summary: Get location settings
      description: |-
        Get information on meeting or alert settings applied to Zoom Rooms located in a specific location. By default, only **Meeting Settings** are returned. To view only **Alert Settings**, specify `alert` as the value of the `setting_type` query parameter.<br><br>
        **Prerequisites:**<br>
        * Zoom Room licenses
        * Owner or Admin privileges on the Zoom Account.<br>
        **Scopes:** `room:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      operationId: getZRLocationSettings
      tags:
        - Rooms Location
      security:
        - OAuth: []
      parameters:
        - in: query
          name: setting_type
          type: string
          required: true
          description: |-
            The type of setting that you would like to retrieve.<br> `alert`: Alert Settings applied on the Zoom Rooms Account.<br>
            `meeting`: Meeting settings of the Zoom Rooms Account.<br>
            `signage`: Digital signage settings of the Zoom Rooms Account.
          default: meeting
        - in: path
          name: locationId
          type: string
          required: true
          description: 'Unique identifier of the location type. This can be retrieved using the [List Zoom Room Location API](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations) (Id property in the response).'
    parameters:
      - name: locationId
        in: path
        type: string
        required: true
    patch:
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` **No Content**<br>
            Location settings updated successfully.
          schema: {}
        '400':
          description: |-
            **HTTP Status Code:** `400` **Bad Request**<br><br>
            **Error Code:** `200`<br>
            Zoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>
            Access restricted.
        '404':
          description: |-
            **HTTP Status Code:** `404` **Not Found**<br><br>
            **Error Code:** `4801`<br>
            Location not found: {locationId}
      summary: Update location settings
      description: |-
        Update information on either meeting or alert settings applied to Zoom Rooms located in a specific location. To update **Alert Settings**, specify `alert` as the value of the `setting_type` query parameter. Similarly, to update **Meeting Settings**, specify `meeting` as the value of the `setting_type` query parameter.<br><br>
        **Prerequisites:**<br>
        * Zoom Room licenses
        * Owner or Admin privileges on the Zoom Account.<br>
        **Scopes:** `room:write:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      parameters:
        - in: body
          name: body
          schema:
            oneOf:
              - properties:
                  zoom_rooms:
                    type: object
                    properties:
                      upcoming_meeting_alert:
                        type: boolean
                        description: 'If enabled, a reminder will display 10 minutes prior to the next scheduled meeting on the controller.'
                      show_alert_before_meeting:
                        type: boolean
                        description: 'If enabled, the upcoming meeting alert message will be shown on the TV display. The value of the `upcoming_meeting_alert` field should be set to `true` to use this field. '
                      start_airplay_mirroring:
                        type: boolean
                        description: Allow users to share content via Apple Screen Mirroring (called Airplay on iOS 11 or earlier) in Zoom Rooms
                      start_airplay_manually:
                        type: boolean
                        description: 'Require the AirPlay service to be [started by an administrator](https://support.zoom.us/hc/en-us/articles/204726885-Screen-Share-Using-Airplay-Mirroring#h_a342ad38-4e46-47a8-a1d9-cded3b144b39) rather than always being available.'
                      weekly_system_restart:
                        type: boolean
                        description: '[Restart](https://support.zoom.us/hc/en-us/articles/205418949-Zoom-Rooms-Weekly-System-Restart) the Zoom Rooms computer and controller once a week.'
                      display_meeting_list:
                        type: boolean
                        description: ' Show the same information on the TV that is shown on the controller.'
                      display_top_banner:
                        type: boolean
                        description: 'Allow to display room name, time and sharing key on the top portion of TV.'
                      display_feedback_survey:
                        type: boolean
                        description: 'Display a [survey](https://support.zoom.us/hc/en-us/articles/214193146-End-of-Meeting-Attendee-Feedback) at the end of each meeting regarding the audio and video quality on the Zoom Rooms Controller.'
                      auto_accept_incoming_call_and_fecc:
                        type: boolean
                        description: |-
                          Automatically accept incoming calls made from other Zoom Rooms or contacts in your account. Enabling this setting will also automatically allow far-end camera control.

                          This setting is returned only for location type - "country".
                      hide_self_view:
                        type: boolean
                        description: |-
                          If enabled, you will not see your own video but other people in the meeting can still see your video.

                          This setting is returned only for location type - "country".
                      lock_speaker_volume_control:
                        type: boolean
                        description: |-
                          Lock speaker volume control on controller.

                          This setting is returned only for location type - "country".
                      start_hdmi_content_share_manualy:
                        type: boolean
                        description: |-
                          Disable automatic detection and enable manual content sharing from a device to a Zoom Room. Learn more [here](https://support.zoom.us/hc/en-us/articles/201504265-Wired-HDMI-Screen-Share-via-Capture-Device).

                          This setting is returned only for location type - "country".
                      auto_direct_sharing:
                        type: boolean
                        description: Enable participants in a Zoom Room to share their laptop screen on the Zoom Room TV without entering a meeting ID or sharing code.
                      voice_commands:
                        type: boolean
                        description: 'Enable [voice commands](https://support.zoom.us/hc/en-us/articles/115000527983-Voice-Command-with-Zoom-Rooms) with Zoom Rooms.'
                      transform_meeting_to_private:
                        type: boolean
                        description: 'If enabled, all meetings in this room will be treated as [private meetings](https://support.zoom.us/hc/en-us/articles/115001051063-Zoom-Rooms-Private-Meetings), and the Zoom Room will display "Your Name''s Meeting" instead of the real meeting topic.'
                      hide_id_for_private_meeting:
                        type: boolean
                        description: 'If enabled, the meeting host and meeting ID (in addition to the meeting topic) are hidden from the Zoom Rooms display for private meetings. This affects meetings that were originally scheduled as private, as well as public meetings that were transformed to private.'
                      auto_start_scheduled_meeting:
                        type: boolean
                        description: Automatically start scheduled meetings according to the start time listed on the calendar associated with the room. A meeting alert will appear 10 minutes prior to the scheduled time on the TV.
                      auto_stop_scheduled_meeting:
                        type: boolean
                        description: 'Automatically stop the meeting at the end time as scheduled and listed in the calendar associated with the room. '
                      audio_device_daily_auto_test:
                        type: boolean
                        description: 'Enable [automated audio test](https://support.zoom.us/hc/en-us/articles/360000319683-Zoom-Rooms-Daily-Audio-Testing) to ensure high quality audio.'
                      support_join_3rd_party_meeting:
                        type: boolean
                        description: 'Integrate with Skype for Business, GoToMeeting, or WebEx and show the meeting dial-in button on the meeting list tab for Zoom Rooms Controllers.'
                      encrypt_shared_screen_content:
                        type: boolean
                        description: Encrypt screen and content shared in meetings.
                      allow_multiple_content_sharing:
                        type: boolean
                        description: 'Enable multiple participants to [share content simultaneously](https://support.zoom.us/hc/en-us/articles/360017767812-Sharing-Multiple-Screens-in-a-Zoom-Room) by default.'
                      show_non_video_participants:
                        type: boolean
                        description: 'When enabled, meeting participants that are audio only or have their video turned off will also be shown on the Zoom Rooms display by default.'
                      show_call_history_in_room:
                        type: boolean
                        description: |
                          Allow users to see call history of joined meetings and phone calls from the Zoom Rooms controller.
                      show_contact_list_on_controller:
                        type: boolean
                        description: 'If enabled, you can invite participants from the contact list during a meeting or when starting a meeting'
                      count_attendees_number_in_room:
                        type: boolean
                        description: |
                          Use facial detection technology to [determine and display the attendees count](https://support.zoom.us/hc/en-us/articles/360031027111-Count-Attendees-in-Zoom-Rooms) after meetings on Dashboard.
                      send_whiteboard_to_internal_contact_only:
                        type: boolean
                        description: 'Restrict[ sending Whiteboard sessions](https://support.zoom.us/hc/en-us/articles/115004797286-Using-the-Whiteboard-in-Zoom-Rooms-for-Touch#h_781274b3-5237-4320-8826-be2120b00e21) to contacts or internal users only.'
                  meeting_security:
                    type: object
                    properties:
                      end_to_end_encrypted_meetings:
                        type: boolean
                        description: 'Allow use of end-to-end encryption for meetings. If set to `true`, you can specify the encryption type in `encryption_type` field.'
                      encryption_type:
                        type: string
                        description: |-
                          Choose between enhanced encryption and [end-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871) when starting or a meeting. When using end-to-end encryption, several features (e.g. cloud recording, phone/SIP/H.323 dial-in) will be **automatically disabled**. <br><br>The value of this field can be one of the following:<br>
                          `enhanced_encryption`: Enhanced encryption. Encryption is stored in the cloud if you enable this option. <br>

                          `e2ee`: [End-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871). The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also **disables** the following features: join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions.
                        enum:
                          - enhanced_encryption
                          - e2ee
              - properties:
                  client_alert:
                    type: object
                    description: 'The Client Alert Settings section includes alerts that display on the TV screen of the Zoom Room. Disable these settings if you have deliberately disconnected one or more peripheral devices or have never enabled them. '
                    properties:
                      detect_microphone_error_alert:
                        type: boolean
                        description: Display an alert message when an issue is detected with microphone.
                      detect_bluetooth_microphone_error_alert:
                        type: boolean
                        description: Display an alert message when an issue is detected with a bluetooth microphone.
                      detect_speaker_error_alert:
                        type: boolean
                        description: Display an alert message when an issue is detected with a speaker.
                      detect_bluetooth_speaker_error_alert:
                        type: boolean
                        description: Display an alert message when an issue is detected with a bluetooth speaker.
                      detect_camera_error_alert:
                        type: boolean
                        description: Display an alert message when an issue is detected with a camera.
                  notification:
                    type: object
                    description: '[Notifications Settings](https://support.zoom.us/hc/en-us/articles/205394099-Zoom-Room-Alerts#h_b430b5f2-5150-4522-9c96-c77f22ab70bc) includes the circumstances in which the room sends an email alert to the support team to notify them of a potentially urgent issue. These issues can affect the operation of the room, but do not display on the TV screen. The email alert is sent to the email address specified in the Notification Email Recipients section. '
                    properties:
                      audio_not_meet_usability_threshold:
                        type: boolean
                        description: Send an alert when the audio echo test result does not meet usability threshold.
                      audio_meet_usability_threshold:
                        type: boolean
                        description: Send an alert when the audio echo test result meets usability threshold.
                      battery_low_and_not_charging:
                        type: boolean
                        description: Send an alert when the battery of the controller or the scheduling display is low (at 20%) and is not being charged.
                      battery_is_charging:
                        type: boolean
                        description: Send an alert when the battery starts charging.
                      battery_percentage:
                        type: string
                        description: 'Specify a percentage so that an alert is sent when the battery is less than the {battery_percentage} that you specified.'
                      controller_scheduling_disconnected:
                        type: boolean
                        description: Send an alert when the connection to the Controller or Scheduling Display cannot be detected.
                      controller_scheduling_reconnected:
                        type: boolean
                        description: Send an alert when the Controller or Scheduling Display can be detected again.
                      cpu_usage_high_detected:
                        type: boolean
                        description: Send an alert when CPU usage is above 90%.
                      network_unstable_detected:
                        type: boolean
                        description: Send an alert when low bandwidth network is detected
                      zoom_room_offline:
                        type: boolean
                        description: Send an alert when the machine hosting the Zoom Room application has a network issue or cannot connect with the Controller.
                      zoom_room_come_back_online:
                        type: boolean
                        description: Send an alert when the Zoom Room is online after previously being offline.
                      sip_registration_failed:
                        type: boolean
                        description: 'Send an alert when SIP registration stops working. '
                      sip_registration_re_enabled:
                        type: boolean
                        description: Send an alert after the SIP registration is re-enabled.
                      mic_speaker_camera_disconnected:
                        type: boolean
                        description: 'Send an alert when the mic, speaker or camera is disconnected in the Zoom Room.'
                      mic_speaker_camera_reconnected:
                        type: boolean
                        description: 'Send an alert when the mic, speaker or camera is reconnected.'
                      zoom_room_display_disconnected:
                        type: boolean
                        description: Send an alert when the TV display is disconnected
                  digital_signage:
                    type: object
                    properties:
                      layout:
                        type: string
                        description: |-
                          Set the [layout](https://support.zoom.us/hc/en-us/articles/360000030683-Zoom-Rooms-digital-signage#h_4e25ddf3-8f97-4957-8f8b-99725f940fa7). The value of this field can be either `standard` or `video_content`.

                          `standard`: Standard Center<br>
                          `video_content`: Video + Content
                      banner:
                        type: object
                        properties:
                          banner_room_name:
                            type: boolean
                          banner_sharing_key:
                            type: boolean
                          banner_time:
                            type: boolean
                      display_period:
                        type: object
                        description: Display period object lets you define the number of minutes before or after the scheduled meeting time you would like the content to display.
                        properties:
                          start_displaying_content:
                            type: integer
                            description: Start displaying digital signage content after certain duration after the meeting ends. Specify the value of the duration in minutes in this field.
                          stop_displaying_content:
                            type: integer
                            description: 'Stop displaying content {certain_duration} before a meeting is scheduled to begin. Specify the value of duration in minutes in this field.'
                      mute:
                        type: boolean
                        description: Sound of all contents will be muted if the value of this field is set to `true`.
                      enable_digital_signage:
                        type: boolean
                        description: |-
                          [Enable or disable digital signage](https://support.zoom.us/hc/en-us/articles/360000030683-Zoom-Rooms-digital-signage#h_767fbb33-82a8-45a8-8392-a1bfa9687edd). <br>
                          `true`: enable<br> `false`: disable
                      play_list:
                        type: array
                        maxItems: 2
                        description: Content list.
                        items:
                          type: object
                          properties:
                            action:
                              type: string
                              enum:
                                - add
                                - update
                                - delete
                              description: |
                                Specify an action for the content list. The value can be one of the following:<br>
                                `add`: Add another content list.<br>
                                `update`: Update existing content list.<br>
                                `delete`: Delete content list.
                            id:
                              type: string
                              description: Unique identifier of the content list. This field is only required if you would like to remove or update the content list.
                            name:
                              type: string
                              description: Name of the content list.
                            start_time:
                              type: string
                              description: Specify the display start time for the content list in GMT.
                            end_time:
                              type: string
                              description: Specify the display end time for the content list in GMT.
                            contents:
                              type: array
                              maxItems: 3
                              items:
                                type: object
                                description: Content list.
                                properties:
                                  action:
                                    type: string
                                    description: |+
                                      Specify an action for the content in the content list. The value can be one of the following:<br>
                                      `add`: Add another content to the content list.<br>
                                      `update`: Update existing content's information in the content list.<br>
                                      `delete`: Delete content from the content list.

                                  id:
                                    type: string
                                    description: Unique identifier of the content. This field is only required if you would like to remove or update the content information.
                                  content_id:
                                    type: string
                                    description: Content Id.
                                  name:
                                    type: string
                                    description: Name of the content.
                                  duration:
                                    type: integer
                                    description: 'By default each content is display for 5 seconds. Using this field, specify how long you would like to display the content.'
                                  order:
                                    type: integer
                                    description: Order of the content in the display.
            type: object
          x-examples:
            application/json:
              client_alert:
                detect_microphone_error_alert: false
                detect_bluetooth_microphone_error_alert: false
                detect_speaker_error_alert: true
                detect_bluetooth_speaker_error_alert: false
                detect_camera_error_alert: true
              notification:
                audio_not_meet_usability_threshold: false
                audio_meet_usability_threshold: false
                battery_low_and_not_charging: true
                battery_is_charging: false
                battery_percentage: in ut incididunt velit
                controller_scheduling_disconnected: false
                controller_scheduling_reconnected: false
                cpu_usage_high_detected: false
                network_unstable_detected: true
                zoom_room_offline: false
                zoom_room_come_back_online: true
                sip_registration_failed: false
                sip_registration_re_enabled: true
                mic_speaker_camera_disconnected: true
                mic_speaker_camera_reconnected: false
                zoom_room_display_disconnected: false
        - in: query
          name: setting_type
          type: string
          description: |-
            The type of setting that you would like to update.<br> `alert`: Alert Settings applied on the Zoom Rooms Account.<br>
            `meeting`: Meeting settings of the Zoom Rooms Account.<br>
            `signage`: Digital signage settings.
          default: meeting
          required: true
        - in: path
          name: locationId
          type: string
          required: true
          description: 'Unique identifier of the location type. This can be retrieved using the [List Zoom Room Location API](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations) (Id property in the response).'
      operationId: updateZRLocationSettings
      tags:
        - Rooms Location
      security:
        - OAuth: []
  /rooms/locations/structure:
    get:
      responses:
        '200':
          description: |
            **HTTP Status Code:** `200` **OK**<br>
            Zoom Rooms location structure returned successfully.<br>
          schema:
            type: object
            properties:
              structures:
                type: array
                description: Hierarchial structure array of the Zoom Rooms location.
                items:
                  type: string
          examples:
            application/json:
              structures:
                - country
                - state
                - city
                - campus
                - building
                - floor
                - room
        '400':
          description: |
            **HTTP Status Code:** `400` **Bad Request**<br>

            **Error Code:** `200`<br>
            Zoom Room subscription not found. Try again after purchasing a Zoom Room subscription.
      summary: Get Zoom Room location structure
      description: |-
        Get the [location hierarchial structure(s)](https://support.zoom.us/hc/en-us/articles/115000342983-Zoom-Rooms-Location-Hierarchy) applied on the Zoom Rooms in an account.<br><br>
        **Prerequisites:**<br>
        * Zoom Rooms version 4.0 or higher
        * Account owner or admin permissions<br>
        **Scopes:** `room:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      operationId: getZRLocationStructure
      tags:
        - Rooms Location
      security:
        - OAuth: []
    patch:
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` **No Content**<br>
            Location Structure updated successfully.
          schema: {}
        '400':
          description: |-
            **HTTP Status Code:** `400` **Bad Request**<br>
            **Error Code:** `2100`<br>
            This sub account has no sip trunk plan
        '404':
          description: |-
            **HTTP Status Code:** `404` **Not Found**<br><br>
            **Error Code:** `2001` This account does not exist or does not belong to this master account.<br>This account does not exist or does not belong to you.
      summary: Update Zoom Rooms location structure
      description: |-
        Update the [location hierarchial structure(s)](https://support.zoom.us/hc/en-us/articles/115000342983-Zoom-Rooms-Location-Hierarchy) applied on the Zoom Rooms in an account.<br><br>
        **Prerequisites:**<br>
        * Zoom Rooms version 4.0 or higher
        * Account owner or admin permissions<br>
        **Scopes:** `room:write:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      operationId: updateZoomRoomsLocationStructure
      tags:
        - Rooms Location
      security:
        - OAuth: []
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              structures:
                type: array
                description: |-
                  Location Structure. The value can be either one or a combination of the following strings separated by comma:
                  `country`, `state`, `city`, `campus`, `building`, `floor`
                items:
                  type: string
          x-examples:
            application/json:
              structures:
                - country
                - city
  '/rooms/{roomId}':
    get:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` **OK**<br>
            Zoom Room profile returned successfully.
          schema:
            type: object
            properties:
              basic:
                type: object
                properties:
                  name:
                    type: string
                    description: Name of the Zoom Room.
                  activation_code:
                    type: string
                    description: Activation Code is the code that is used to complete the setup of the Zoom Room.
                  support_email:
                    type: string
                    description: The email address to be used for reporting Zoom Room issues.
                    format: email
                  support_phone:
                    type: string
                    description: |
                      The phone number to be used for reporting Zoom Room issues.
                  room_passcode:
                    type: string
                    description: 1-16 digit number or characters that is used to secure your Zoom Rooms application. This code must be entered on your Zoom Room Controller to change settings or sign out.
                    minLength: 1
                    maxLength: 16
                  required_code_to_ext:
                    description: |
                      Require code to exit out of Zoom Rooms application to switch between other apps.
                    type: boolean
                  hide_room_in_contacts:
                    type: boolean
                    description: 'Hide this Zoom Room from your Contact List. '
          examples:
            application/json:
              basic:
                name: MytestbRoom
                activation_code: '12345'
                support_email: abcdfdjorjggr@gh.123
                support_phone: '00001111'
                room_passcode: '1234'
                required_code_to_ext: true
                hide_room_in_contacts: false
        '400':
          description: |+
            **HTTP Status Code:** `400` **Bad Request**<br>

            **Error Code:** `200`<br>
            * Zoom Room subscription not found. Try again after purchasing a Zoom Room subscription.
            * Access restricted.

        '404':
          description: |-
            **HTTP Status Code:** `404` **Not Found**<br>

            **Error Code:** `1012`<br>
            Room not found:{roomId}.
      summary: Get Zoom Room profile
      description: |-

        Zoom Rooms is a software-based room system that provides an integrated experience for audio conferencing, wireless screen sharing and video conferencing. Use this API to get detailed information on a specific Zoom Room in a Zoom account.

        **Prerequisites:**<br>
        * Pro or a higher plan with [Zoom Room](https://zoom.us/zoomrooms) license.<br>
        **Scopes**: `room:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      operationId: getZRProfile
      tags:
        - Rooms
      security:
        - OAuth: []
      parameters:
        - in: path
          name: roomId
          type: string
          required: true
          description: 'Unique Identifier of the Zoom Room. This can be retrieved from the response of [List Zoom Rooms](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms/listzoomrooms) API.'
    parameters:
      - name: roomId
        in: path
        type: string
        required: true
    delete:
      responses:
        '204':
          description: |
            **HTTP Status Code:** `204` **No Content** <br>
            Zoom Room deleted successfully.
          schema:
            type: object
            properties: {}
        '400':
          description: |+
            **HTTP Status Code:** `400` **Bad Request** <br><br>
            **Error Code:** `200`<br>
            Zoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>
            Access restricted.<br>



        '404':
          description: |-
            **HTTP Status Code:** `404` **Not Found** <br><br>
            **Error Code:** `1012`<br>
            Room not found:{roomId}
      summary: Delete a Zoom Room
      description: |-
        [Remove](https://support.zoom.us/hc/en-us/articles/360033432032-Zoom-Room-Device-Profiles#h_e55b2092-c418-4b02-819f-44de51448900) a specific Zoom Room profile from a Zoom account.<br><br>
        **Prerequisites:**<br>
        * Pro or a higher plan with [Zoom Room](https://zoom.us/zoomrooms) license.<br>
        **Scopes**: `room:write:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      operationId: deleteAZoomRoom
      tags:
        - Rooms
      security:
        - OAuth: []
      parameters:
        - in: path
          name: roomId
          type: string
          required: true
          description: Unique Identifier of a Zoom Room.
    patch:
      responses:
        '204':
          description: |
            **HTTP Status Code:** `204` **No Content**<br>
            Room Profile information updated successfully.
          schema:
            type: object
            properties: {}
        '400':
          description: |+
            **HTTP Status Code:** `400` **Bad Request**<br><br>
            **Error Code:** `200`<br>
            Zoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>
            Access restricted.<br><br>

        '404':
          description: |
            **HTTP Status Code:** `404` **Not Found**<br><br>
            **Error Code:** `1012`<br>
            Room not found:{roomId}
      summary: Update a Zoom Room profile
      operationId: updateRoomProfile
      tags:
        - Rooms
      security:
        - OAuth: []
      parameters:
        - in: path
          name: roomId
          type: string
          required: true
          description: Unique Identifier of a Zoom Room.
        - in: body
          name: body
          schema:
            type: object
            properties:
              basic:
                type: object
                properties:
                  name:
                    type: string
                    description: Name of the Zoom Room.
                  support_email:
                    type: string
                    description: The email address to be used for reporting Zoom Room issues.
                    format: email
                  support_phone:
                    type: string
                    description: |
                      The phone number to be used for reporting Zoom Room issues.
                  room_passcode:
                    type: string
                    description: 1-16 digit number or characters that is used to secure your Zoom Rooms application. This code must be entered on your Zoom Room Controller to change settings or sign out.
                    minLength: 1
                    maxLength: 16
                  required_code_to_ext:
                    description: |
                      Require code to exit out of Zoom Rooms application to switch between other apps.
                    type: boolean
                  hide_room_in_contacts:
                    type: boolean
                    description: 'Hide this Zoom Room from your Contact List. '
          x-examples:
            application/json:
              basic:
                name: MytestZRoom
                support_email: abcjggr@gh.123
                support_phone: '00001111'
                room_passcode: '232434'
                required_code_to_ext: true
                hide_room_in_contacts: true
      description: |-
        Update basic information on a specific Zoom Room in a Zoom account.<br>

        **Prerequisites:**<br>
        * Pro or a higher plan with [Zoom Room](https://zoom.us/zoomrooms) license.<br>
        **Scopes**: `room:write:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
  '/rooms/{roomId}/settings':
    get:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` **OK**<br>
            Zoom Room settings returned successfully.
          schema:
            oneOf:
              - properties:
                  zoom_rooms:
                    type: object
                    properties:
                      upcoming_meeting_alert:
                        type: boolean
                        description: 'If enabled, a reminder will display 10 minutes prior to the next scheduled meeting on the controller.'
                      show_alert_before_meeting:
                        type: boolean
                        description: 'If enabled, the upcoming meeting alert message will be shown on the TV display. The value of the `upcoming_meeting_alert` field should be set to `true` to use this field. '
                      start_airplay_mirroring:
                        type: boolean
                        description: Allow users to share content via Apple Screen Mirroring (called Airplay on iOS 11 or earlier) in Zoom Rooms
                      start_airplay_manually:
                        type: boolean
                        description: 'Require the AirPlay service to be [started by an administrator](https://support.zoom.us/hc/en-us/articles/204726885-Screen-Share-Using-Airplay-Mirroring#h_a342ad38-4e46-47a8-a1d9-cded3b144b39) rather than always being available.'
                      weekly_system_restart:
                        type: boolean
                        description: '[Restart](https://support.zoom.us/hc/en-us/articles/205418949-Zoom-Rooms-Weekly-System-Restart) the Zoom Rooms computer and controller once a week.'
                      display_meeting_list:
                        type: boolean
                        description: ' Show the same information on the TV that is shown on the controller.'
                      display_top_banner:
                        type: boolean
                        description: 'Allow to display room name, time and sharing key on the top portion of TV.'
                      display_feedback_survey:
                        type: boolean
                        description: 'Display a [survey](https://support.zoom.us/hc/en-us/articles/214193146-End-of-Meeting-Attendee-Feedback) at the end of each meeting regarding the audio and video quality on the Zoom Rooms Controller.'
                      auto_direct_sharing:
                        type: boolean
                        description: Enable participants in a Zoom Room to share their laptop screen on the Zoom Room TV without entering a meeting ID or sharing code.
                      transform_meeting_to_private:
                        type: boolean
                        description: 'If enabled, all meetings in this room will be treated as [private meetings](https://support.zoom.us/hc/en-us/articles/115001051063-Zoom-Rooms-Private-Meetings), and the Zoom Room will display "Your Name''s Meeting" instead of the real meeting topic.'
                      hide_id_for_private_meeting:
                        type: boolean
                        description: 'If enabled, the meeting host and meeting ID (in addition to the meeting topic) are hidden from the Zoom Rooms display for private meetings. This affects meetings that were originally scheduled as private, as well as public meetings that were transformed to private.'
                      auto_start_scheduled_meeting:
                        type: boolean
                        description: Automatically start scheduled meetings according to the start time listed on the calendar associated with the room. A meeting alert will appear 10 minutes prior to the scheduled time on the TV.
                      auto_stop_scheduled_meeting:
                        type: boolean
                        description: 'Automatically stop the meeting at the end time as scheduled and listed in the calendar associated with the room. '
                      hide_share_instruction:
                        type: boolean
                        description: Hide share instructions from TV.
                      audio_device_daily_auto_test:
                        type: boolean
                        description: 'Enable [automated audio test](https://support.zoom.us/hc/en-us/articles/360000319683-Zoom-Rooms-Daily-Audio-Testing) to ensure high quality audio.'
                      support_join_3rd_party_meeting:
                        type: boolean
                        description: 'Integrate with Skype for Business, GoToMeeting, or WebEx and show the meeting dial-in button on the meeting list tab for Zoom Rooms Controllers.'
                      encrypt_shared_screen_content:
                        type: boolean
                        description: Encrypt screen and content shared in meetings.
                      allow_multiple_content_sharing:
                        type: boolean
                        description: 'Enable multiple participants to [share content simultaneously](https://support.zoom.us/hc/en-us/articles/360017767812-Sharing-Multiple-Screens-in-a-Zoom-Room) by default.'
                      show_non_video_participants:
                        type: boolean
                        description: 'When enabled, meeting participants that are audio only or have their video turned off will also be shown on the Zoom Rooms display by default.'
                      show_call_history_in_room:
                        type: boolean
                        description: |
                          Allow users to see call history of joined meetings and phone calls from the Zoom Rooms controller.
                      show_contact_list_on_controller:
                        type: boolean
                        description: 'If enabled, you can invite participants from the contact list during a meeting or when starting a meeting'
                      count_attendees_number_in_room:
                        type: boolean
                        description: |
                          Use facial detection technology to [determine and display the attendees count](https://support.zoom.us/hc/en-us/articles/360031027111-Count-Attendees-in-Zoom-Rooms) after meetings on Dashboard.
                      send_whiteboard_to_internal_contact_only:
                        type: boolean
                        description: 'Restrict[ sending Whiteboard sessions](https://support.zoom.us/hc/en-us/articles/115004797286-Using-the-Whiteboard-in-Zoom-Rooms-for-Touch#h_781274b3-5237-4320-8826-be2120b00e21) to contacts or internal users only.'
                  meeting_security:
                    type: object
                    properties:
                      end_to_end_encrypted_meetings:
                        type: boolean
                        description: 'Allow use of end-to-end encryption for meetings. If set to `true`, you can specify the encryption type in `encryption_type` field.'
                      encryption_type:
                        type: string
                        description: |-
                          Choose between enhanced encryption and [end-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871) when starting or a meeting. When using end-to-end encryption, several features (e.g. cloud recording, phone/SIP/H.323 dial-in) will be **automatically disabled**. <br><br>The value of this field can be one of the following:<br>
                          `enhanced_encryption`: Enhanced encryption. Encryption is stored in the cloud if you enable this option. <br>

                          `e2ee`: [End-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871). The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also **disables** the following features: join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions.
                        enum:
                          - enhanced_encryption
                          - e2ee
              - properties:
                  client_alert:
                    type: object
                    description: 'The Client Alert Settings section includes alerts that display on the TV screen of the Zoom Room. Disable these settings if you have deliberately disconnected one or more peripheral devices or have never enabled them. '
                    properties:
                      detect_microphone_error_alert:
                        type: boolean
                        description: Display an alert message when an issue is detected with microphone.
                      detect_bluetooth_microphone_error_alert:
                        type: boolean
                        description: Display an alert message when an issue is detected with a bluetooth microphone.
                      detect_speaker_error_alert:
                        type: boolean
                        description: Display an alert message when an issue is detected with a speaker.
                      detect_bluetooth_speaker_error_alert:
                        type: boolean
                        description: Display an alert message when an issue is detected with a bluetooth speaker.
                      detect_camera_error_alert:
                        type: boolean
                        description: Display an alert message when an issue is detected with a camera.
                  notification:
                    type: object
                    description: '[Notifications Settings](https://support.zoom.us/hc/en-us/articles/205394099-Zoom-Room-Alerts#h_b430b5f2-5150-4522-9c96-c77f22ab70bc) includes the circumstances in which the room sends an email alert to the support team to notify them of a potentially urgent issue. These issues can affect the operation of the room, but do not display on the TV screen. The email alert is sent to the email address specified in the Notification Email Recipients section. '
                    properties:
                      audio_not_meet_usability_threshold:
                        type: boolean
                        description: Send an alert when the audio echo test result does not meet usability threshold.
                      audio_meet_usability_threshold:
                        type: boolean
                        description: Send an alert when the audio echo test result meets usability threshold.
                      battery_low_and_not_charging:
                        type: boolean
                        description: Send an alert when the battery of the controller or the scheduling display is low (at 20%) and is not being charged.
                      battery_is_charging:
                        type: boolean
                        description: Send an alert when the battery starts charging.
                      battery_percentage:
                        type: string
                        description: 'Specify a percentage so that an alert is sent when the battery is less than the {battery_percentage} that you specified.'
                      controller_scheduling_disconnected:
                        type: boolean
                        description: Send an alert when the connection to the Controller or Scheduling Display cannot be detected.
                      controller_scheduling_reconnected:
                        type: boolean
                        description: Send an alert when the Controller or Scheduling Display can be detected again.
                      cpu_usage_high_detected:
                        type: boolean
                        description: Send an alert when CPU usage is above 90%.
                      network_unstable_detected:
                        type: boolean
                        description: Send an alert when low bandwidth network is detected
                      zoom_room_offline:
                        type: boolean
                        description: Send an alert when the machine hosting the Zoom Room application has a network issue or cannot connect with the Controller.
                      zoom_room_come_back_online:
                        type: boolean
                        description: Send an alert when the Zoom Room is online after previously being offline.
                      sip_registration_failed:
                        type: boolean
                        description: 'Send an alert when SIP registration stops working. '
                      sip_registration_re_enabled:
                        type: boolean
                        description: Send an alert after the SIP registration is re-enabled.
                      mic_speaker_camera_disconnected:
                        type: boolean
                        description: 'Send an alert when the mic, speaker or camera is disconnected in the Zoom Room.'
                      mic_speaker_camera_reconnected:
                        type: boolean
                        description: 'Send an alert when the mic, speaker or camera is reconnected.'
                      zoom_room_display_disconnected:
                        type: boolean
                        description: Send an alert when the TV display is disconnected
                  digital_signage:
                    type: object
                    properties:
                      layout:
                        type: string
                        description: |-
                          Set the [layout](https://support.zoom.us/hc/en-us/articles/360000030683-Zoom-Rooms-digital-signage#h_4e25ddf3-8f97-4957-8f8b-99725f940fa7). The value of this field can be either `standard` or `video_content`.

                          `standard`: Standard Center<br>
                          `video_content`: Video + Content
                      banner:
                        type: object
                        description: Specifies the elements that you want to display in the top banner.
                        properties:
                          banner_room_name:
                            type: boolean
                            description: Display or hide banner room name.
                          banner_sharing_key:
                            type: boolean
                            description: Display or hide banner sharing key.
                          banner_time:
                            type: boolean
                            description: Display or hide time in the banner.
                      display_period:
                        type: object
                        description: Display period object lets you define the number of minutes before or after the scheduled meeting time you would like the content to display.
                        properties:
                          start_displaying_content:
                            type: integer
                            description: Start displaying digital signage content after certain duration after the meeting ends. The value of this field indicates the duration in minutes.
                          stop_displaying_content:
                            type: integer
                            description: 'Stop displaying content {certain_duration} before a meeting is scheduled to begin. The value of this field indicates the duration in minutes.'
                      mute:
                        type: boolean
                        description: Sound of all contents will be muted if the value of this field is set to `true`.
                      enable_digital_signage:
                        type: boolean
                        description: |-
                          [Indicates whether digital signage is on or off,](https://support.zoom.us/hc/en-us/articles/360000030683-Zoom-Rooms-digital-signage#h_767fbb33-82a8-45a8-8392-a1bfa9687edd). <br>
                          `true`: enable<br> `false`: disable
                      play_list:
                        type: array
                        maxItems: 2
                        description: Content list.
                        items:
                          type: object
                          properties:
                            action:
                              type: string
                              enum:
                                - add
                                - update
                                - delete
                              description: |
                                Specify an action for the content list. The value can be one of the following:<br>
                                `add`: Add another content list.<br>
                                `update`: Update existing content list.<br>
                                `delete`: Delete content list.
                            id:
                              type: string
                              description: Unique identifier of the content list. This field is only required if you would like to remove or update the content list.
                            name:
                              type: string
                              description: Name of the content list.
                            start_time:
                              type: string
                              description: Specify the display start time for the content list in GMT.
                            end_time:
                              type: string
                              description: Specify the display end time for the content list in GMT.
                            contents:
                              type: array
                              maxItems: 3
                              items:
                                type: object
                                description: Content list.
                                properties:
                                  content_id:
                                    type: string
                                    description: Content Id.
                                  name:
                                    type: string
                                    description: Name of the content.
                                  duration:
                                    type: integer
                                    description: Duration for how long the content will be displayed.
                                  order:
                                    type: integer
                                    description: Order of the content in the display.
                                  id:
                                    type: string
            type: object
          examples:
            application/json:
              zoom_rooms:
                upcoming_meeting_alert: true
                show_alert_before_meeting: false
                start_airplay_manually: true
                weekly_system_restart: false
                display_meeting_list: false
                display_top_banner: false
                display_feedback_survey: true
                auto_direct_sharing: false
                transform_meeting_to_private: false
                hide_id_for_private_meeting: false
                auto_start_scheduled_meeting: true
                auto_stop_scheduled_meeting: true
                hide_share_instruction: true
                audio_device_daily_auto_test: true
                support_join_3rd_party_meeting: true
                encrypt_shared_screen_content: false
                allow_multiple_content_sharing: true
                show_non_video_participants: false
                show_call_history_in_room: true
                show_contact_list_on_controller: true
                count_attendees_number_in_room: true
                send_whiteboard_to_internal_contact_only: true
        '400':
          description: |
            **HTTP Status Code:** `400` **Bad Request**<br>

            **Error Code:** `200`<br>
            Zoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>
            Access restricted.
        '404':
          description: |+
            **HTTP Status Code:** `404` **Not Found**<br>

            **Error Code:** `1012`<br>
            Room not found:{roomId}.

      summary: Get Zoom Room settings
      description: |-
        Get information on meeting or alert settings applied to a specific Zoom Room. By default, only **Meeting Settings** are returned. To view only **Alert Settings**, specify `alert` as the value of the `setting_type` query parameter.<br>
        **Prerequisites:**<br>
        * Zoom Room licenses
        * Owner or Admin privileges on the Zoom Account.<br>
        **Scopes:** `room:read:admin`

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>
      parameters:
        - in: query
          name: setting_type
          type: string
          default: meeting
          description: |-
            The type of setting that you would like to retrieve.<br> `alert`: Alert Settings applied on the Zoom Rooms Account.<br>
            `meeting`: Meeting settings of the Zoom Rooms Account.
          required: true
        - in: path
          name: roomId
          type: string
          required: true
          description: Unique identifier of the Zoom Room.
      operationId: getZRSettings
      security:
        - OAuth: []
      tags:
        - Rooms
    parameters:
      - name: roomId
        in: path
        type: string
        required: true
    patch:
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` **No Content**<br>
            Settings updated successfully.
          schema: {}
        '400':
          description: |-
            **HTTP Status Code:** `400` **Bad Request**<br><br>
            **Error Code:** `200`<br>
            Zoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>
            Access restricted.
      summary: Update Zoom Room settings
      description: |-
        Update either meeting or alert settings applied to a specific Zoom Room. To update **Alert Settings**, specify `alert` as the value of the `setting_type` query parameter. To update **Meeting Settings**, specify `meeting` as the value of the `setting_type` query parameter.<br>
        **Prerequisites:**<br>
        * Zoom Room licenses
        * Owner or Admin privileges on the Zoom Account.<br>
        **Scopes:** `room:write:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      operationId: updateZRSettings
      tags:
        - Rooms
      security:
        - OAuth: []
      parameters:
        - in: path
          name: roomId
          type: string
          required: true
          description: Unique Identifier of the Zoom Room.
        - in: body
          name: body
          schema:
            oneOf:
              - properties:
                  zoom_rooms:
                    type: object
                    properties:
                      upcoming_meeting_alert:
                        type: boolean
                        description: 'If enabled, a reminder will display 10 minutes prior to the next scheduled meeting on the controller.'
                      show_alert_before_meeting:
                        type: boolean
                        description: 'If enabled, the upcoming meeting alert message will be shown on the TV display. The value of the `upcoming_meeting_alert` field should be set to `true` to use this field. '
                      start_airplay_mirroring:
                        type: boolean
                        description: Allow users to share content via Apple Screen Mirroring (called Airplay on iOS 11 or earlier) in Zoom Rooms
                      start_airplay_manually:
                        type: boolean
                        description: 'Require the AirPlay service to be [started by an administrator](https://support.zoom.us/hc/en-us/articles/204726885-Screen-Share-Using-Airplay-Mirroring#h_a342ad38-4e46-47a8-a1d9-cded3b144b39) rather than always being available.'
                      weekly_system_restart:
                        type: boolean
                        description: '[Restart](https://support.zoom.us/hc/en-us/articles/205418949-Zoom-Rooms-Weekly-System-Restart) the Zoom Rooms computer and controller once a week.'
                      display_meeting_list:
                        type: boolean
                        description: ' Show the same information on the TV that is shown on the controller.'
                      display_top_banner:
                        type: boolean
                        description: 'Allow to display room name, time and sharing key on the top portion of TV.'
                      display_feedback_survey:
                        type: boolean
                        description: 'Display a [survey](https://support.zoom.us/hc/en-us/articles/214193146-End-of-Meeting-Attendee-Feedback) at the end of each meeting regarding the audio and video quality on the Zoom Rooms Controller.'
                      auto_direct_sharing:
                        type: boolean
                        description: Enable participants in a Zoom Room to share their laptop screen on the Zoom Room TV without entering a meeting ID or sharing code.
                      transform_meeting_to_private:
                        type: boolean
                        description: 'If enabled, all meetings in this room will be treated as [private meetings](https://support.zoom.us/hc/en-us/articles/115001051063-Zoom-Rooms-Private-Meetings), and the Zoom Room will display "Your Name''s Meeting" instead of the real meeting topic.'
                      hide_id_for_private_meeting:
                        type: boolean
                        description: 'If enabled, the meeting host and meeting ID (in addition to the meeting topic) are hidden from the Zoom Rooms display for private meetings. This affects meetings that were originally scheduled as private, as well as public meetings that were transformed to private.'
                      auto_start_scheduled_meeting:
                        type: boolean
                        description: Automatically start scheduled meetings according to the start time listed on the calendar associated with the room. A meeting alert will appear 10 minutes prior to the scheduled time on the TV.
                      auto_stop_scheduled_meeting:
                        type: boolean
                        description: 'Automatically stop the meeting at the end time as scheduled and listed in the calendar associated with the room. '
                      hide_share_instruction:
                        type: boolean
                        description: Hide share instructions from TV.
                      audio_device_daily_auto_test:
                        type: boolean
                        description: 'Enable [automated audio test](https://support.zoom.us/hc/en-us/articles/360000319683-Zoom-Rooms-Daily-Audio-Testing) to ensure high quality audio.'
                      support_join_3rd_party_meeting:
                        type: boolean
                        description: 'Integrate with Skype for Business, GoToMeeting, or WebEx and show the meeting dial-in button on the meeting list tab for Zoom Rooms Controllers.'
                      encrypt_shared_screen_content:
                        type: boolean
                        description: Encrypt screen and content shared in meetings.
                      allow_multiple_content_sharing:
                        type: boolean
                        description: 'Enable multiple participants to [share content simultaneously](https://support.zoom.us/hc/en-us/articles/360017767812-Sharing-Multiple-Screens-in-a-Zoom-Room) by default.'
                      show_non_video_participants:
                        type: boolean
                        description: 'When enabled, meeting participants that are audio only or have their video turned off will also be shown on the Zoom Rooms display by default.'
                      show_call_history_in_room:
                        type: boolean
                        description: |
                          Allow users to see call history of joined meetings and phone calls from the Zoom Rooms controller.
                      show_contact_list_on_controller:
                        type: boolean
                        description: 'If enabled, you can invite participants from the contact list during a meeting or when starting a meeting'
                      count_attendees_number_in_room:
                        type: boolean
                        description: |
                          Use facial detection technology to [determine and display the attendees count](https://support.zoom.us/hc/en-us/articles/360031027111-Count-Attendees-in-Zoom-Rooms) after meetings on Dashboard.
                      send_whiteboard_to_internal_contact_only:
                        type: boolean
                        description: 'Restrict[ sending Whiteboard sessions](https://support.zoom.us/hc/en-us/articles/115004797286-Using-the-Whiteboard-in-Zoom-Rooms-for-Touch#h_781274b3-5237-4320-8826-be2120b00e21) to contacts or internal users only.'
                  meeting_security:
                    type: object
                    properties:
                      end_to_end_encrypted_meetings:
                        type: boolean
                        description: 'Allow use of end-to-end encryption for meetings. If set to `true`, you can specify the encryption type in `encryption_type` field.'
                      encryption_type:
                        type: string
                        description: |-
                          Choose between enhanced encryption and [end-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871) when starting or a meeting. When using end-to-end encryption, several features (e.g. cloud recording, phone/SIP/H.323 dial-in) will be **automatically disabled**. <br><br>The value of this field can be one of the following:<br>
                          `enhanced_encryption`: Enhanced encryption. Encryption is stored in the cloud if you enable this option. <br>

                          `e2ee`: [End-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871). The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also **disables** the following features: join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions.
                        enum:
                          - enhanced_encryption
                          - e2ee
              - properties:
                  client_alert:
                    type: object
                    description: 'The Client Alert Settings section includes alerts that display on the TV screen of the Zoom Room. Disable these settings if you have deliberately disconnected one or more peripheral devices or have never enabled them. '
                    properties:
                      detect_microphone_error_alert:
                        type: boolean
                        description: Display an alert message when an issue is detected with microphone.
                      detect_bluetooth_microphone_error_alert:
                        type: boolean
                        description: Display an alert message when an issue is detected with a bluetooth microphone.
                      detect_speaker_error_alert:
                        type: boolean
                        description: Display an alert message when an issue is detected with a speaker.
                      detect_bluetooth_speaker_error_alert:
                        type: boolean
                        description: Display an alert message when an issue is detected with a bluetooth speaker.
                      detect_camera_error_alert:
                        type: boolean
                        description: Display an alert message when an issue is detected with a camera.
                  notification:
                    type: object
                    description: '[Notifications Settings](https://support.zoom.us/hc/en-us/articles/205394099-Zoom-Room-Alerts#h_b430b5f2-5150-4522-9c96-c77f22ab70bc) includes the circumstances in which the room sends an email alert to the support team to notify them of a potentially urgent issue. These issues can affect the operation of the room, but do not display on the TV screen. The email alert is sent to the email address specified in the Notification Email Recipients section. '
                    properties:
                      audio_not_meet_usability_threshold:
                        type: boolean
                        description: Send an alert when the audio echo test result does not meet usability threshold.
                      audio_meet_usability_threshold:
                        type: boolean
                        description: Send an alert when the audio echo test result meets usability threshold.
                      battery_low_and_not_charging:
                        type: boolean
                        description: Send an alert when the battery of the controller or the scheduling display is low (at 20%) and is not being charged.
                      battery_is_charging:
                        type: boolean
                        description: Send an alert when the battery starts charging.
                      battery_percentage:
                        type: string
                        description: 'Specify a percentage so that an alert is sent when the battery is less than the {battery_percentage} that you specified.'
                      controller_scheduling_disconnected:
                        type: boolean
                        description: Send an alert when the connection to the Controller or Scheduling Display cannot be detected.
                      controller_scheduling_reconnected:
                        type: boolean
                        description: Send an alert when the Controller or Scheduling Display can be detected again.
                      cpu_usage_high_detected:
                        type: boolean
                        description: Send an alert when CPU usage is above 90%.
                      network_unstable_detected:
                        type: boolean
                        description: Send an alert when low bandwidth network is detected
                      zoom_room_offline:
                        type: boolean
                        description: Send an alert when the machine hosting the Zoom Room application has a network issue or cannot connect with the Controller.
                      zoom_room_come_back_online:
                        type: boolean
                        description: Send an alert when the Zoom Room is online after previously being offline.
                      sip_registration_failed:
                        type: boolean
                        description: 'Send an alert when SIP registration stops working. '
                      sip_registration_re_enabled:
                        type: boolean
                        description: Send an alert after the SIP registration is re-enabled.
                      mic_speaker_camera_disconnected:
                        type: boolean
                        description: 'Send an alert when the mic, speaker or camera is disconnected in the Zoom Room.'
                      mic_speaker_camera_reconnected:
                        type: boolean
                        description: 'Send an alert when the mic, speaker or camera is reconnected.'
                      zoom_room_display_disconnected:
                        type: boolean
                        description: Send an alert when the TV display is disconnected
                  digital_signage:
                    type: object
                    properties:
                      layout:
                        type: string
                        description: |-
                          Set the [layout](https://support.zoom.us/hc/en-us/articles/360000030683-Zoom-Rooms-digital-signage#h_4e25ddf3-8f97-4957-8f8b-99725f940fa7). The value of this field can be either `standard` or `video_content`.

                          `standard`: Standard Center<br>
                          `video_content`: Video + Content
                      banner:
                        type: object
                        properties:
                          banner_room_name:
                            type: boolean
                          banner_sharing_key:
                            type: boolean
                          banner_time:
                            type: boolean
                      display_period:
                        type: object
                        description: Display period object lets you define the number of minutes before or after the scheduled meeting time you would like the content to display.
                        properties:
                          start_displaying_content:
                            type: integer
                            description: Start displaying digital signage content after certain duration after the meeting ends. Specify the value of the duration in minutes in this field.
                          stop_displaying_content:
                            type: integer
                            description: 'Stop displaying content {certain_duration} before a meeting is scheduled to begin. Specify the value of duration in minutes in this field.'
                      mute:
                        type: boolean
                        description: Sound of all contents will be muted if the value of this field is set to `true`.
                      enable_digital_signage:
                        type: boolean
                        description: |-
                          [Enable or disable digital signage](https://support.zoom.us/hc/en-us/articles/360000030683-Zoom-Rooms-digital-signage#h_767fbb33-82a8-45a8-8392-a1bfa9687edd). <br>
                          `true`: enable<br> `false`: disable
                      play_list:
                        type: array
                        maxItems: 2
                        description: Content list.
                        items:
                          type: object
                          properties:
                            action:
                              type: string
                              enum:
                                - add
                                - update
                                - delete
                              description: |
                                Specify an action for the content list. The value can be one of the following:<br>
                                `add`: Add another content list.<br>
                                `update`: Update existing content list.<br>
                                `delete`: Delete content list.
                            id:
                              type: string
                              description: Unique identifier of the content list. This field is only required if you would like to remove or update the content list.
                            name:
                              type: string
                              description: Name of the content list.
                            start_time:
                              type: string
                              description: Specify the display start time for the content list in GMT.
                            end_time:
                              type: string
                              description: Specify the display end time for the content list in GMT.
                            contents:
                              type: array
                              maxItems: 3
                              items:
                                type: object
                                description: Content list.
                                properties:
                                  action:
                                    type: string
                                    description: |+
                                      Specify an action for the content in the content list. The value can be one of the following:<br>
                                      `add`: Add another content to the content list.<br>
                                      `update`: Update existing content's information in the content list.<br>
                                      `delete`: Delete content from the content list.

                                  id:
                                    type: string
                                    description: Unique identifier of the content. This field is only required if you would like to remove or update the content information.
                                  content_id:
                                    type: string
                                    description: Content Id.
                                  name:
                                    type: string
                                    description: Name of the content.
                                  duration:
                                    type: integer
                                    description: 'By default each content is display for 5 seconds. Using this field, specify how long you would like to display the content.'
                                  order:
                                    type: integer
                                    description: Order of the content in the display.
            type: object
          x-examples:
            application/json:
              client_alert:
                detect_microphone_error_alert: true
                detect_bluetooth_microphone_error_alert: false
                detect_speaker_error_alert: false
                detect_bluetooth_speaker_error_alert: false
                detect_camera_error_alert: true
              notification:
                audio_not_meet_usability_threshold: true
                audio_meet_usability_threshold: true
                battery_low_and_not_charging: true
                battery_is_charging: true
                battery_percentage: do sit
                controller_scheduling_disconnected: true
                controller_scheduling_reconnected: false
                cpu_usage_high_detected: true
                network_unstable_detected: true
                zoom_room_offline: false
                zoom_room_come_back_online: false
                sip_registration_failed: true
                sip_registration_re_enabled: false
                mic_speaker_camera_disconnected: false
                mic_speaker_camera_reconnected: true
                zoom_room_display_disconnected: true
        - in: query
          name: setting_type
          type: string
          description: |-
            The type of setting that you would like to update.<br> `alert`: Alert Settings applied on the Zoom Room.<br>
            `meeting`: Meeting settings of the Zoom Room.<br>
            `signage`: Digital signage settings applied on the Zoom Room.
  '/rooms/{roomId}/devices':
    get:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` **OK**
            Devices listed successfully.
          schema:
            type: object
            properties:
              devices:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Unique identifier of the device.
                    room_name:
                      type: string
                      description: Name of the Zoom Room.
                    device_type:
                      type: string
                      description: 'Type of the device. The value of this field can be one of the following:<br>`Zoom Rooms Computer`,<br> `Controller`, `Scheduling Display`, `Zoom Rooms Control System`, `Companion Whiteboard`'
                      enum:
                        - Zoom Rooms Computer
                        - Controller
                        - Scheduling Display
                        - Zoom Rooms Control System
                        - Companion Whiteboard
                    app_version:
                      type: string
                      description: App version of Zoom Rooms.
                    device_system:
                      type: string
                      description: Operating system of the device.
                    status:
                      type: string
                      description: Status of the device. The value can be either `Online` or `Offline`.
                      enum:
                        - Online
                        - Offline
          examples:
            application/json:
              devices:
                - id: sajhdfshf24324
                  room_name: MyAwesomeZoomRoom
                  device_type: Zoom Rooms Computer
                  app_version: 4.4.1 (1242.0623)
                  device_system: Win 10
                  status: Online
                - id: 32dhgdfg2were
                  room_name: MyAwesomeZoomRoom
                  device_type: Zoom Rooms Controller
                  app_version: 4.3.6 (265.0307)
                  device_system: iPad 12.3.1
                  status: Online
        '400':
          description: |-
            **HTTP Status Code:** `400` **Bad Request**<br>

            **Error Code:** `200`<br>
            Zoom Room subscription not found. Try again after purchasing a Zoom Room subscription.
      summary: List Zoom Room devices
      description: |-
        List information about the devices that are being used for a specific [Zoom Room](https://support.zoom.us/hc/en-us/articles/207483343-Getting-Started-with-Zoom-Rooms) in an account.

        **Prerequisites:**<br>
        * Pro or a higher plan with [Zoom Room](https://zoom.us/zoomrooms) license.<br>
        * Account owner or admin permissions.
        **Scopes**: `room:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      operationId: listZRDevices
      tags:
        - Rooms
      security:
        - OAuth: []
      parameters:
        - in: path
          name: roomId
          type: string
          required: true
          description: 'Unique Identifier of the Zoom Room. This can be retrieved from the response of [List Zoom Rooms](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms/listzoomrooms) API.'
    parameters:
      - name: roomId
        in: path
        type: string
        required: true
  /sip_trunk/numbers:
    get:
      responses:
        '200':
          description: |-
            * **HTTP Status Code:** `200` **OK**<br>
            List of numbers returned.
          schema:
            type: object
            properties:
              total_records:
                description: Total number of records returned.
                type: integer
              phone_numbers:
                type: array
                items:
                  type: object
                  properties:
                    number:
                      type: string
                      description: Phone number
                    country:
                      type: string
                      description: 'Country ID (example: US)'
          examples:
            application/json:
              total_records: 1
              phone_numbers:
                - number: '45345545'
                  country: US
        '404':
          description: |-
            **HTTP Status Code:** `404` **Not Found**<br><br>
            **Error Code:** `2001`<br>
            This account does not exist or does not belong to this master account.
            This account does not exist or does not belong to you.
      summary: List SIP trunk numbers
      description: |-
        With SIP-connected audio, Zoom establishes a SIP trunk (a network connection specifically designed to make and deliver phone calls) over a direct and private connection between the customer’s network and the Zoom cloud. Meeting participants that dial into a meeting or have the meeting call them, and are On-Net from the perspective of the customers' IP telephony network, will be connected over this trunk rather than over the PSTN. <br><br>Use this API to list all the numbers that are configured for SIP Connected Audio in a Zoom Account.

        **Prerequisites:**<br>
        * Pro or a higher account with SIP Connected Audio plan enabled.
        * The account must be a master account<br>
        **Scopes:** `sip_trunk:master`

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      operationId: listSipTrunkNumbers
      tags:
        - SIP Connected Audio
      security:
        - OAuth: []
  '/accounts/{accountId}/sip_trunk/settings':
    patch:
      responses:
        '204':
          description: |
            **HTTP Status Code:** `204` **No Content**<br>
            Configuration assigned successfully.
          schema: {}
        '400':
          description: |-
            **HTTP Status Code:** `400` **Bad Request**<br>
            **Error Code:** `2100`<br>
            This sub account has no sip trunk plan.
        '404':
          description: |-
            **HTTP Status Code:** `404` **Not Found**<br><br>
            **Error Code:** `2001`<br>
            This account does not exist or does not belong to this master account.<br>
            This account does not exist or does not belong to you.
      summary: Assign SIP trunk configuration
      description: |-
        With SIP-connected audio, Zoom establishes a SIP trunk (a network connection specifically designed to make and deliver phone calls) over a direct and private connection between the customer’s network and the Zoom cloud. Meeting participants that dial into a meeting or have the meeting call them, and are On-Net from the perspective of the customers' IP telephony network, will be connected over this trunk rather than over the PSTN. <br><br> Using this API, a master account owner can copy the SIP Connected Audio configurations applied on the master account and enable those configurations on a sub account. The owner can also disable the configuration in the sub account where it was previously enabled.
        **Prerequisites:**<br>
        * Pro or a higher account with SIP Connected Audio plan enabled.
        * master account Owner<br>
        **Scopes:** `sip_trunk:master`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      operationId: assignSIPConfig
      tags:
        - SIP Connected Audio
      security:
        - OAuth: []
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              enable:
                description: 'Enable or delete the configuration.<br> The values can be one of the following:<br> `true`: Enable configuration.<br> `false`: Delete configuration'
                type: boolean
              show_callout_internal_number:
                type: boolean
                description: 'If the value of this option is set to `true`, the call-out numbers provided by the Zoom carrier partners will be displayed in the account''s list of available call-out numbers in the Zoom Web Portal and Zoom Client.'
              show_zoom_provided_callout_countries:
                type: integer
                description: |-
                  If the value of this option is set to `0`, the call-out countries list provided by Zoom will be [displayed](https://support.zoom.us/hc/en-us/articles/200942859-Using-telephone-call-out) in the account's list of available call-out countries.

                  If the value of this option is set to `1`, the Zoom provided call-out countries will be hidden from the user's account.<br>

                  If the value of this option is set to `2`, all Zoom provided countries will be deleted and only internal countries (provided by carrier partners) will be used.
              show_zoom_provided_numbers:
                type: integer
                description: |-
                  If the value of this option is set to `0`, the numbers provided by Zoom will be displayed in the account's list of available call-out and call-in numbers in the Zoom Web Portal and Zoom Client.

                  If the value of this option is set to `1`, the Zoom provided numbers will be shown in the Zoom Web Portal but will not be used unless specified by the user.<br>

                  If the value of this option is set to `2`, all Zoom provided numbers will be deleted and only internal numbers (provided by carrier partners) will be used.
                enum:
                  - 0
                  - 1
                  - 2
          x-examples:
            application/json:
              enable: true
              show_callout_internal_number: true
              show_zoom_provided_callout_countries: 0
              show_zoom_provided_numbers: 2
    parameters:
      - name: accountId
        in: path
        type: string
        required: true
  '/accounts/{accountId}/sip_trunk/numbers':
    post:
      responses:
        '201':
          description: |
            **HTTP Status Code:** `201` **Created**<br>
            Numbers assigned successfully.
          schema: {}
        '400':
          description: |
            **HTTP Status Code:** `400` **Bad Request**<br>
            **Error Code:** `2100`<br>
            This sub account has no sip trunk plan.<br><br>
            **Error Code:** `400`<br>
            This number does not belong to master account.
        '404':
          description: |
            **HTTP Status Code:** `404` **Not Found**<br><br>
            **Error Code:** `2001`<br>
            This account does not exist or does not belong to this master account.<br>
            This account does not exist or does not belong to you.
      summary: Assign numbers
      description: |
        With SIP-connected audio, Zoom establishes a SIP trunk (a network connection specifically designed to make and deliver phone calls) over a direct and private connection between the customer’s network and the Zoom cloud. Meeting participants that dial into a meeting or have the meeting call them, and are On-Net from the perspective of the customers' IP telephony network, will be connected over this trunk rather than over the PSTN. <br><br>Use this API to assign internal numbers to a sub account.

        **Prerequisites:**<br>
        * Pro or a higher account with SIP Connected Audio plan enabled.
        * The account must be a master account<br>
        **Scopes:** `sip_trunk:master`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      operationId: assignSipTrunkNumbers
      tags:
        - SIP Connected Audio
      security:
        - OAuth: []
      parameters:
        - in: path
          name: accountId
          type: string
          required: true
          description: Unique Identifier of the sub account.
        - in: body
          name: body
          schema:
            type: object
            properties:
              phone_numbers:
                type: array
                description: Phone number(s) to be assigned to the sub account.
                items:
                  type: string
          x-examples:
            application/json:
              phone_numbers:
                - '34555665654'
                - '10004350500'
                - '000000000'
    parameters:
      - name: accountId
        in: path
        type: string
        required: true
    delete:
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` **No Content**<br>
            Numbers deleted successfully.
          schema: {}
        '400':
          description: |-
            **HTTP Status Code:** `400` **Bad Request**<br>
            **Error Code:** `2100`<br>
            This sub account has no sip trunk plan.
        '404':
          description: |-
            **HTTP Status Code:** `404` **Not Found**<br><br>
            **Error Code:** `2001`<br>
            This account does not exist or does not belong to this master account.<br>
            This account does not exist or does not belong to you.<br><br>
      summary: Delete all numbers
      description: |-
        With SIP-connected audio, Zoom establishes a SIP trunk (a network connection specifically designed to make and deliver phone calls) over a direct and private connection between the customer’s network and the Zoom cloud. Meeting participants that dial into a meeting or have the meeting call them, and are On-Net from the perspective of the customers' IP telephony network, will be connected over this trunk rather than over the PSTN. <br><br>Use this API to delete all internal numbers assigned to a sub account.
        **Prerequisites:**<br>

        * Pro or a higher account with SIP Connected Audio plan enabled.
        * The account must be a master account<br>
        **Scopes:** `sip_trunk:master`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      operationId: deleteAllSipNumbers
      tags:
        - SIP Connected Audio
      security:
        - OAuth: []
      parameters:
        - in: path
          name: accountId
          type: string
          required: true
          description: 'Account ID of the sub account from which the numbers are to be deleted. This can be retrieved from [List sub accounts](https://marketplace.zoom.us/docs/api-reference/zoom-api/accounts/account) API.'
  '/past_meetings/{meetingId}/polls':
    get:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` **OK**<br>
            Polls returned successfully.
          schema:
            type: object
            properties:
              id:
                type: integer
                description: '[Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in "**long**" format(represented as int64 data type in JSON), also known as the meeting number.'
                format: int64
              uuid:
                type: string
                description: Meeting UUID.
              start_time:
                type: string
                description: The start time of the meeting.
                format: date-time
              questions:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: 'Name of the user who submitted answers to the poll. If "anonymous" option is enabled for a poll, the participant''s polling information will be kept anonymous and the value of `name` field will be "Anonymous Attendee".'
                    email:
                      type: string
                      description: Email address of the user who submitted answers to the poll.
                    question_details:
                      type: array
                      items:
                        type: object
                        properties:
                          question:
                            type: string
                            description: Question asked during the poll.
                          answer:
                            type: string
                            description: Answer submitted by the user.
                          polling_id:
                            type: string
                            description: Unique identifier of the poll.
                          date_time:
                            type: string
                            description: Date and time at which the answer to the poll was submitted.
                            format: date-time
          examples:
            application/json:
              id: 123456
              uuid: gsdjfhsdfkhjdsf
              start_time: '2019-02-01T12:34:12.660Z'
              title: Learn something new
              questions:
                - name: Sam S
                  email: myemail@jksdlfkjdf.djfk
                  question_details:
                    - question: How are you?
                      answer: I am wonderful.
      summary: List past meeting's poll results
      description: |-
        [Polls](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings) allow the meeting host to survey attendees. Use this API to list poll results of a meeting.<br><br>

        **Scopes**: `meeting:read:admin`, `meeting:read`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium` <br>
        **Prerequisites**:<br>
        * Host user type must be **Pro**.
        * Meeting must be a scheduled meeting. Instant meetings do not have polling features enabled.
      operationId: listPastMeetingPolls
      tags:
        - Meetings
      security:
        - OAuth: []
      parameters:
        - $ref: '#/parameters/MeetingId4Metrics'
    parameters:
      - name: meetingId
        in: path
        type: string
        required: true
  '/past_meetings/{meetingId}/files':
    get:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` **OK**<br>
            Files retrieved successfully.
          schema:
            type: object
            properties:
              total_records:
                type: integer
                description: The total number of files found.
              in_meeting_files:
                type: array
                items:
                  type: object
                  properties:
                    file_name:
                      type: string
                      description: Name of the file.
                    download_url:
                      type: string
                      description: URL to download the file.
                    file_size:
                      description: Size of the file in bytes.
                      type: integer
          examples:
            application/json:
              total_records: 1
              in_meeting_files:
                - file_name: somefile.txt
                  download_url: somefile.txt/randomurl
                  file_size: 300
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>
            **Error Code:** `1010`<br>
            User does not belong to this account: {accountId}.
        '404':
          description: |-
            **HTTP Status Code:** `404` **Not Found**<br>
            **Error Code:** `3001`<br>
            Meeting ID is invalid or not end.
      description: |-
        **Note: This API has been deprecated and is no longer supported due to GCM encryption updates for security purposes.** To learn about saving the in-meeting chat files via Zoom Client, refer to the [Saving in-meeting chat](https://support.zoom.us/hc/en-us/articles/115004792763-Saving-in-meeting-chat) guide.

        List files sent via in-meeting chat during a meeting. The in-meeting files are deleted after 24 hours of the meeting completion time.
        <br><br>
        **Scope:** `meeting:read`, `meeting:read:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      summary: List past meeting's files
      operationId: listPastMeetingFiles
      tags:
        - Deprecated API Endpoints
      security:
        - OAuth: []
      parameters:
        - $ref: '#/parameters/MeetingId'
    parameters:
      - name: meetingId
        in: path
        type: string
        required: true
  '/past_webinars/{webinarId}/polls':
    get:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` **OK**<br>
            Polls returned successfully.
          schema:
            type: object
            properties:
              id:
                type: integer
                description: 'Webinar ID in "**long**" format(represented as int64 data type in JSON), also known as the webinar number.'
                format: int64
              uuid:
                type: string
                description: Webinar UUID.
              start_time:
                type: string
                description: The start time of the Webinar.
                format: date-time
              questions:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: 'Name of the user who submitted answers to the poll. If "anonymous" option is enabled for a poll, the participant''s polling information will be kept anonymous and the value of `name` field will be "Anonymous Attendee".'
                    email:
                      type: string
                      description: Email address of the user who submitted answers to the poll.
                    question_details:
                      type: array
                      items:
                        type: object
                        properties:
                          question:
                            type: string
                            description: Question asked during the poll.
                          answer:
                            type: string
                            description: Answer submitted by the user.
                          polling_id:
                            type: string
                            description: Unique identifier of the poll.
                          date_time:
                            type: string
                            description: Date and time at which the answer to the poll was submitted.
                            format: date-time
          examples:
            application/json:
              id: 123456
              uuid: gsdjfhsdfkhjdsf
              start_time: '2019-02-01T12:34:12.660Z'
              title: Learn something new
              questions:
                - name: Sam S
                  email: myemail@jksdlfkjdf.djfk
                  question_details:
                    - question: How are you?
                      answer: I am wonderful.
        '401':
          description: |
            **HTTP Status Code:** `401` **Unauthorized**<br>
            **Error Code:** `1010`<br>  User does not belong to this account:{accountId}.
        '404':
          description: |
            **HTTP Status Code:** `404` **Not found**<br>
            Webinar not found.<br>

            **Error Code:** `3001`<br>
            Webinar ID is invalid or not end.<br>
            This webinar id does not belong to you:{webinarId}.
      summary: List past webinar poll results
      description: |+
        The polling feature for webinar allows you to create single choice or multiple choice polling questions for your webinars. Use this API to retrieve the results for Webinar Polls of a specific Webinar.

        **Prerequisites:**<br>
        * [Webinar license](https://zoom.us/webinar)<br>
        **Scopes**: `webinar:read:admin`, `webinar:read`<br>
        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`

      operationId: listPastWebinarPollResults
      tags:
        - Webinars
      security:
        - OAuth: []
      parameters:
        - $ref: '#/parameters/WebinarId4Metrics'
    parameters:
      - name: webinarId
        in: path
        type: string
        required: true
  '/past_webinars/{webinarId}/qa':
    get:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` **OK**<br>
            Q&A returned successfully.
          schema:
            type: object
            properties:
              id:
                type: integer
                description: 'Webinar ID in "**long**" format(represented as int64 data type in JSON), also known as the webinar number.'
                format: int64
              uuid:
                type: string
                description: Webinar UUID.
              start_time:
                type: string
                description: The start time of the Webinar.
                format: date-time
              questions:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: 'Name of the user. If "anonymous" option is enabled for the Q&A, the participant''s  information will be kept anonymous and the value of `name` field will be "Anonymous Attendee".'
                    email:
                      type: string
                      description: Email address of the user.
                    question_details:
                      type: array
                      items:
                        type: object
                        properties:
                          question:
                            type: string
                            description: Question asked during the Q&A.
                          answer:
                            type: string
                            description: Answer submitted for the question.
          examples:
            application/json:
              id: 123456
              uuid: gsdjfhsdfkhjdsf
              start_time: '2019-02-01T12:34:12.660Z'
              title: Learn something new
              questions:
                - name: Sam S
                  email: myemail@jksdlfkjdf.djfk
                  question_details:
                    - question: How are you?
                      answer: I am wonderful.
        '401':
          description: |
            **HTTP Status Code:** `401` **Unauthorized**<br>
            **Error Code:** `1010`<br>  User does not belong to this account:{accountId}.
        '404':
          description: |
            **HTTP Status Code:** `404` **Not found**<br>
            Webinar not found.<br>

            **Error Code:** `3001`<br>
            Webinar ID is invalid or not end.<br>
            This webinar id does not belong to you:{webinarId}.
      summary: List Q&A of past webinar
      description: |-
        The [Question & Answer (Q&A)](https://support.zoom.us/hc/en-us/articles/203686015-Getting-Started-with-Question-Answer) feature for Webinars allows attendees to ask questions during the Webinar and for the panelists, co-hosts and host to answer their questions.<br>
        Use this API to list Q&A of a specific Webinar.

        **Prerequisites:**<br>
        * [Webinar license](https://zoom.us/webinar)<br>
        **Scopes**: `webinar:read:admin`, `webinar:read`<br>
         <br>


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      operationId: listPastWebinarQA
      tags:
        - Webinars
      security:
        - OAuth: []
      parameters:
        - $ref: '#/parameters/WebinarId4Metrics'
    parameters:
      - name: webinarId
        in: path
        type: string
        required: true
  '/past_webinars/{webinarId}/files':
    get:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` **OK**<br>
            Files retrieved successfully.
          schema:
            type: object
            properties:
              total_records:
                type: integer
                description: The total number of files found.
              in_meeting_files:
                type: array
                items:
                  type: object
                  properties:
                    file_name:
                      type: string
                      description: Name of the file.
                    download_url:
                      type: string
                      description: URL to download the file.
                    file_size:
                      description: Size of the file in bytes.
                      type: integer
          examples:
            application/json:
              total_records: 1
              in_meeting_files:
                - file_name: somefile.txt
                  download_url: somefile.txt/randomurl
                  file_size: 300
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>
            **Error Code:** `1010`<br>
            User does not belong to this account: {accountId}.
        '404':
          description: |-
            **HTTP Status Code:** `404` **Not Found**<br>
            **Error Code:** `3001`<br>
            Webinar ID is invalid or not end.
      summary: List past webinar files
      description: |+
        **Note: This API has been deprecated and is no longer supported due to GCM encryption updates for security purposes.**

        List files sent via in-meeting chat during a meeting. The in-meeting files are deleted after 24 hours of the meeting completion time.
        <br><br>
        **Scope:** `webinar:read`, `webinar:read:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>

      operationId: listPastWebinarFiles
      tags:
        - Deprecated API Endpoints
      security:
        - OAuth: []
      parameters:
        - in: path
          name: webinarId
          type: string
          required: true
    parameters:
      - name: webinarId
        in: path
        type: string
        required: true
  /metrics/client/satisfaction:
    get:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Client satisfaction data returned.
          schema:
            type: object
            properties:
              from:
                type: string
                description: Start date for this report in 'yyyy-mm-dd' format.
                format: date
              to:
                type: string
                description: End date for this report in 'yyyy-mm-dd' format.
                format: date
              total_records:
                description: The total number of records available across all pages.
                type: integer
              client_satisfaction:
                type: array
                items:
                  type: object
                  properties:
                    date:
                      type: string
                      description: Date of the report.
                      format: date
                    satisfaction_percent:
                      type: integer
                      description: |-
                        Satisfaction Percentage.
                        The satisfaction percentage is calculated as `(good_count + none_count)` / `total_count`.
                      format: int64
                    good_count:
                      description: The total number of "thumbs up" received for this meeting.
                      type: integer
                    not_good_count:
                      description: The total number of "thumbs down" received for this meeting.
                      type: integer
                    none_count:
                      description: The total number of attendees who didn't submit any response (neither thumbs up nor thumbs down).
                      type: integer
          examples:
            application/json:
              from: '2019-08-05'
              to: '2019-09-05'
              total_records: 30
              client_satisfaction:
                - date: '2019-08-05'
                  satisfaction_percent: 100
                  good_count: 5
                  none_count: 0
                  not_good_count: 1
                - date: '2019-08-06'
                  satisfaction_percent: 100
                  good_count: 0
                  none_count: 0
                  not_good_count: 0
      summary: List client meeting satisfaction
      description: |-
        If the [End of Meeting Feedback Survey](https://support.zoom.us/hc/en-us/articles/115005855266) option is enabled, attendees will be prompted with a survey window where they can tap either the **Thumbs Up** or **Thumbs Down** button that indicates their Zoom meeting experience. With this API, you can get information on the attendees' meeting satisfaction. Specify a monthly date range for the query using the from and to query parameters. The month should fall within the last six months.

        To get information on the survey results with negative experiences (indicated by **Thumbs Down**), use the [Get Zoom Meetings Client Feedback API](https://marketplace.zoom.us/docs/api-reference/zoom-api/dashboards/dashboardclientfeedbackdetail).<br>
        **Scopes:** `dashboard:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`
      operationId: listMeetingSatisfaction
      tags:
        - Dashboards
      security:
        - OAuth: []
      parameters:
        - in: query
          name: from
          type: string
          format: date
          description: 'The start date for the query in “yyyy-mm-dd” format. '
        - in: query
          name: to
          type: string
          description: 'The end date for the query in “yyyy-mm-dd” format. '
          format: date
  /phone/devices:
    post:
      responses:
        '201':
          description: |-
            **HTTP Status Code:** `201` **Created**<br>
            Device added successfully.
          schema: {}
        '400':
          description: |
            **HTTP Status Code:** `400` **Bad Request**<br>
            **Error Code:** `300` **Validation failed.**<br>
            Phone manufacturer does not exist.<br>
            Phone model does not exist.<br>
            Phone manufacturer is not supported.<br><br>
            **Error Code:** `400`<br>
            The MAC Address is invalid.<br>
            The MAC Address already exists in the system.<br>
            Each user can be assigned up to three desk phones.<br>
        '404':
          description: |
            **HTTP Status Code:** `404` **Not Found**<br>
            **Error Code:** `1001`<br>
            User not found: {userId}
      summary: Add a device
      description: |-
        By default, all Zoom Phone users can make and receive calls using the Zoom desktop and mobile applications. Additionally, if a desk phone is required, use this API to [add a desk phone and assign it](https://support.zoom.us/hc/en-us/articles/360021119092#h_5ca07504-68a8-4c3d-ad0e-c1d3594436da) to a user.

        **Prerequisites:**<br>
        * Pro or a higher account with Zoom Phone license
        * Account owner or admin permissions
        * [Supported device](https://support.zoom.us/hc/en-us/articles/360001299063-Zoom-Voice-Supported-Devices)<br>
        **Scopes:** `phone:write:admin`<br>


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      operationId: addPhoneDevice
      tags:
        - Phone Devices
      security:
        - OAuth: []
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              mac_address:
                type: string
                description: |-
                  The MAC address of the desk phone.<br>
                  Note: If you're using a wireless phone, enter the wired MAC address, not the wireless MAC address.
                pattern: '^([0-9A-Fa-f]{2}[:-]?){5}([0-9A-Fa-f]{2})$'
              type:
                type: string
                description: Manufacturer (brand) name of the device.
                maxLength: 50
              model:
                type: string
                description: Model name of the device.
                maxLength: 50
              assigned_to:
                type: string
                description: 'User ID or email address of the user to whom this device is to be assigned. The User ID and the email of the user can be retrieved using the [List Users](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/users) API.'
              display_name:
                type: string
                maxLength: 255
                description: Display name of the desk phone.
            required:
              - mac_address
              - display_name
          x-examples:
            application/json:
              mac_address: 64-16-7f-37-90-92
              display_name: Sita's Phone
              type: Polycom
              model: soundpoint335
              assigned_to: fjdsfgsd@edkfjd.fhjdf
    get:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Devices listed successfully.
          schema:
            type: object
            properties:
              next_page_token:
                type: string
                description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
              page_size:
                type: integer
                description: The number of records returned with a single API call.
              total_records:
                type: string
                description: The total number of records found for the query across all pages.
              devices:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Device ID - Unique Identifier of the Device.
                    display_name:
                      type: string
                      description: Display name of the device.
                    device_type:
                      type: string
                      description: Includes manufacturer name and the model name.
                    mac_address:
                      type: string
                      description: MAC address or serial number of the device.
                    assignee:
                      type: object
                      properties:
                        id:
                          type: string
                          description: User ID of the user to whom the device has been assigned.
                        name:
                          type: string
                          description: Name of the user.
                        extension_number:
                          description: Extension number of the Zoom Phone used by the user.
                          type: integer
                    status:
                      type: string
                      description: Status of the device. The value is either `online` or `offline`.
                      enum:
                        - online
                        - offline
                    site:
                      type: object
                      properties:
                        id:
                          type: string
                          description: 'The [site](https://support.zoom.us/hc/en-us/articles/360020809672) of the phone user.'
                        name:
                          type: string
                          description: 'Name of the [site](https://support.zoom.us/hc/en-us/articles/360020809672).'
          examples:
            application/json:
              next_page_token: proident in o
              page_size: 80839828
              total_records: qui sunt esse
              devices:
                - id: '1234324'
                  display_name: Pooja's Phone
                  device_type: AudioCodes405
                  mac_address: 203a07240534
                  assignee:
                    id: i242djsgrg
                    name: Pooja
                    extension_number: 123
                  status: online
                  site:
                    id: sdfdgdg32
                    name: HQ site
      summary: List devices
      description: |-
        List all the [desk phone devices](https://support.zoom.us/hc/en-us/articles/360021119092) that are configured with Zoom Phone on an account. To view devices that have not yet been assigned to a user, set the value of the `type` query parameter as `unassigned` and to view devices that have been assigned, set the value as `assigned`.<br><br>
        **Scopes:** `phone:read:admin`
         <br>
        **Prerequisites:**<br>
        * Pro or a higher account with Zoom Phone license
        * Account owner or admin permissions<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      operationId: listPhoneDevices
      tags:
        - Phone Devices
      security:
        - OAuth: []
      parameters:
        - in: query
          name: type
          type: string
          description: State of the device. The value should be either `assigned` to list devices that have been assigned to user(s) or `unassigned` to list devices that have not yet been assigned to any user in the Zoom account.
          required: true
          enum:
            - assigned
            - unassigned
        - $ref: '#/parameters/NextPageToken'
        - $ref: '#/parameters/PageSize'
  '/phone/devices/{deviceId}':
    patch:
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` **No Content**<br>
            Device updated successfully.
          schema: {}
        '400':
          description: |+
            **HTTP Status Code:** `400` **Bad Request**<br>
            **Error Code:** `300` <br>
            Validation failed. Device does not exist in the system.<br>
            Invalid userId.<br>

        '404':
          description: |
            **HTTP Status Code:** `404` **Not Found**<br>
            **Error Code:** `1001`<br>
            User not found: {userId}<br>
            The user extension does not exist, extensionId: {extensionId}.
        '429':
          description: |-
            **HTTP Status Code:** `429` **Too Many Requests**<br>
            **Error Code:** `429`<br>
            Each user can be assigned up to three desk phones.
      summary: Update a device
      description: |-
        Update information of a [desk phone device](https://support.zoom.us/hc/en-us/articles/360021119092).<br><br>
        **Prerequisites:**<br>
        * Pro or a higher account with Zoom Phone license
        * Account owner or admin permissions<br>
        **Scopes:** `phone:write:admin`<br>


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      operationId: updateADevice
      tags:
        - Phone Devices
      security:
        - OAuth: []
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              display_name:
                type: string
                maxLength: 255
                description: Display name of the desk phone.
              mac_address:
                type: string
                description: |-
                  The MAC address of the desk phone.<br>
                  Note: If you're using a wireless phone, enter the wired MAC address, not the wireless MAC address.
                pattern: '^([0-9A-Fa-f]{2}[:-]?){5}([0-9A-Fa-f]{2})$'
              assigned_to:
                type: string
                description: 'User ID or email address of the user to whom this device is to be assigned. The User ID and the email of the user can be retrieved using the [List Users](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/users) API.'
          x-examples:
            application/json:
              display_name: 'anim '
              mac_address: E6-12F6-eA6cB3
              assigned_to: adkjfgj211
        - in: path
          name: deviceId
          type: string
          required: true
          description: Unique Identifier of the Device.
    parameters:
      - name: deviceId
        in: path
        type: string
        required: true
    delete:
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` **No Content**<br>
            Device deleted successfully.
          schema: {}
        '400':
          description: |
            **HTTP Status Code:** `400` **Bad Request**<br>
            **Error Code:** `300` **Vaidation Failed.**<br>
            Device does not exist in the system.
            Only unassigned device can be deleted.
      summary: Delete a device
      description: |-
        Remove a [desk phone device](https://support.zoom.us/hc/en-us/articles/360021119092) from the Zoom Phone System Management.<br><br>
        **Prerequisites:**<br>
        * Pro or a higher account with Zoom Phone license
        * Account owner or admin permissions
        * Device must not have been assigned to a user.<br>
        **Scopes:** `phone:write:admin`<br>


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      operationId: deleteADevice
      tags:
        - Phone Devices
      security:
        - OAuth: []
      parameters:
        - in: path
          name: deviceId
          type: string
          required: true
          description: Unique Identifier of the device.
    get:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` **OK**<br>
            Device information retrieved successfully.
          schema:
            type: object
            properties:
              id:
                type: string
                description: Device ID - Unique Identifier of the Device.
              display_name:
                type: string
                description: Display name of the device.
              device_type:
                type: string
                description: Includes manufacturer name and the model name.
              mac_address:
                type: string
                description: MAC address or serial number of the device.
              assignee:
                type: object
                description: User to whom the device has been assigned.
                properties:
                  id:
                    type: string
                    description: User ID of the user to whom the device has been assigned.
                  name:
                    type: string
                    description: Name of the user.
                  extension_number:
                    description: Extension number of the Zoom Phone used by the user.
                    type: integer
              status:
                type: string
                description: Status of the device. The value is either `online` or `offline`.
                enum:
                  - online
                  - offline
              site:
                type: object
                properties:
                  id:
                    type: string
                    description: 'The [site](https://support.zoom.us/hc/en-us/articles/360020809672) of the phone user.'
                  name:
                    type: string
                    description: 'Name of the [site](https://support.zoom.us/hc/en-us/articles/360020809672).'
              provision:
                type: object
                description: Provisioning information of a device.
                properties:
                  type:
                    type: string
                    enum:
                      - assisted
                      - ztp
                      - manual
                    description: |+
                      [Provisioning type](https://support.zoom.us/hc/en-us/articles/360033223411). The value can be one of the following:

                      * `ztp` : Zero touch provisioning.
                      * `assisted`: Assisted provisioning.
                      * `manual`: Manual provisioning.

                  url:
                    type: string
                    description: Provisioning URL. This field will only be returned for devices that were provisioned via `assisted` provisioning type.
                  sip_accounts:
                    type: array
                    description: 'SIP Account details registered during the device provisioning process. This object will only be returned if manual provisioning was used for the device.  '
                    items:
                      type: object
                      properties:
                        sip_domain:
                          type: string
                          description: |-
                            SIP Domain provided in the provisioning process.<br>

                        outbound_proxy:
                          type: string
                          description: Outbound proxy provided in the provisioning process.
                        user_name:
                          type: string
                          description: User name of the SIP account provided in the provisioning process.
                        authorization_id:
                          type: string
                          description: Authorization ID of the SIP account provided in the provisioning process.
                        password:
                          type: string
                          description: 'Password entered during the  provisioning process. '
          examples:
            application/json:
              id: '1234324'
              display_name: Pooja's Phone
              device_type: AudioCodes405
              mac_address: 203a07240534
              assignee:
                id: i242djsgrg
                name: Pooja
                extension_number: 123
              status: online
              site:
                id: sdfdgdg32
                name: HQ site
              provision:
                type: assisted
                url: 'https://zoom.us/pbx/provisioning/abcd'
        '400':
          description: |-
            **HTTP Status Code:** `400` **Bad Request**<br>
            **Error Code:** `400`<br>
            Device does not exist in the system.
      summary: Get device details
      description: |-
        Get detailed information about a specific [desk phone device](https://support.zoom.us/hc/en-us/articles/360021119092).<br><br>
        **Prerequisites:**<br>
        * Pro or a higher account with Zoom Phone license
        * Account owner or admin permissions<br>
        **Scopes:** `phone:write:admin`<br>


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      operationId: getADevice
      tags:
        - Phone Devices
      security:
        - OAuth: []
      parameters:
        - in: path
          name: deviceId
          type: string
          required: true
          description: Unique Identifier of the device.
  '/rooms/{roomId}/location':
    put:
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` **No Content**<br>
            Location of the Zoom Room changed successfully.
          schema: {}
        '400':
          description: |-
            **HTTP Status Code:** `400` **Bad Request**<br>
            **Error Code:** `200`<br>
            Zoom Room subscription not found. Try again after purchasing a Zoom Room subscription.
        '404':
          description: |-
            **HTTP Status Code:** `404` **Not Found**<br><br>
            **Error Code:** `4801`<br>
            Location not found:{location_id}
      summary: Change a Zoom Room's location
      description: |-
        An account owner of a Zoom account can establish a [Zoom Rooms Location Hierarchy](https://support.zoom.us/hc/en-us/articles/115000342983-Zoom-Rooms-Location-Hierarchy) to better organize Zoom Rooms spread accress various location. The location can be structured in a hierarchy with Country being the top-level location, followed by city, campus, building, and floor. Use this API to assign a new location for a Zoom Room. Note that the Zoom Room can be assigned only to the lowest level location available in the hierarchy.
        **Prerequisite:**<br>
        * Account owner or admin permission
        * Zoom Rooms version 4.0 or higher<br>
        **Scopes:** `room:write:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      operationId: changeZRLocation
      tags:
        - Rooms
      security:
        - OAuth: []
      parameters:
        - in: path
          name: roomId
          type: string
          required: true
          description: Unique Identifier of the Zoom Room.
        - in: body
          name: body
          schema:
            type: object
            properties:
              location_id:
                type: string
                description: 'Location ID of the location where Zoom Room is to be assigned. This can be retrieved from the `id` property in the response of [List Zoom Rooms Locations](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations) API.'
          x-examples:
            application/json:
              location_id: ut12434oris
    parameters:
      - name: roomId
        in: path
        type: string
        required: true
  '/rooms/locations/{locationId}/location':
    put:
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` **No Content**<br>
            Location assigned successfully.
          schema: {}
        '400':
          description: |-
            **HTTP Status Code:** `400` **Bad Request**<br><br>
            **Error Code:** `200`<br> Zoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>
            **Error Code:** `300`<br> Invalid parent location id {parent_location_id}
        '404':
          description: |
            **HTTP Status Code:** `404` **Not Found**<br><br>
            **Error Code:** `4801`<br> Location not found:{parent_location_id}.
      summary: Change the assigned parent location
      description: |-
        An account owner of a Zoom account can establish a [Zoom Rooms Location Hierarchy](https://support.zoom.us/hc/en-us/articles/115000342983-Zoom-Rooms-Location-Hierarchy) to better organize Zoom Rooms spread accross various location. The location can be structured in a hierarchy with Country being the top-level location, followed by city, campus, building, and floor. The location in the lower level in the hierarchy is considered as a child of the location that is a level above in the hierarchy. Use this API to change the parent location of a child location. <br><br> For instance, if the location hierarchy is structured in a way where there are two campuses (Campus 1, and Campus 2) in a City and Campus 1 consists of a building named Building 1 with a floor where Zoom Rooms are located, and you would like to rearrange the structure so that Building 1 along with its child locations (floor and Zoom Rooms) are relocated directly under Campus 2 instead of Campus 1, you must provide the location ID of Building 1 in the path parameter of this request and the location ID of Campus 2 as the value of `parent_location_id` in the  request body.<br><br>
        **Prerequisite:**<br>
        * Account owner or admin permission
        * Zoom Rooms version 4.0 or higher<br>
        **Scopes:** `room:write:admin`<br><br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      operationId: changeParentLocation
      tags:
        - Rooms Location
      security:
        - OAuth: []
      parameters:
        - in: path
          name: locationId
          type: string
          required: true
        - in: body
          name: body
          schema:
            type: object
            properties:
              parent_location_id:
                type: string
                description: 'Location ID of the new Parent Location under which you the child location will be positioned. This can be retrieved from the [List Zoom Room Locations](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations) API.'
          x-examples:
            application/json:
              parent_location_id: amesmod123enim
    parameters:
      - name: locationId
        in: path
        type: string
        required: true
  /phone/call_queues:
    post:
      responses:
        '201':
          description: |-
            **HTTP Status Code:** `201` **Created**<br>
            Call Queue created successfully.
          schema:
            type: object
            properties:
              id:
                type: string
                description: Unique Identifier of the Call Queue.
              name:
                type: string
                description: Name of the Call Queue.
              extension_number:
                description: Extension number assigned for the Call Queue.
                type: integer
              status:
                type: string
                description: |-
                  Status of the Call Queue.<br>
                  `active`: Call queue is enabled and active.<br>
                  `inactive`: Call queue is inactive. Inactive call queues cannot be called but will retain its settings and appear in the [Call Queues](https://zoom.us/pbx/page/telephone/groups#/groups) page.
          examples:
            application/json:
              id: SujgNzKq-w
              name: testing123
              extension_number: 10201
              status: active
        '400':
          description: |+

            **HTTP Status Code:** `400` **Bad Request**<br><br>
            **Error Code:** `300`<br>
            Validation Failed.<br>
            Multiple Site is disabled.<br>
            Site does not exist.<br> {extensionNumber} is out of range<br> Exceeded the maximum number to add members per time<br><br>
            **Error Code:** `400`<br> Invalid short number length.<br> Extension number {extensionNumber} is already used.<br>
            **Error Code:** `412` The maximum number of Call Queue members is up to {maxSize}.


        '404':
          description: |
            **HTTP Status Code:** `404` **Not Found**<br><br>
            **Error Code:** `1001`<br>
             User not found: {userId}
      summary: Create a call queue
      description: |-
        Call queues allow you to route incoming calls to a group of users. For instance, you can use call queues to route calls to various departments in your organization such as sales, engineering, billing, customer service etc.<br> Use this API to [create a call queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues#h_e81faeeb-9184-429a-aaea-df49ff5ff413).<br> You can add phone users or common area phones to call queues.

        **Prerequisites:**<br>
        * Pro, Business, or Education account
        * Account owner or admin permissions
        * Zoom Phone license<br>
        **Scopes:** `phone:write:admin`<br>


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      operationId: createCallQueue
      tags:
        - Phone Call Queues
      security:
        - OAuth: []
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              site_id:
                type: string
                description: 'Required only if [multiple sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) have been enabled. This can be retrieved from the [List Phone Sites](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone-site/listphonesites) API.'
              name:
                type: string
                description: Name of the Call Queue.
                minLength: 1
                maxLength: 32
              extension_number:
                description: |-
                  Phone extension number for the site.<br>

                  If a site code has been [assigned](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites#h_79ca9c8f-c97b-4486-aa59-d0d9d31a525b) to the site, provide the short extension number instead of the original extension number..
                type: integer
              description:
                type: string
                description: Description for the Call Queue.
                maxLength: 32
              members:
                type: object
                description: A list of one or more phone users to be included in the call queue. Provide either users or common area phone(s). Provide at least one user in the users object.
                properties:
                  users:
                    type: array
                    description: Users object. Provide either the id (userId) field or the email address of the user.
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: 'User Id of the user. This can be retrieved from the [List Users](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/users) API.'
                        email:
                          type: string
                          description: 'Email address of the user. This can be retrieved from the [List Users](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/users) API.'
                          format: email
                  common_area_phone_ids:
                    type: array
                    description: |-
                      **Optional**<br>
                      Unique identifier of the [Common Area Phone](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones). This can be retrieved from the List Common Area Phones API.
                    items:
                      type: string
            required:
              - site_id
              - name
          x-examples:
            application/json:
              name: testing123
              site_id: CESEpjWwT-upVH7kt_ixWA
              extension_number: 201
              description: testtest
              members:
                users:
                  - email: sdksfbdg@enker.m
    get:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` **OK**<br>
            Call Queues listed successfully.
          schema:
            type: object
            properties:
              page_size:
                type: integer
                description: The number of records returned from a single API call.
                maximum: 100
              next_page_token:
                type: string
                description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
              total_records:
                description: The total number of records found for this query.
                type: integer
              call_queues:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Unique Identifier of the Call Queue.
                    name:
                      type: string
                      description: Name of the Call Queue.
                    extension_number:
                      description: Extension number assigned to the queue.
                      type: integer
                    phone_numbers:
                      type: array
                      description: Phone number(s) assigned to the call queue.
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            description: Unique Identifier of the Phone number assigned.
                          number:
                            type: string
                            description: Phone number.
                          source:
                            type: string
                            description: Source
                            enum:
                              - internal
                              - external
                    status:
                      type: string
                      description: 'Status of the Call Queue.<br>`active`: Call queue is enabled and active.<br>`inactive`: Call queue is inactive. Inactive call queues cannot be called but will retain its settings and appear in the [Call Queues](https://zoom.us/pbx/page/telephone/groups#/groups) page.'
                      enum:
                        - active
                        - inactive
                    site:
                      type: object
                      properties:
                        id:
                          type: string
                          description: 'Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) where the Call Queue is assigned. '
                        name:
                          type: string
                          description: 'Name of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites).'
          examples:
            application/json:
              page_size: 1
              next_page_token: nisidfyolore
              total_records: 1
              call_queues:
                - id: gdfgd4fg
                  name: My test call queue
                  extension_number: 1011
                  phone_numbers:
                    - id: '01'
                      number: '875489'
                      source: internal
                  status: active
                  site:
                    id: vCESddfg_ixWA
                    name: Main Site
      summary: List call queues
      description: |
        Call queues allow you to route incoming calls to a group of users. For instance, you can use call queues to route calls to various departments in your organization such as sales, engineering, billing, customer service etc.<br> Use this API to list Call queues.<br><br>
        **Prerequisites:**<br>
        * Pro, Business, or Education account
        * Account owner or admin permissions
        * Zoom Phone license<br>
        **Scopes:** `phone:read:admin`<br>


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      operationId: listCallQueues
      tags:
        - Phone Call Queues
      security:
        - OAuth: []
      parameters:
        - $ref: '#/parameters/NextPageToken'
        - in: query
          name: page_size
          type: integer
          description: The number of records returned from a single API call.
          default: 30
          maximum: 100
  '/phone/call_queues/{callQueueId}':
    get:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` **OK**<br>
            Call Queue details retrieved successfully.
          schema:
            type: object
            properties:
              id:
                type: string
                description: Unique Identifier of the Call Queue.
              name:
                type: string
                description: Name of the Call Queue.
              extension_number:
                type: integer
                description: Extension number assigned to the Call Queue.
              status:
                type: string
                description: Status of the Call Queue.
                enum:
                  - active
                  - inactive
              site:
                type: object
                properties:
                  id:
                    type: string
                    description: 'Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) where the Call Queue is assigned.'
                  name:
                    type: string
                    description: 'Name of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites).'
              phone_numbers:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Unique Identifier of the number.
                    number:
                      type: string
                      description: Phone number.
                    source:
                      type: string
                      description: Source
                      enum:
                        - internal
                        - external
              members:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: 'User ID: Unique Identifier of the user.'
                        name:
                          type: string
                          description: Name of the user.
                        level:
                          type: string
                          description: |-
                            Level of the user. The value can be one of the following:<br>
                            `manager`: A call queue manager has the privilege to change call queue settings, policy settings and manage recordings and voicemail inbox. There can only be one manager for each call queue.<br><br>
                            `user`: Regular user without the privileges of a manager.
                          enum:
                            - manager
                            - user
                        receive_call:
                          type: boolean
                          description: Determines whether the user can receive calls or not.
                  common_area_phones:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: 'Unique Identifier of the [Common Area Phone](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones).'
                        name:
                          type: string
                          description: 'Name of the [Common Area Phone](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones).'
          examples:
            application/json:
              id: jIfhghXFA
              name: Test-Callqueue
              extension_number: 10001
              members:
                users:
                  - id: z8hfgh8uQ
                    name: Lisa Yankowski
                    level: manager
                    receive_call: true
              status: active
              site:
                id: CcvcvnWA
                name: Main Site
        '400':
          description: |-
            **HTTP Status Code:** `400` **Bad Request**<br>
            **Error Code:** `400`<br>
             The group does not exist, groupId:{callQueueId}.
      summary: Get call queue details
      description: |-
        Call queues allow you to route incoming calls to a group of users. For instance, you can use call queues to route calls to various departments in your organization such as sales, engineering, billing, customer service etc.<br> Use this API to get information on a specific Call Queue.<br><br>
        **Prerequisites:**<br>
        * Pro, Business, or Education account
        * Account owner or admin permissions
        * Zoom Phone license<br>
        **Scopes:** `phone:read:admin`<br>


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      operationId: getACallQueue
      tags:
        - Phone Call Queues
      security:
        - OAuth: []
      parameters:
        - in: path
          name: callQueueId
          type: string
          required: true
          description: 'Unique Identifier of the Call Queue. This can be retrieved from [List Call Queues API](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone-call-queues/listcallqueues).'
    parameters:
      - name: callQueueId
        in: path
        type: string
        required: true
    patch:
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` **No Content**<br>
            Call Queue details updated successfully.
          schema: {}
        '400':
          description: |-
            **HTTP Status Code:** `400` **Bad Request**<br>
            **Error Code:** `300`<br>
            Validation Failed. The group does not exist, groupId:{groupId}<br>
            Timezone not found in the system.<br><br>
            **Error Code:** `400`<br>
            Unable to update this call queue as it is used for internal safety response team.
      summary: Update call queue details
      description: |
        Call queues allow you to route incoming calls to a group of users. For instance, you can use call queues to route calls to various departments in your organization such as sales, engineering, billing, customer service etc.<br> Use this API to update information of a specific Call Queue.<br>
        **Prerequisites:**<br>
        * Pro, Business, or Education account
        * Account owner or admin permissions
        * Zoom Phone license<br>
        **Scopes:** `phone:write:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      operationId: updateCallQueue
      tags:
        - Phone Call Queues
      security:
        - OAuth: []
      parameters:
        - in: path
          name: callQueueId
          type: string
          required: true
          description: Unique Identifier of the Call Queue.
        - in: body
          name: body
          schema:
            type: object
            properties:
              name:
                type: string
                description: Name of the Call Queue.
                maxLength: 32
              description:
                type: string
                description: Description for the Call Queue.
                maxLength: 32
              site_id:
                type: string
                description: 'Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) where the Call Queue is assigned.'
              extension_number:
                description: |-
                  Phone extension number for the site.<br>

                  If a site code has been [assigned](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites#h_79ca9c8f-c97b-4486-aa59-d0d9d31a525b) to the site, provide the short extension number instead of the original extension number.
                type: integer
              timezone:
                type: string
                description: '[Timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) of the Call Queue.'
              status:
                type: string
                description: |-
                  Status of the Call Queue. Allowed values:<br>
                  `active`<br>
                  `inactive`
                enum:
                  - active
                  - inactive
          x-examples:
            application/json:
              name: Sales
              description: Sales Call Queue
              site_id: gdfgfdg11m
              extension_number: 72860194
              timezone: America/New_York
              status: active
    delete:
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` **No Content**<br>
            Call Queue deleted successfully.
          schema: {}
        '400':
          description: |-
            **HTTP Status Code:** `400` **Bad Request**<br><br>
            **Error Code:** `400`<br>
            The group does not exist, groupId:{callQueueId}.
      summary: Delete a call queue
      description: |+
        Call queues allow you to route incoming calls to a group of users. For instance, you can use call queues to route calls to various departments in your organization such as sales, engineering, billing, customer service etc.<br> Use this API to delete a Call Queue.<br>
        **Prerequisites:**<br>
        * Pro, Business, or Education account
        * Account owner or admin permissions
        * Zoom Phone license<br>
        **Scopes:** `phone:write:admin`<br>


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`

      operationId: deleteACallQueue
      tags:
        - Phone Call Queues
      security:
        - OAuth: []
      parameters:
        - in: path
          name: callQueueId
          type: string
          required: true
          description: Unique Identifier of the call queue.
  '/phone/call_queues/{callQueueId}/phone_numbers':
    post:
      responses:
        '204':
          description: |
            **HTTP Status Code:** `204` **No Content**<br>
          schema:
            type: object
            properties: {}
      summary: Assign numbers to a call queue
      description: |+
        After [buying phone number(s)](https://support.zoom.us/hc/en-us/articles/360020808292#h_007ec8c2-0914-4265-8351-96ab23efa3ad), you can assign it, allowing callers to directly dial a number to reach a [call queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues).<br><br>
        **Prerequisites:**<br>
        * Pro or higher account plan.
        * Account owner or admin permissions
        * Zoom Phone license<br>
        **Scopes:** `phone:write:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`

      operationId: assignPhoneToCallQueue
      tags:
        - Phone Call Queues
      security:
        - OAuth: []
      parameters:
        - in: path
          name: callQueueId
          type: string
          required: true
          description: Unique Identifier of the Call Queue.
        - in: body
          name: body
          schema:
            type: object
            properties:
              phone_numbers:
                type: array
                description: Provide either the `id` or the `number` field. Only a max of 5 numbers can be assigned to a call queue at a time.
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Unique Identifier of the phone number.
                    number:
                      type: string
                      description: Phone number.
          x-examples:
            application/json:
              phone_numbers:
                - id: lgdfgrdg
                  number: '12234556'
    parameters:
      - name: callQueueId
        in: path
        type: string
        required: true
    delete:
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` **No Content**<br>
            Phone numbers unassigned successfully.
          schema:
            type: object
            properties: {}
        '400':
          description: |-
            **HTTP Status Code:** `400` **Bad Request**<br><br>
            **Error Code:** `300`<br>
            Validation Failed. The group does not exist, groupId:{callQueueId}
      summary: Unassign all phone numbers
      description: |+
        Use this API to unbind all phone numbers that are assigned to a [Call Queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues) After successful unbinding, the numbers will appear in the [Unassigned tab](https://zoom.us/signin#/numbers/unassigned).<br> If you only need to unassign a specific phone number, use the Unassign a Phone Number API instead. <br>
        **Prerequisites:**
        * Pro or higher account palan
        * Account owner or admin permissions
        * Zoom Phone license <br> **Scopes:** `phone:write:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`

      operationId: unassignAPhoneNumCallQueue
      tags:
        - Phone Call Queues
      security:
        - OAuth: []
      parameters:
        - in: path
          name: callQueueId
          type: string
          required: true
          description: Unique Identifier of the Call Queue. This can be retrieved from List Call Queues API.
  '/phone/call_queues/{callQueueId}/phone_numbers/{phoneNumberId}':
    delete:
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` **No Content**<br>
            Phone Number unassigned successfuly.
          schema:
            type: object
            properties: {}
        '400':
          description: |
            **HTTP Status Code:** `400` **Bad Request**<br>
            **Error Code:** `300`<br>
            Validation failed. The group does not exist, groupId:{callQueueId}.
        '404':
          description: |-
            **HTTP Status Code:** `404` **Not Found**<br><br>
            **Error Code:** `404`<br>
            Phone number not belong to call queue.
      summary: Unassign a phone number
      description: |+
        After assigning a phone number, you can unbind it if you don't want it to be assigned to a [Call Queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues). Use this API to unbind a phone number from a Call Queue. After successful unbinding, the number will appear in the [Unassigned tab](https://zoom.us/signin#/numbers/unassigned).<br><br>
        **Prerequisites:**
        * Pro or higher account palan
        * Account owner or admin permissions
        * Zoom Phone license <br> **Scopes:** `phone:write:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`

      operationId: unAssignPhoneNumCallQueue
      tags:
        - Phone Call Queues
      security:
        - OAuth: []
      parameters:
        - in: path
          name: callQueueId
          type: string
          required: true
          description: Unique Identifier of the Call Queue. This can be retrieved from the List Call Queues API.
        - in: path
          name: phoneNumberId
          type: string
          required: true
          description: 'Unique Identifier of the Phone Number. '
    parameters:
      - name: callQueueId
        in: path
        type: string
        required: true
      - name: phoneNumberId
        in: path
        type: string
        required: true
  '/phone/call_queues/{callQueueId}/members':
    post:
      responses:
        '201':
          description: |-
            **HTTP Status Code:** `201` **Created**<br>
            Members added successfully.
          schema:
            type: object
            properties: {}
        '400':
          description: |+
            **HTTP Status Code:** `400` **Bad Request**<br><br>
            **Error Code:** `300`<br>
            Validation Failed. The group does not exist, groupId:{callQueueId}.<br>
            Exceeded the maximum number to add members per time.<br><br>
            **Error Code:** `412`<br>
            The maximum number of Call Queue members is up to {maxSize}.


        '404':
          description: |-
            **HTTP Status Code:** `404` **Not Found**<br><br>
            **Error Code:** `1001`<br>
            User not found: {userId}.
      summary: Add members to a call queue
      description: |-
        Add phone users and/or [common area phones](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones) as members to a specific Call Queue.<br><br>
        **Prerequisites:**<br>
        * Pro or higher account plan.
        * Zoom Phone license<br>
        **Scopes:** `phone:write:admin`<br>


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      operationId: addMembersToCallQueue
      tags:
        - Phone Call Queues
      security:
        - OAuth: []
      parameters:
        - in: path
          name: callQueueId
          type: string
          required: true
          description: Unique Identifier of the Call Queue.
        - in: body
          name: body
          schema:
            type: object
            properties:
              members:
                type: object
                description: A maximum of 10 members can be added at a time.
                properties:
                  users:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: 'User ID: Unique Identifier of the user.'
                        email:
                          type: string
                          description: Email address of the user.
                          format: email
                  common_area_phone_ids:
                    type: array
                    description: Array of one or more Common Area Phone Ids of the Common Area Phone(s) that you would like to add to the Call Queue.
                    items:
                      type: string
          x-examples:
            application/json: |-
              {
                  "members": {
                      "users": [
                          {
                              "id": "dkjfdjghdfg",
                              "email": "ge9ru@fghdf.fdg"
                          }
                      ],
                      "common_area_phone_ids": "["1234455", "13232434"]"
                  }
              }
    parameters:
      - name: callQueueId
        in: path
        type: string
        required: true
    delete:
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` **No Content**<br>
            Member unassigned successfully.
          schema: {}
        '400':
          description: |-
            **HTTP Status Code:** `400` **Bad Request**<br>
            **Error Code:** `300`<br>
            Validation Failed. The group does not exist, groupId:{callQueueId}.
      summary: Unassign all members
      description: |-
        Use this API to remove all members from a Call Queue who were previously assigned to that Call Queue. The members could be phone users or [common area phones](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones).
        **Prerequisites:**<br>
        * Pro or higher account plan.
        * Zoom Phone license<br>
        **Scopes:** `phone:write:admin`<br>


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      operationId: unassignAllMembers
      tags:
        - Phone Call Queues
      security:
        - OAuth: []
      parameters:
        - in: path
          name: callQueueId
          type: string
          required: true
  '/phone/call_queues/{callQueueId}/members/{memberId}':
    delete:
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` **No Content**<br>
            Member unassigned successfully.
          schema: {}
        '400':
          description: |-
            **HTTP Status Code:** `400` **Bad Request**<br>
            **Error Code:** `300`<br>
            Validation Failed. The group does not exist, groupId:{callQueueId}.
            **Error Code:** `400`<br>Unable to delete manager<br>
        '404':
          description: |-
            **HTTP Status Code:** `404` **Not Found**<br><br>
            Unable to find group member
      summary: Unassign a member
      description: |+
        Use this API to remove a member from a Call Queue who was previously added to that Call Queue. The member could be a phone user or a [common area phone](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones). A member who is a Call Queue Manager cannot be unassigned from the Call Queue using this API.
        **Prerequisites:**<br>
        * Pro or higher account plan.
        * Zoom Phone license<br>
        **Scopes:** `phone:write:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`

      operationId: unassignMemberFromCallQueue
      tags:
        - Phone Call Queues
      parameters:
        - in: path
          name: callQueueId
          type: string
          required: true
          description: Unique Identifier of the Call Queue from which the member needs to be unassigned.
        - in: path
          name: memberId
          type: string
          required: true
          description: Unique Identifier of the member who needs to be unassigned.
      security:
        - OAuth: []
    parameters:
      - name: callQueueId
        in: path
        type: string
        required: true
      - name: memberId
        in: path
        type: string
        required: true
  '/phone/call_queues/{callQueueId}/manager':
    put:
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` **No Content**<br>
            Call queue manager changed successfully.
          schema: {}
        '400':
          description: |-
            **HTTP Status Code:** `400` **Bad Request**<br><br>
            **Error Code:** `300`<br>
            Validation Failed. The group does not exist, groupId:{callQueueId}.
        '404':
          description: |-
            **HTTP Status Code:** `404` **Not Found**<br><br>
            **Error Code:** `1001`<br>
            User not found: {userId}
      summary: Change call queue manager
      description: |+
        A call queue manager has the privileges to maanage the call queue's voicemail inbox and recordings, change all call queue settings and call queue policy settings.<br><br> Use this API to to set another phone user as the [call queue manager](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues#h_db06854b-e6a3-4afe-ba15-baf58f31f90c).
        **Prerequisites:**<br>
        * Pro or higher account plan.
        * Account owner or admin permissions
        * Zoom Phone license<br>
        **Scopes:** `phone:write:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`

      operationId: changeCallQueueManager
      tags:
        - Phone Call Queues
      security:
        - OAuth: []
      parameters:
        - in: path
          name: callQueueId
          type: string
          required: true
          description: Unique Identifier of the Call Queue.
        - in: body
          name: body
          schema:
            type: object
            properties:
              member_id:
                type: string
                description: Unique Identifier (userId) or email address of the user who will be the new call queue manager.
          x-examples:
            application/json:
              member_id: dfjdsf@sdjdf.dfhjdf
    parameters:
      - name: callQueueId
        in: path
        type: string
        required: true
  '/phone/numbers/{numberId}':
    get:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` **OK**<br>
            Phone number details retrieved successfully.
          schema:
            type: object
            properties:
              id:
                type: string
                description: Unique Identifier of the Phone Number.
              number:
                type: string
                description: Phone number in E164 format.
              display_name:
                type: string
                description: The display name for the phone number.
              source:
                type: string
                enum:
                  - internal
                  - external
                description: Source of phone number.
              status:
                type: string
                description: Status of the number.
                enum:
                  - pending
                  - available
              number_type:
                type: string
                description: |-
                  The type of number. Values can be one of the following:<br>
                  `toll`, `tollfree`
                enum:
                  - toll
                  - tollfree
              capability:
                type: array
                description: 'The capability for the phone number, whether it can take incoming calls, make outgoing calls, or both. Values include `incoming`, `outgoing`, or both of these values.'
                items:
                  type: string
              location:
                type: string
                description: 'Location (city, state and country) where the Phone number is assigned.'
              assignee:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique Identifier of the user to whom the number has been assigned.
                  name:
                    type: string
                    description: Name of the user to whom the number has been assigned.
                  extension_number:
                    type: integer
                    description: Extension number of the Phone.
                  type:
                    type: string
                    description: |-
                      Indicates who the phone number belongs to.<br>
                      `user`: Number has been assigned to an existing phone user allowing them to receive calls through their extension number or direct phone number.<br> `callQueue`: Phone number has been assigned to a [call queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues).<br> `commonAreaPhone`: Phone number has been assigned to a [ provisioned common area desk phone](https://support.zoom.us/hc/en-us/articles/360021119092-Provisioning-Phones-and-Devices).<br>
                      `autoReceptionist`: Phone number has been assigned to an [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Integrated-Voice-Response-IVR-).<br>
                    enum:
                      - user
                      - callQueue
                      - autoReceptionist
                      - commonAreaPhone
              site:
                type: object
                properties:
                  id:
                    type: string
                    description: 'Target [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) in which the phone number was assigned. Sites allow you to organize the phone users in your organization. For example, you sites could be created based on different office locations.'
                  name:
                    type: string
                    description: Name of the site where the phone number is assigned.
          examples:
            application/json:
              id: Hfdgdfgdfg1ew
              number: '+140000007'
              display_name: abc
              source: internal
              status: available
              number_type: toll
              capability:
                - incoming
                - outgoing
              location: 'Milpitas,California,United States'
              assignee:
                name: Main Auto Receptionist
                extension_number: 10000
                type: autoReceptionist
              site:
                id: CEfdfdfgA
                name: Main Site
        '400':
          description: |-
            **HTTP Status Code:** `400` **Bad Request**<br>
            **Error Code:** `400`<br>
            Phone number does not exist, phonenumberId:{phoneNumberId}
      summary: Get phone number details
      description: |-
        A Zoom account owner or admin can purchase phone numbers and assign them to Zoom phone users. Use this API to get details on a specific Phone number in a Zoom account.<br><br>
        **Prerequisites:**<br>
        * Pro or higher plan with Zoom phone license<br>
        **Scope:** `phone:read:admin`<br>


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      operationId: getPhoneNumberDetails
      tags:
        - Phone
      security:
        - OAuth: []
      parameters:
        - in: path
          name: numberId
          type: string
          required: true
          description: Unique Identifier of the Phone Number. This can be retrieved from the List Phone Numbers API.
    parameters:
      - name: numberId
        in: path
        type: string
        required: true
    patch:
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`<br>
            No Content
          schema: {}
        '400':
          description: |-
            **HTTP Response Code:** `400`<br>

            **Error Code:** `300`<br>
            The value of capability is invalid. Provide a valid capability and try again.
        '404':
          description: |-
            **HTTP Status Code:** `404` <br>
            Phone number does not exist: {numberId}.
      summary: Update phone number details
      operationId: updatePhoneNumberDetails
      tags:
        - Phone
      security:
        - OAuth: []
      description: |-
        Update phone number details.

        **Scopes:**
        * `phone:write` `phone:write:admin`
        * `phone:master`

        **Prerequisite:**
        * Paid account

        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      parameters:
        - in: path
          name: numberId
          type: string
          required: true
          description: Phone number ID.
        - in: body
          name: body
          schema:
            type: object
            properties:
              display_name:
                type: string
                description: Phone number display name.
              capability:
                type: array
                description: 'Phone number capability. Values: `outgoing` or `incoming`. Add one or both.'
                items:
                  type: string
  /phone/company_number:
    put:
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` **No Content**<br>
            Main company number updated successfully.
          schema: {}
        '400':
          description: |-
            **HTTP Status Code:** `400` **Bad Request**<br>
            **Error Code:** `400`<br><br>
            Target phone number can not be set as main company number.<br>
            Unable to update this number as it is used for outbound caller ID to public safety answering point.
        '404':
          description: |-
            **HTTP Status Code:** `404` **Not Found**<br><br>
            **Error Code:** `404`
            phoneNumber does not exist, phonenumberId:{phonenumberId}.
      summary: Change main company number
      description: |-
        The [main company number](https://support.zoom.us/hc/en-us/articles/360028553691) can be used by external callers to reach your phone users (by dialing the main company number and the user's extension). It can also be used by phone users in your account as their caller ID while making calls.<br><br> Use this API to [change the main company number](https://support.zoom.us/hc/en-us/articles/360028553691#h_82414c34-9df2-428a-85a4-efcf7f9e0d72) of an account.<br><br>
        **Prerequisites:**<br>
        * Pro or higher account plan.
        * Account owner or admin permissions<br>
        **Scopes:** `phone:write:admin`<br>


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      operationId: changeMainCompanyNumber
      tags:
        - Phone
      security:
        - OAuth: []
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              phone_number:
                type: string
                description: 'Provide either the unique identifier of the phone number (id) or the phone number itself in e164 format (e.g: +199955500123).'
          x-examples:
            application/json:
              phone_number: '+1999555000123'
  /phone/calling_plans:
    get:
      responses:
        '200':
          description: |
            **HTTP Status Code:** `200` **OK**<br>
            Calling plans listed successfully.
          schema:
            type: object
            properties:
              calling_plans:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: Name of the plan.
                    type:
                      type: integer
                      description: 'Plan type. Refer to the Plan Number section [here](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans).'
                    subscribed:
                      type: integer
                      description: Total number of plan subscriptions bought.
                    assigned:
                      type: integer
                      description: Total number of plan used.
                    available:
                      type: integer
                      description: Remaining number of calling plans that can be assigned.
          examples:
            application/json:
              calling_plans:
                - name: US/Canada metered calling plan
                  type: 100
                  subscribed: 10
                  assigned: 1
                  available: 9
                - name: Australia/New Zealand metered calling plan
                  type: 101
                  subscribed: 4
                  assigned: 2
                  available: 2
      summary: List calling plans
      description: |-
        List all Zoom Phone [calling plans](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) that are enabled for a Zoom account.<br><br>
        **Prerequisites:**<br>
        * Pro or a higher account with Zoom phone license. <br>
        **Scope:** `phone:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      operationId: listCallingPlans
      tags:
        - Phone
      security:
        - OAuth: []
  /phone/users:
    get:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` **OK**<br>
            Phone users retrieved successfully.
          schema:
            type: object
            properties:
              next_page_token:
                type: string
                description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
              page_size:
                type: integer
                description: The number of records returned from a single API call.
                maximum: 100
                default: 30
              total_records:
                description: The total records found for this query.
                type: integer
              users:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Unique Identifier of the user (userId).
                    phone_user_id:
                      type: string
                      description: Zoom Phone Identifier of the user.
                    name:
                      type: string
                      description: Name of the user.
                    email:
                      type: string
                      format: email
                      description: Email address of the user.
                    site:
                      type: object
                      properties:
                        id:
                          type: string
                          description: 'Unique Identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites).'
                        name:
                          type: string
                          description: Name of the site.
                    extension_number:
                      description: Extension number assigned to the user's Zoom phone number.
                      type: integer
                    status:
                      type: string
                      description: |-
                        Displays the status of the user's Zoom Phone license. The value can be either of the following:<br>
                        `activate`: Active Zoom phone user.<br>
                        `deactivate`: User with Zoom phone license disabled. This type of user can't make or receive calls.
                    calling_plans:
                      type: array
                      items:
                        type: object
                        properties:
                          type:
                            type: string
                            description: Type of calling plan that user is enrolled in.
                          name:
                            type: string
                            description: Name of the calling plan that user is enrolled in.
          examples:
            application/json:
              next_page_token: ''
              page_size: 30
              total_records: 1
              users:
                - calling_plans:
                    - name: US/CA Unlimited Calling Plan
                      type: 200
                  id: z8ghgfh8uQ
                  phone_user_id: EMhghghg5w
                  email: sghhgghf@ghghmail.com
                  name: Shri Shri
                  extension_number: 10000
                  status: activate
                  site:
                    id: CESEpjWwT-upVH7kt_ixWA
                    name: Main Site
      summary: List phone users
      description: |-
        List all the users on an account who have been assigned Zoom Phone licenses.<br><br>
        **Prerequisites:**<br>
        * Pro or higher plan with Zoom phone license<br>
        **Scope:** `phone:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      operationId: listPhoneUsers
      tags:
        - Phone
      security:
        - OAuth: []
      parameters:
        - in: query
          name: page_size
          type: integer
          default: 30
          description: The number of records returned from a single API call.
          maximum: 100
        - $ref: '#/parameters/NextPageToken'
        - in: query
          name: site_id
          type: string
          description: Unique Identifier of the site. This can be retrieved from List Phone Sites API.
  '/phone/auto_receptionists/{autoReceptionistId}':
    patch:
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204`<br> **No Content**<br>
            Auto Receptionist details updated sucessfully.
          schema: {}
        '400':
          description: |+
            **HTTP Status Code:** `400` **Bad Request**<br><br>
            **Error Code:** `300`<br>
            Extension Number must be {min} to {max} digits<br>
            Validation Failed. AutoReceptionist does not exist, AutoReceptionistId: {autoReceptionistId}<br><br>
            **Error Code:** `400`<br>
            Invalid short number length.<br>
            Invalid full extension number length.<br><br>
            **Error Code:** `10001`<br>
            Number {extensionNumber} is a reserved extension number.<br>
            Extension number {extensionNumber} is already used.

      summary: Update auto receptionist details
      description: |-
        An auto receptionist answers calls with a personalized recording and routes calls to a phone user, call queue, common area phone, or voicemail. An auto receptionist can also be set up so that it routes calls to an interactive voice response (IVR) system to allow callers to select the routing options.<br>
        Use this API to [change information](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Interactive-Voice-Response-IVR-#h_1d5ffc56-6ba3-4ce5-9d86-4a1a1ee743f3) such as display name and extension number assigned to the main auto receptionist.<br><br>
        **Prerequisites:**<br>
        * Pro or higher account with Zoom Phone license.<br>
        **Scopes:** `phone:write:admin` <br>


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      operationId: updateAutoReceptionist
      tags:
        - Phone Auto Receptionists
      security:
        - OAuth: []
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              name:
                type: string
                description: Display name of the auto receptionist.
                maxLength: 32
              extension_number:
                description: 'Extension number to be assigned to the auto receptionist. If site code is enabled, provide the short extension number instead.'
                type: integer
          x-examples:
            application/json: |-
              {
                "name": "dfdsff",
                "extension_number": 08
              }
        - in: path
          name: autoReceptionistId
          type: string
          required: true
          description: 'Unique Identifier of the Auto Receptionist. It can be retrieved from the [List Sites API](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone-site/listphonesites).'
    parameters:
      - name: autoReceptionistId
        in: path
        type: string
        required: true
  '/phone/auto_receptionists/{autoReceptionistId}/phone_numbers':
    post:
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` **No Content**<br>
            Phone numbers assigned successfully.
          schema: {}
        '400':
          description: |-

            **HTTP Status Code:** `400` **Bad Request**<br>
            **Error Code:** `400`<br>
            Unable to update this number as it is used for outbound caller ID to public safety answering point.<br>
            Phone number does not exist, phonenumberId:{phonenumberId}<br>
            phoneNumber is used, phonenumberId:{phonenumberId}
        '404':
          description: |-
            **HTTP Status Code:** `404` **Not Found**<br><br>
            **Error Code:** `404`<br>
            AutoReceptionist does not exist, AutoReceptionistId: {autoReceptionId}.
      summary: Assign phone numbers
      description: |-
        Assign available phone numbers to an [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Interactive-Voice-Response-IVR-). The available numbers can be retrieved using the List Phone Numbers API with `type` query parameter set to "unassigned".

        **Prerequisites:**
        * Pro or higher account plan with Zoom Phone License
        * Account owner or admin permissions<br>
        **Scopes:** `phone:write:admin`<br>


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      tags:
        - Phone Auto Receptionists
      security:
        - OAuth: []
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              phone_numbers:
                type: array
                description: Provide either the unique identifier of the Phone Number  in the `id` field or provide the phone number in the `number` field.
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Unique Identifier of the Phone number.
                    number:
                      type: string
                      description: Phone number in e164 format.
          x-examples:
            application/json: |-
              {
                "phone_numbers": [
                  {
                    "id": "cyjoruyk",
                  },
                  {
                    "number": "+11000110011"
                  }
                ]
              }
        - in: path
          name: autoReceptionistId
          type: string
          required: true
          description: 'Unique Identifier of the Auto Receptionist. It can be retrieved from the [List Sites API](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone-site/listphonesites).'
      operationId: assignPhoneNumbersAutoReceptionist
    parameters:
      - name: autoReceptionistId
        in: path
        type: string
        required: true
    delete:
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` **No Content**<br>
            Phone numbers unassigned successfully.
          schema: {}
        '404':
          description: |-
            **HTTP Status Code:** `404` **Not Found**<br><br>
            **Error Code:** `404`<br>
            AutoReceptionist does not exist, AutoReceptionistId: {autoReceptionId}
      summary: Unassign all phone numbers
      description: |
        Unassign all phone numbers that were previously assigned to an [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Interactive-Voice-Response-IVR-).

        **Prerequisites:**
        * Pro or higher account plan with Zoom Phone License
        * Account owner or admin permissions<br>
        **Scopes:** `phone:write:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      operationId: unassignAllPhoneNumsAutoReceptionist
      tags:
        - Phone Auto Receptionists
      security:
        - OAuth: []
  /phone/common_area_phones:
    post:
      responses:
        '201':
          description: |-
            **HTTP Status Code:** `201` **Created**<br>

            Common area phone added successfully.
          schema:
            type: object
            properties:
              id:
                type: string
                description: Unique Identifier of the common area phone.
              display_name:
                type: string
                description: Display name of the common area phone.
          examples:
            application/json:
              id: comfgfd45um
              display_name: Common Area Phone - lobby
        '400':
          description: |
            **HTTP Status Code:** `400` **Bad Request**<br><br>
            **Error Code:** `300`<br>
            Validation failed.<br>
            * Phone manufacturer does not exist.
            * Phone model does not exist.
            * Phone manufacturer is not supported.<br><br>
            **Error Code:** `400`<br>
            The MAC Address is invalid.
        '409':
          description: |-
            **HTTP Status Code:** `409`<br>
            **Error Code:** `409`<br>
            The MAC Address already exists in the system.
      summary: Add a common area phone
      description: |-
        A common area phone can be provisioned by a Zoom account owner or a Zoom admin so that anyone in an organization can use it. For example, if your office has shared desks that don't belong to a specific employees, you could add a common area phone so that any person can use it.<br> Use this API to [add a common area phone](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones#h_2d0da347-c35a-4993-9771-e21aaa568deb).<br><br>
        **Prerequisites:**<br>
        * Pro or a higher account with Zoom Phone license.
        * Account owner or admin permissions.
        * [Supported device](https://support.zoom.us/hc/en-us/articles/360001299063-Zoom-Voice-Supported-Devices)<br>
        **Scope:** `phone:write:admin`<br>


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      operationId: addCommonAreaPhone
      security:
        - OAuth: []
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              site_id:
                type: string
                description: 'Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672). This can be retrieved from List Sites API.'
              display_name:
                type: string
                description: Display name of the Common area phone.
              description:
                type: string
                description: Description for the common area phone.
              extension_number:
                type: integer
                description: 'Extension number assigned to the common area phone. If site code is enabled, provide the short extension number instead.'
              mac_address:
                type: string
                description: 'Mac Address (serial number) of the common area desk phone. These examples show the formats supported: `64-16-7f-37-90-92` or `64167f379092`'
              type:
                type: string
                description: 'Phone device manufacturer name. Refer to the "Manufacturer Name" field in [this](https://marketplace.zoom.us/docs/api-reference/other-references/zoomphone-supporteddevice) table.'
                minLength: 1
                maxLength: 50
              model:
                type: string
                description: 'Device Model name. Refer to the "Model Name" field in [this](https://marketplace.zoom.us/docs/api-reference/other-references/zoomphone-supporteddevice) table.'
                minLength: 1
                maxLength: 50
              time_zone:
                type: string
                description: '[Timezone ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists) for the common area phone.'
            required:
              - display_name
              - extension_number
              - mac_address
              - type
          x-examples:
            application/json: "{\n  \"extension_number\": 50978119,\n  \"mac_address\": \"64-16-7f-37-90-92\",\n  \"type\": \"Cisco\",\n  \"site_id\": \"occaecat\",\n  \"display_name\": \"nulla cillum nisi \",\n  \"description\": \"proident laborum\",\n  \"model\": \"cp8861\",\n  \"time_zone\": \"Pacific/Midway\t\"\n}"
      tags:
        - Common Area Phones
      consumes:
        - application/json
    get:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` **OK**<br>
            List of Common Area Phones retrieved successfully.
          schema:
            type: object
            properties:
              next_page_token:
                type: string
                description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
              page_size:
                type: integer
                description: Total number of records returned from a single API call.
              total_records:
                type: integer
                description: Total number of records found for this query.
                maximum: 100
                default: 30
              common_area_phones:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Unique Identifier of the common area phone.
                    display_name:
                      type: string
                      description: Display name of the common area phone.
                    device_type:
                      type: string
                      description: 'Type of device (manufacturer name + model name). Refer to the table here for a list of [supported devices](https://marketplace.zoom.us/docs/api-reference/other-references/zoomphone-supporteddevice).'
                    mac_address:
                      type: string
                      description: ' Mac address or serial number.'
                    calling_plans:
                      type: array
                      items:
                        type: object
                        properties:
                          type:
                            type: string
                            description: '[Plan Number](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans).'
                          name:
                            type: string
                            description: Plan name.
                    phone_numbers:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            description: Unique Identifier of the Phone number.
                          number:
                            type: string
                            description: Phone number.
                          source:
                            type: string
                            description: Phone number source. The value can be either `internal` or `external`.
                            enum:
                              - internal
                              - external
                    status:
                      type: string
                      description: Status of the common area phone. It can be either `online` or `offline`.
                    site:
                      type: object
                      properties:
                        id:
                          type: string
                          description: 'Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) to which the common area desk phone is assigned.'
                        name:
                          type: string
                          description: Name of the site.
          examples:
            application/json:
              next_page_token: string
              page_size: integer
              total_records: integer
              common_area_phones:
                - id: string
                  display_name: string
                  device_type: string
                  mac_address: string
                  calling_plans:
                    - type: string
                      name: string
                  phone_numbers:
                    - id: string
                      number: string
                      source: string
                  status: string
                  site:
                    id: string
                    name: string
      description: |-
        A common area phone can be provisioned by a Zoom account owner or a Zoom admin so that anyone in an organization can use it. For example, if your office has shared desks that don't belong to a specific employees, you could add a common area phone so that any person can use it.<br> Use this API to [list all common area phone](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones) in an account.<br><br>**Prerequisites:**<br>
        * Pro or a higher account with Zoom Phone license.
        * Account owner or admin permissions.
        * [Supported device](https://support.zoom.us/hc/en-us/articles/360001299063-Zoom-Voice-Supported-Devices)<br><br>
        **Scope:** `phone:read:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      summary: List common area phones
      operationId: listCommonAreaPhones
      tags:
        - Common Area Phones
      security:
        - OAuth: []
      parameters:
        - in: query
          name: page_size
          type: integer
          default: 30
          description: The total number of records returned from a single API call.
          maximum: 100
        - $ref: '#/parameters/NextPageToken'
  '/phone/common_area_phones/{commonAreaPhoneId}':
    get:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` **OK**<br>
            Common Area Phone details returned successfully.
          schema:
            type: object
            properties:
              id:
                type: string
                description: Unique Identifier of the common area phone.
              name:
                type: string
                description: Display name of the common area phone.
              device_type:
                type: string
                description: Type of device (manufacturer name + model name).
              mac_address:
                type: string
                description: ' Mac address or serial number.'
              status:
                type: string
                description: Status of the common area phone. It can be either `online` or `offline`.
              site:
                type: object
                properties:
                  id:
                    type: string
                    description: 'Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) to which the common area desk phone is assigned.'
                  name:
                    type: string
                    description: Name of the site.
              provision:
                type: object
                description: Provisioning information of the common area phone.
                properties:
                  type:
                    type: string
                    enum:
                      - assisted
                      - ztp
                      - manual
                    description: |+
                      [Provisioning type](https://support.zoom.us/hc/en-us/articles/360033223411). The value can be one of the following:

                      * `ztp` : Zero touch provisioning.
                      * `assisted`: Assisted provisioning.
                      * `manual`: Manual provisioning.

                  url:
                    type: string
                    description: Provisioning URL. This field will only be returned for devices that were provisioned via `assisted` provisioning type.
                  sip_accounts:
                    type: array
                    description: 'SIP Account details registered during the device provisioning process. This object will only be returned if manual provisioning was used for the device.  '
                    items:
                      type: object
                      properties:
                        sip_domain:
                          type: string
                          description: |-
                            SIP Domain provided in the provisioning process.<br>

                        outbound_proxy:
                          type: string
                          description: Outbound proxy provided in the provisioning process.
                        user_name:
                          type: string
                          description: User name of the SIP account provided in the provisioning process.
                        authorization_id:
                          type: string
                          description: Authorization ID of the SIP account provided in the provisioning process.
                        password:
                          type: string
                          description: 'Password entered during the  provisioning process. '
          examples:
            application/json:
              id: d6dfgdfgfdgiglw
              display_name: testcommonareaphone
              device_type: Cisco cp7821
              mac_address: 105f11123456
              status: offline
              site:
                id: CEdfdfgdgixWA
                name: Main Site
              provision:
                type: manual
                sip_accounts:
                  - sip_domain: abc.zoomcloudpbx.com
                    outbound_proxy: 'abcd.zoom.us:1001'
                    user_name: '71600000002730'
                    authorization_id: '1234567894'
                    password: SomeRandomPasswordValue
        '400':
          description: |-
            **HTTP Status Code:** `400` **Bad Request**<br>
            **Error Code:** `400`<br>
            Device does not exist in the system.
      summary: Get common area phone details
      description: |-
        A common area phone can be provisioned by a Zoom account owner or a Zoom admin so that anyone in an organization can use it. For example, if your office has shared desks that don't belong to a specific employees, you could add a common area phone so that any person can use it.<br> Use this API to get details on a specific [common area phone](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones) in an account.<br><br>**Prerequisites:**<br>
        * Pro or a higher account with Zoom Phone license.
        * Account owner or admin permissions.
        * [Supported device](https://support.zoom.us/hc/en-us/articles/360001299063-Zoom-Voice-Supported-Devices)<br>
        **Scopes:** `phone:read:admin`<br>


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      operationId: getACommonAreaPhone
      tags:
        - Common Area Phones
      security:
        - OAuth: []
      parameters:
        - in: path
          name: commonAreaPhoneId
          type: string
          required: true
          description: Unique Identifier of the Common Area Phone. This can be retrieved from List Common Area Phones API.
    parameters:
      - name: commonAreaPhoneId
        in: path
        type: string
        required: true
    patch:
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` **No Content**<br>
            Common Area Phone information updated successfully.
          schema: {}
        '400':
          description: |-
            **HTTP Status Code:** `400` **Bad Request**<br><br>
            **Error Code:** `300`<br>
            Validation Failed. Device does not exist in the system.
      summary: Update common area phone
      description: |-
        A common area phone can be provisioned by a Zoom account owner or a Zoom admin so that anyone in an organization can use it. For example, if your office has shared desks that don't belong to a specific employees, you could add a common area phone so that any person can use it.<br> Use this API to update details on a specific [common area phone](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones) in an account.<br><br>**Prerequisites:**<br>
        * Pro or a higher account with Zoom Phone license.
        * Account owner or admin permissions.
        * [Supported device](https://support.zoom.us/hc/en-us/articles/360001299063-Zoom-Voice-Supported-Devices)<br>
        **Scopes:** `phone:write:admin`<br>


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      operationId: updateCommonAreaPhone
      tags:
        - Common Area Phones
      security:
        - OAuth: []
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              site_id:
                type: string
                description: 'Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) to which the common area desk phone is assigned.'
              display_name:
                type: string
                description: Display name of the common area phone.
              extension_number:
                description: 'Extension number of the phone. If site code is enabled, provide short extension number instead.'
                type: integer
              mac_address:
                type: string
                description: ' Mac address or serial number of the device. Examples of supported format: "64-16-7f-37-90-92" or "64167f379092".'
          x-examples:
            application/json:
              site_id: Lodhhoyrn
              display_name: Kitchen Phone
              extension_number: 12345
              mac_address: 641123f9092
    delete:
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` **No Content**<br>
            Common Area Phone deleted successfully.
          schema: {}
        '400':
          description: |-
            **HTTP Status Code:** `400` **Bad Request**<br>
            **Error Code:** `300`<br>
            Validation Failed<br>
            Device does not exist in the system.
      summary: Delete a common area phone
      description: |-
        A common area phone can be provisioned by a Zoom account owner or a Zoom admin so that anyone in an organization can use it. For example, if your office has shared desks that don't belong to a specific employees, you could add a common area phone so that any person can use it.<br> Use this API to remove the [common area phone](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones) from Zoom Phone System in an account.<br><br>**Prerequisites:**<br>
        * Pro or a higher account with Zoom Phone license.
        * Account owner or admin permissions.
        * [Supported device](https://support.zoom.us/hc/en-us/articles/360001299063-Zoom-Voice-Supported-Devices)<br>
        **Scopes:** `phone:write:admin`<br>


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      operationId: deleteCommonAreaPhone
      tags:
        - Common Area Phones
      security:
        - OAuth: []
      parameters:
        - in: path
          name: commonAreaPhoneId
          type: string
          required: true
          description: Unique Identifier of the common area phone.
  /phone/blocked_list:
    post:
      responses:
        '201':
          description: |-
            **HTTP Status Code:** `201` **Created**<br>
            Number added to the blocked list successfully.
          schema:
            type: object
            properties:
              id:
                type: string
                description: Unique identifier of the blocked list.
          examples:
            application/json:
              id: dhfhfhnim
        '409':
          description: |-
            **HTTP Status Code:** `409` **Conflict**<br><br>
            Blocked number already exists.
      summary: Create a blocked list
      description: |-
        A Zoom account owner or a user with admin privilege can block phone numbers for phone users in an account. Blocked numbers can be inbound (numbers will be blocked from calling in) and outbound (phone users in your account won't be able to dial those numbers). Blocked callers will hear a generic message stating that the person they are calling is not available.<br>Use this API to create a blocked list and add a number to that blocked list.<br>
        **Prerequisites:**
        * Pro or higher account plan with Zoom phone license<br>
        **Scope:** `phone:write:admin`<br>


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      operationId: addAnumberToBlockedList
      tags:
        - Phone Blocked List
      security:
        - OAuth: []
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              match_type:
                type: string
                description: |-
                  Specify the match type for the blocked list. The values can be one of the following:<br><br>
                  `phoneNumber`: Choose this option (Phone Number Match) if you want to block a specific phone number. Then, in the `phone_number` field, provide the phone number along with the country code.<br><br>
                  `prefix`: Choose this option (Prefix Match) if you want to block all numbers with a specific country code and area code. Next, in the `phone_number` field, enter a country code as part of the prefix. For example, entering 1907 blocks numbers with country code 1 and area code 907.
                enum:
                  - phoneNumber
                  - prefix
              phone_number:
                type: string
                description: 'The phone number to be blocked if you passed "phoneNumber" as the value for the `match_type` field. If you passed "prefix" as the value for the `match_type` field, provide the prefix of the phone number here including the country code. For example, entering 1905 blocks numbers with country code 1 and area code 905. '
                maxLength: 50
              block_type:
                type: string
                enum:
                  - inbound
                  - outbound
                description: |-
                  State whether you want the block type to be inbound or outbound.<br>
                  `inbound`: Pass this value to prevent the blocked number or prefix from calling in to phone users.<br>
                  `outbound`: Pass this value to prevent phone users from calling the blocked number or prefix.
              status:
                type: string
                description: |-
                  Enable or disable the blocking. One of the following values are allowed:<br>
                  `active`: Keep the blocking active.<br>
                  `inactive`: Disable the blocking.
                enum:
                  - active
                  - inactive
              comment:
                type: string
                description: Provide a comment to help you identify the blocked number or prefix.
                maxLength: 255
    get:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` **OK**<br>
            Blocked list returned successfully.
          schema:
            type: object
            properties:
              next_page_token:
                type: string
                description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
              page_size:
                type: integer
                description: The total number of records returned from a single API call.
                maximum: 100
                default: 30
              total_records:
                description: The total number of records found for this query.
                type: integer
              blocked_list:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Unique identifier of the blocked list.
                    match_type:
                      type: string
                      description: |-
                        Indicates the match type for the blocked list. The values can be one of the following:<br>
                        `phoneNumber`: Indicates that only a specific phone number that is shown in the `phone_number` field is blocked.<br><br>
                        `prefix`: Indicates that all numbers starting with prefix that is shown in the `phone_number` field are blocked.
                      enum:
                        - phoneNumber
                        - prefix
                    phone_number:
                      type: string
                      description: 'The phone number to be blocked if you passed "phoneNumber" as the value for the `match_type` field. If you passed "prefix" as the value for the `match_type` field, provide the prefix of the phone number here including the country code. For example, entering 1905 blocks numbers with country code 1 and area code 905. '
                      maxLength: 50
                    block_type:
                      type: string
                      enum:
                        - inbound
                        - outbound
                      description: |-
                        Block type.<br>
                        `inbound`: The blocked number or numbers with the specifie prefix are prevented from calling in to phone users.<br><br>
                        `outbound`: The phone users  are prevented from calling the blocked number or numbers with the specified prefix.
                    status:
                      type: string
                      description: |-
                        Indicates whether the blocking is active or inactive. <br>
                        `active`: The blocked list is active.<br>
                        `inactive`: The blocked list is inactive.
                      enum:
                        - active
                        - inactive
                    comment:
                      type: string
                      description: Provide a comment to help you identify the blocked number or prefix.
                      maxLength: 255
          examples:
            application/json:
              next_page_token: ''
              page_size: 30
              total_records: 2
              blocked_list:
                - id: 7buyurtKc0Zw
                  match_type: prefix
                  phone_number: '1777'
                  block_type: inbound
                  comment: Blocked numbers starting with 777
                  status: active
                - id: cYDtrtyrgyQw
                  match_type: phoneNumber
                  phone_number: '600040404'
                  block_type: inbound
                  comment: Blocked an unknown caller
                  status: active
      summary: List blocked lists
      description: |-
        A Zoom account owner or a user with admin privilege can block phone numbers for phone users in an account. Blocked numbers can be inbound (numbers will be blocked from calling in) and outbound (phone users in your account won't be able to dial those numbers). Blocked callers will hear a generic message stating that the person they are calling is not available.<br>Use this API to list all the blocked lists in an acccount.<br>
        **Prerequisites:**
        * Pro or higher account plan with Zoom phone license<br>
        **Scope:** `phone:read:admin`<br>


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      operationId: listBlockedList
      tags:
        - Phone Blocked List
      security:
        - OAuth: []
      parameters:
        - $ref: '#/parameters/NextPageToken'
        - in: query
          name: page_size
          type: integer
          description: The total number of records returned from a single API call.
          maximum: 100
          default: 30
  '/phone/blocked_list/{blockedListId}':
    patch:
      responses:
        '204':
          description: |
            **HTTP Status Code:** `204` **No Content**<br>
            Blocked list updated successfully.
          schema: {}
        '400':
          description: |
            **HTTP Status Code:** `400` **Bad Request**<br>
            Blocked number (Id: {blockedListId}) does not exist.
        '409':
          description: |-
            **HTTP Status Code:** `409` **Conflict**<br><br>
            Blocked number already exists.
      summary: Update a blocked list
      description: |+
        A Zoom account owner or a user with admin privilege can block phone numbers for phone users in an account. Blocked numbers can be inbound (numbers will be blocked from calling in) and outbound (phone users in your account won't be able to dial those numbers). Blocked callers will hear a generic message stating that the person they are calling is not available.<br>Use this API to update information on the blocked list.<br>
        **Prerequisites:**
        * Pro or higher account plan with Zoom phone license<br>
        **Scope:** `phone:write:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`

      operationId: updateBlockedList
      tags:
        - Phone Blocked List
      security:
        - OAuth: []
      parameters:
        - in: path
          name: blockedListId
          type: string
          required: true
          description: Unique Identifier for the blocked list.
        - in: body
          name: body
          schema:
            type: object
            properties:
              match_type:
                type: string
                description: |-
                  Specify the match type for the blocked list. The values can be one of the following:<br><br>
                  `phoneNumber`: Choose this option (Phone Number Match) if you want to block a specific phone number. Then, in the `phone_number` field, provide the phone number along with the country code.<br><br>
                  `prefix`: Choose this option (Prefix Match) if you want to block all numbers with a specific country code and area code. Next, in the `phone_number` field, enter a country code as part of the prefix. For example, entering 1907 blocks numbers with country code 1 and area code 907.
                enum:
                  - phoneNumber
                  - prefix
              phone_number:
                type: string
                description: 'The phone number to be blocked if you passed "phoneNumber" as the value for the `match_type` field. If you passed "prefix" as the value for the `match_type` field, provide the prefix of the phone number here including the country code. For example, entering 1905 blocks numbers with country code 1 and area code 905. '
                maxLength: 50
              block_type:
                type: string
                enum:
                  - inbound
                  - outbound
                description: |-
                  State whether you want the block type to be inbound or outbound.<br>
                  `inbound`: Pass this value to prevent the blocked number or prefix from calling in to phone users.<br>
                  `outbound`: Pass this value to prevent phone users from calling the blocked number or prefix.
              status:
                type: string
                description: |-
                  Enable or disable the blocking. One of the following values are allowed:<br>
                  `active`: Keep the blocking active.<br>
                  `inactive`: Disable the blocking.
                enum:
                  - active
                  - inactive
              comment:
                type: string
                description: Provide a comment to help you identify the blocked number or prefix.
                maxLength: 255
          x-examples:
            application/json:
              match_type: phoneNumber
              phone_number: '16460000000'
              block_type: inbound
              status: active
              comment: Blocking a spam caller
    parameters:
      - name: blockedListId
        in: path
        type: string
        required: true
    delete:
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` **No Content**<br>
            Blocked list deleted successfully.
          schema: {}
        '400':
          description: |-
            **HTTP Status Code:** `400` **Bad Request**<br>
            **Error Code:** `300`<br>
            Validation Failed. Blocked number (Id: {blockedListId}) does not exist.
      description: |-
        A Zoom account owner or a user with admin privilege can block phone numbers for phone users in an account. Blocked numbers can be inbound (numbers will be blocked from calling in) and outbound (phone users in your account won't be able to dial those numbers).
        <br>Use this API to delete a blocked list and therefore removing the associated number from the blocked list. The number will be unblocked after the deletion.<br>
        **Prerequisites:**
        * Pro or higher account plan with Zoom phone license<br>
        **Scope:** `phone:write:admin`<br>


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      summary: Delete a blocked list
      operationId: deleteABlockedList
      tags:
        - Phone Blocked List
      security:
        - OAuth: []
      parameters:
        - in: path
          name: blockedListId
          type: string
          required: true
          description: Unique Identifier of the blocked list. This can be retrieved from the List Blocked List API.
    get:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` **OK**<br>
            Blocked list retrieved successfully.
          schema:
            type: object
            properties:
              id:
                type: string
                description: Unique identifier of the blocked list.
              match_type:
                type: string
                description: |-
                  Indicates the match type for the blocked list. The values can be one of the following:<br>
                  `phoneNumber`: Indicates that only a specific phone number that is shown in the `phone_number` field is blocked.<br><br>
                  `prefix`: Indicates that all numbers starting with prefix that is shown in the `phone_number` field are blocked.
                enum:
                  - phoneNumber
                  - prefix
              phone_number:
                type: string
                description: The phone number or the prefix number that is blocked based on the `match_type`.
                maxLength: 50
              block_type:
                type: string
                enum:
                  - inbound
                  - outbound
                description: |-
                  Block type.<br>
                  `inbound`: The blocked number or numbers with the specifie prefix are prevented from calling in to phone users.<br><br>
                  `outbound`: The phone users  are prevented from calling the blocked number or numbers with the specified prefix.
              status:
                type: string
                description: |-
                  Indicates whether the blocking is active or inactive. <br>
                  `active`: The blocked list is active.<br>
                  `inactive`: The blocked list is inactive.
                enum:
                  - active
                  - inactive
              comment:
                type: string
                description: Provide a comment to help you identify the blocked number or prefix.
                maxLength: 255
          examples:
            application/json:
              id: 7bR_Ix4KSJS_heuPPKc0Zw
              match_type: prefix
              phone_number: '0001'
              block_type: inbound
              comment: Blocked all numbers starting with 0001
              status: active
        '400':
          description: |-
            **HTTP Status Code:** `400` **Bad Request**<br>
            **Error Code:** `400`<br>
            Blocked number (Id: {blockedListId}) does not exist.
      summary: Get blocked list details
      description: |-
        A Zoom account owner or a user with admin privilege can block phone numbers for phone users in an account. Blocked numbers can be inbound (numbers will be blocked from calling in) and outbound (phone users in your account won't be able to dial those numbers). Blocked callers will hear a generic message stating that the person they are calling is not available.<br>Use this API to get information about a specific blocked list.<br>
        **Prerequisites:**
        * Pro or higher account plan with Zoom phone license<br>
        **Scope:** `phone:read:admin`<br>

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      operationId: getABlockedList
      tags:
        - Phone Blocked List
      security:
        - OAuth: []
      parameters:
        - in: path
          name: blockedListId
          type: string
          required: true
          description: Unique Identifier of the blocked list.
  '/phone/auto_receptionists/{autoReceptionistId}/phone_numbers/{phoneNumberId}':
    delete:
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` **No Content**<br>
            Phone number unassigned successfully.
          schema: {}
        '400':
          description: |-
            **HTTP Status Code:** `400` **Bad Request**<br>
            **Error Code:** `400`<br>
            Phone number does not belong to auto receptionist.
        '404':
          description: |-
            **HTTP Status Code:** `404` **Bad Request**<br>
            **Error Code:** `404`<br>
             AutoReceptionist does not exist, AutoReceptionistId: {autoReceptionId}.
      summary: Unassign a phone number
      description: |-
        Unassign a specific phone number that was previously assigned to an [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Interactive-Voice-Response-IVR-).

        **Prerequisites:**
        * Pro or higher account plan with Zoom Phone License
        * Account owner or admin permissions<br>
        **Scopes:** `phone:write:admin`<br>


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      operationId: unassignAPhoneNumAutoReceptionist
      tags:
        - Phone Auto Receptionists
      security:
        - OAuth: []
      parameters:
        - in: path
          name: autoReceptionistId
          type: string
          required: true
          description: Unique identifier of the auto receptionist. This can be retrieved from the List Phone Sites API.
        - in: path
          name: phoneNumberId
          type: string
          required: true
          description: 'Unique Identifier of the phone number or provide the actual phone number in e164 format (example: +19995550123).'
    parameters:
      - name: autoReceptionistId
        in: path
        type: string
        required: true
      - name: phoneNumberId
        in: path
        type: string
        required: true
  '/chat/users/{userId}/channels/{channelId}/members/{memberId}':
    delete:
      responses:
        '204':
          description: |+
            **HTTP Status Code:** `204` **No Content**<br>
            Member removed.


          schema: {}
        '400':
          description: |+
            **HTTP Status Code:** `400` <br>
            Bad Request<br>
            **Error Code:** `200`<br>
            Unauthorized request. You do not have permission to remove channel members on this user's behalf.<br>
            **Error Code:** `5301`<br>
            Unable to remove channel member.

      summary: Remove a member
      description: |2-
         A [channel](https://support.zoom.us/hc/en-us/articles/200912909-Getting-Started-With-Channels-Group-Messaging-) can have one or multiple members. Use this API to remove a member from a chat channel.<br><br>

        **Scopes:** `chat_channel:write:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium` <br>


        <p style="background-color:#e1f5fe; color:#01579b; padding:8px"> <b>Note: </b> For an<b> account-level</b> <a href="https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app">OAuth app</a>, this API can only be used on behalf of a user who is assigned with a <b><a href="https://support.zoom.us/hc/en-us/articles/115001078646-Using-role-management#:~:text=Each%20user%20in%20a%20Zoom,owner%2C%20administrator%2C%20or%20member.&text=Role%2Dbased%20access%20control%20enables,needs%20to%20view%20or%20edit."> role</a> that has Edit permission for Chat Channels</b>.</p>
      operationId: removeAChannelMember
      tags:
        - Chat Channels (Account-level)
      security:
        - OAuth: []
      parameters:
        - in: path
          name: channelId
          type: string
          required: true
          description: 'Unique Identifier of the Channel from where you would like to remove a member. This can be retrieved from the [List Channels API](https://marketplace.zoom.us/docs/api-reference/zoom-api/chat-channels/getchannels).'
        - in: path
          name: memberId
          type: string
          required: true
          description: Email address of the member whom you would like to be remove from the channel.
        - in: path
          name: userId
          type: string
          required: true
          description: Unique identifier of the channel owner.
    parameters:
      - name: userId
        in: path
        type: string
        required: true
      - name: channelId
        in: path
        type: string
        required: true
      - name: memberId
        in: path
        type: string
        required: true
  /report/billing:
    get:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` **OK**<br>
            Billing report returned.
          schema:
            type: object
            properties:
              billing_reports:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: |-
                        Unique Identifier of the report. Use this ID to retrieve billing invoice via the "Get Billing Invoices API".

                        You can also use this ID to export a CSV file of the billing report from this URL: `https://zoom.us/account/report/billing/export?id={id}`.
                    start_date:
                      type: string
                      description: Start date of the billing period.
                      format: date
                    end_date:
                      type: string
                      description: End date of the billing period.
                      format: date
                    total_amount:
                      type: string
                      description: Total billing amount for this billing period.
                    tax_amount:
                      type: string
                      description: Total tax amount for this billing period.
                    type:
                      type: integer
                      description: |-
                        Type of the billing report. The value should be either of the following:<br>
                        `0` - Detailed Billing Reports
                        `1` - Custom Billing Reports
                      enum:
                        - 0
                        - 1
              currency:
                type: string
                description: Currency of the billed amount.
          examples:
            application/json:
              billing_reports:
                - id: indfhgfhfho
                  start_date: '2020-01-01'
                  end_date: '2020-01-31'
                  total_amount: '1500'
                  tax_amount: '25'
                  type: 0
                - id: dfhjkdgsds
                  start_date: '2019-12-24'
                  end_date: '2020-01-23'
                  total_amount: '2000'
                  tax_amount: '38'
                  type: 1
              currency: USD
        '400':
          description: |+
            **HTTP Status Code:** `400` **Bad Request**<br>
            **Error Code:** `200`<br> No permission.

      summary: Get billing reports
      description: |-
        Get department billing reports of a Zoom account.

        **Prerequisites:**<br>
        * Pro or a higher account with Department Billing option enabled. Contact Zoom Support team for details.

        **Scopes:** `report:read:admin`, `report:master`

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`
      operationId: getBillingReport
      tags:
        - Reports
      security:
        - OAuth: []
      x-private: true
  /report/billing/invoices:
    get:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` **OK**<br>
            Billing Invoice reports returned.
          schema:
            type: object
            properties:
              invoices:
                type: array
                items:
                  type: object
                  properties:
                    invoice_number:
                      type: string
                      description: 'Invoice number '
                    invoice_charge_name:
                      type: string
                      description: Name of the invoice.
                    quantity:
                      description: Number of licenses bought.
                      type: integer
                    total_amount:
                      type: string
                      description: Total billed amount in the invoice.
                    tax_amount:
                      type: string
                      description: Tax amount in the invoice.
                    start_date:
                      type: string
                      format: date
                      description: Start date of the invoice period.
                    end_date:
                      type: string
                      format: date
                      description: End date of the invoice period.
              currency:
                type: string
                description: Currency of the billed amount in the invoice.
          examples:
            application/json:
              invoices:
                - invoice_number: '1234665'
                  invoice_charge_name: Audio Conferencing Options
                  quantity: 5
                  total_amount: '150000'
                  tax_amount: '1000'
                  start_date: '2019-12-12'
                  end_date: '2020-01-12'
              currency: USD
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            **Error Code:** `5010`<br>
            Report does not exist.
      summary: Get billing invoice reports
      description: |-
        Get department billing invoices reports for a specific billing period. Provide the `billing_id` of the billing period for which you would like to retrieve the invoices for. This ID can be retrieved from **Get Billing Reports** API.

        **Prerequisites:**<br>
        * Pro or a higher account with Department Billing option enabled. Contact the Zoom Support team to enable this feature.

        **Scopes:** `report:read:admin`, `report:master`


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`
      operationId: getBillingInvoicesReports
      tags:
        - Reports
      security:
        - OAuth: []
      parameters:
        - in: query
          name: billing_id
          type: string
          description: |+
            Unique Identifier of the Billing Report. Retrieve this ID from the response of **Get Billing Reports** API request.

      x-private: true
  /phone/shared_line_groups:
    post:
      responses:
        '200':
          description: |
            **HTTP Status Code:** `200` **OK** <br>
            Shared Line Group created successfully.
          schema: {}
        '400':
          description: |+
            **HTTP Status Code:** `400` **Bad Request** <br>
            **Error Code:** `300` **Validation Failed** <br>
            * Multiple Site has not been enabled for this account.<br>
            * Site does not exist. <br><br>
            **Error Code:** `400` <br>
            Extension number {extensionNumber} is already used.<br><br>
            **Error Code:** `409` <br>
            Invalid short number length. <br>
            Number {extensionNumber} is a reserved extension number.


      summary: Create a shared line group
      description: |-
        A [shared line group](https://support.zoom.us/hc/en-us/articles/360038850792) allows Zoom Phone admins to share a phone number and extension with a group of phone users or common area phones. This gives members of the shared line group access to the group's direct phone number and voicemail. Use this API to create a shared line group.

        **Prerequisties:** <br>
        * Pro or higher account with Zoom Phone license.
        * Account owner or admin privileges

        **Scopes:** `phone:write:admin`

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      operationId: createASharedLineGroup
      tags:
        - Phone Shared Line Groups
      security:
        - OAuth: []
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              site_id:
                type: string
                description: |-
                  Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites) that you would like to use for the shared line group. You will only be able to add members that belong to this site to the shared line group.

                  This field is required only if [multiple sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites) option has been enabled for the account.
              display_name:
                type: string
                description: Provide a name to help identify the shared line group.
                maxLength: 200
              description:
                type: string
                description: Provide a description for the shared line group.
                maxLength: 255
              extension_number:
                description: 'Extension number to be assigned to the shared line group. If a [site code has been assigned](https://support.zoom.us/hc/en-us/articles/360020809672#h_79ca9c8f-c97b-4486-aa59-d0d9d31a525b) to the site, provide the short extension number '
                type: integer
            required:
              - display_name
          x-examples:
            application/json:
              display_name: London Comms Shared Line
              site_id: vcdsg7dsghf
              description: This Shared Line group is for the Comms team based in London.
              extension_number: 301
    get:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` **OK** <br>
            Shared Line Groups returned.
          schema:
            type: object
            properties:
              next_page_token:
                type: string
                description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
              page_size:
                type: integer
                description: The number of records returned within a single API call.
                maximum: 100
                default: 30
              total_records:
                description: Total records found in the response for this request.
                type: integer
              shared_line_groups:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Unique Identifier of the Shared Line Group.
                    display_name:
                      type: string
                      description: Display Name of the Shared Line Group.
                    extension_number:
                      type: integer
                      description: Extension number assigned to the Shared Line Group.
                    phone_numbers:
                      type: array
                      description: Phone Numbers Assigned to the Shared Line Group.
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            description: Unique identifier of the phone number.
                          number:
                            type: string
                            description: Phone number in E164 format.
                          status:
                            type: string
                            description: Status of the number.
                            enum:
                              - pending
                              - available
                    status:
                      type: string
                      description: Status of the Shared Line Group.
                      enum:
                        - active
                        - inactive
                    site:
                      type: object
                      properties:
                        id:
                          type: string
                          description: 'Unique Identifier of the [Site](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone-site/getasite).'
                        name:
                          type: string
                          description: Name of the Site.
          examples:
            application/json:
              next_page_token: hkdsfghdj3hef
              page_size: 30
              total_records: 1
              shared_line_groups:
                - id: sdgfhdser83velit
                  display_name: Test Shared Line Group
                  extension_number: 123
                  phone_numbers:
                    - id: min4glt
                      number: '46835635784'
                      status: available
                  status: active
                  site:
                    id: dgfgfgh433
                    name: San Jose Site
      summary: List shared line groups
      description: |-
        A [shared line group](https://support.zoom.us/hc/en-us/articles/360038850792) allows Zoom Phone admins to share a phone number and extension with a group of phone users or common area phones. This gives members of the shared line group access to the group's direct phone number and voicemail. Use this API to list all the Shared Line Groups.

        **Prerequisties:** <br>
        * Pro or higher account with Zoom Phone license.
        * Account owner or admin privileges  <br>

        **Scopes:** `phone:read:admin`, `phone:write:admin`


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      operationId: listSharedLineGroups
      tags:
        - Phone Shared Line Groups
      parameters:
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/NextPageToken'
  '/phone/shared_line_groups/{sharedLineGroupId}':
    get:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              id:
                type: string
                description: Unique Identifier of the Shared Line Group.
              display_name:
                type: string
                description: Display Name of the Shared Line Group.
              extension_number:
                type: integer
                description: Extension number assigned to the Shared Line Group.
              phone_numbers:
                type: array
                description: Object representing information about phone number(s) assigned to the group.
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Unique identifier of the phone number.
                    number:
                      type: string
                      description: Phone number in E164 format.
              primary_number:
                type: string
                description: 'If you have multiple direct phone numbers assigned to the shared line group, this is the primary number selected for desk phones. The primary number shares the same line as the extension number. This means if a caller is routed to the shared line group through an auto receptionist, the line associated with the primary number will be used.'
              site:
                type: object
                description: Site assigned to the Shared Line Group.
                properties:
                  id:
                    type: string
                    description: 'Unique Identifier of the [Site](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone-site/getasite).'
                  name:
                    type: string
                    description: Name of the Site.
              members:
                type: object
                description: 'View current [members](https://support.zoom.us/hc/en-us/articles/360038850792-Setting-up-shared-line-groups#h_3ffbbb77-a009-4c09-91e4-81fc264b61d6) of the shared line group.'
                properties:
                  users:
                    type: array
                    description: Users who are members of the Shared Line Group.
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: Unique identifier of the user.
                        name:
                          type: string
                          description: Name of the user.
                  common_area_phones:
                    type: array
                    description: '[Common Area Phones](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones) that are members of the shared line group.'
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: 'Unique identifier of the [Common Area Phone](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones). '
                        name:
                          type: string
                          description: 'Name of the [Common Area Phone](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones). '
              timezone:
                type: string
                description: Timezone used for the Business Hours.
              status:
                type: string
                description: Status of the Shared Line Group.
                enum:
                  - active
                  - inactive
          examples:
            application/json:
              id: jsehdfrrg4
              display_name: Bay Area Shared Line Group
              extension_number: 123
              phone_numbers:
                - id: dsfdg3r
                  number: '1365435426'
                - id: hfgdcfhjj
                  number: '5673856375'
              primary_number: '5673856375'
              site:
                id: dhfdhsf4
                name: Engineering Site
              members:
                users:
                  - id: gdfsx57ytcfgg
                    name: ipsum reprehenderit
                  - id: nisi3t5hgvsed
                    name: dolore sed
                common_area_phones:
                  - id: eu34gcogfft5nsectetur
                    name: Lobby Phone
              timezone: America/Los_Angeles
              status: active
      summary: Get a shared line group
      description: |-
        A [shared line group](https://support.zoom.us/hc/en-us/articles/360038850792) allows Zoom Phone admins to share a phone number and extension with a group of phone users or common area phones. This gives members of the shared line group access to the group's direct phone number and voicemail. Use this API to list all the Shared Line Groups.

        **Prerequisties:** <br>
        * Pro or higher account with Zoom Phone license.
        * Account owner or admin privileges

        **Scopes:** `phone:read:admin` or `phone:write:admin`


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      operationId: getASharedLineGroup
      tags:
        - Phone Shared Line Groups
      parameters:
        - in: path
          name: sharedLineGroupId
          type: string
          required: true
          description: Unique Identifier of the Shared Line Group.
    parameters:
      - name: sharedLineGroupId
        in: path
        type: string
        required: true
    patch:
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` **No Content**

            Shared Line Group Updated Successfully.
          schema: {}
        '400':
          description: |+
            **HTTP Status Code:** `400` **Bad Request** <br>
            **Error Code:** `300` **Validation Failed** <br>
            * Shared line group (id: {sharedLingGroupId}) does not exist.<br>
            * Timezone not found in the system.<br><br>
            **Error Code:** `409` <br>
            * Invalid short number length.<br>
            * Number {extensionNumber} is a reserved extension number.<br><br>
            **Error Code:** `400` <br>
            Extension number {extensionNumber} is already used.


        '404':
          description: |+
            **HTTP Status Code:** `404` **Not Found** <br>
            * No phone numbers have been assigned to this Shared Line Group.<br>
            * Primary phone number was not found in the list of numbers assigned to this Shared Line Group.

      summary: Update a shared line group
      description: |-
        A [shared line group](https://support.zoom.us/hc/en-us/articles/360038850792) allows Zoom Phone admins to share a phone number and extension with a group of phone users or common area phones. This gives members of the shared line group access to the group's direct phone number and voicemail. Use this API to update information of a Shared Line Group.
        **Prerequisties:** <br>
        * Pro or higher account with Zoom Phone license.
        * Account owner or admin privileges

        **Scopes:** `phone:write:admin`

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      operationId: updateASharedLineGroup
      tags:
        - Phone Shared Line Groups
      parameters:
        - in: path
          name: sharedLineGroupId
          type: string
          required: true
          description: Unique identifier of the shared line group that is to be updated.
        - in: body
          name: body
          schema:
            type: object
            properties:
              display_name:
                type: string
                description: Display Name of the Shared Line Group.
              extension_number:
                type: integer
                description: Extension number assigned to the Shared Line Group.
              primary_number:
                type: object
                description: 'If you have multiple direct phone numbers assigned to the shared line group, select a number from those numbers as the primary number. The primary number shares the same line as the extension number. This means if a caller is routed to the shared line group through an auto receptionist, the line associated with the primary number will be used. A pending number cannot be used as a Primary Number.'
                properties:
                  id:
                    type: string
                    description: Phone Number ID. Unique Identifier of the Phone Number.
                  number:
                    type: string
                    description: Phone Number that you would like to assign as the primary number for this Shared Line Group.
              timezone:
                type: string
                description: 'Timezone to be used for the Business Hours. A value should be provided from the IDs listed [here](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones).'
              status:
                type: string
                description: Status of the Shared Line Group.
                enum:
                  - active
                  - inactive
          x-examples:
            application/json:
              display_name: test123
              description: description of the sharedline group
              extension_number: 298
              timezone: Asia/Tehran
              primary_number:
                number: '1134455'
              status: inactive
    delete:
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` **No Content** <br>
            Shared Line Group Deleted.
          schema: {}
        '400':
          description: |+
            **HTTP Status Code:** `400` **Bad Request** <br>
            **Error Code:** `300` **Validation Failed.**<br>
            * Shared line group (id: {sharedLingGroupId}) does not exist.


      summary: Delete a shared line group
      description: |-
        A [shared line group](https://support.zoom.us/hc/en-us/articles/360038850792) allows Zoom Phone admins to share a phone number and extension with a group of phone users or common area phones. Use this API to delete a Shared Line Group.
        **Prerequisties:** <br>
        * Pro or higher account with Zoom Phone license.
        * Account owner or admin privileges

        **Scopes:** `phone:write:admin`


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      operationId: deleteASharedLineGroup
      tags:
        - Phone Shared Line Groups
      parameters:
        - in: path
          name: sharedLineGroupId
          type: string
          required: true
          description: Unique Identifier of the shared line group that you would like to delete.
  '/phone/shared_line_groups/{sharedLineGroupId}/members':
    post:
      responses:
        '201':
          description: |-
            **HTTP Status Code:** `201` **Created**
            Members added successfully.
          schema: {}
        '400':
          description: |+
            **HTTP Status Code:** `400` **Bad Request** <br>
            Members of a shared line group should come from same site.<br>
            A shared line group can only contain {0} members at most.<br><br>
            **Error Code:** `300` **Validation Failed**<br>
            * Shared line group (id: {sharedLingGroupId}) does not exist.

        '404':
          description: |+
            **HTTP Status Code:** `404` **Not Found** <br>
            Device does not exist in the system.

            **Error Code:** `1001`<br>
            User not found: {userId}.


      summary: Add members to a shared line group
      description: |-
        A [shared line group](https://support.zoom.us/hc/en-us/articles/360038850792) allows Zoom Phone admins to share a phone number and extension with a group of phone users or common area phones. This gives members of the shared line group access to the group's direct phone number and voicemail. Use this API to [add members](https://support.zoom.us/hc/en-us/articles/360038850792-Setting-up-shared-line-groups#h_7cb42370-48f6-4a8f-84f4-c6eee4d9f0ca) to a Shared Line Group. Note that a member can only be added to one shared line group.

        **Prerequisties:** <br>
        * Pro or higher account with Zoom Phone license.
        * A valid Shared Line Group
        * Account owner or admin privileges

        **Scopes:** `phone:write:admin`


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      operationId: addMembersToSharedLineGroup
      tags:
        - Phone Shared Line Groups
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              members:
                type: object
                description: Members can comprise of users on the account as well as common area phones. You can add a maximum of 10 members at once.
                properties:
                  users:
                    type: array
                    description: Zoom Phone users on the account.
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: Unique identifier of the user.
                        email:
                          type: string
                          description: Email address of the user.
                  common_area_phone_ids:
                    type: array
                    description: 'Unique identifier(s) of the Common Area Phone. '
                    items:
                      type: string
          x-examples:
            application/json: "{\n\t\"members\": {\n\t\t\"common_area_phone_ids\" : [\n\t\t\t\"12fhdkfh-fdsf62g\",\n\t\t\t\"22Ssjhfhgsf-3dSO62g\",\n\t\t],\n\t\t\"users\" : [\n\t\t\t{\n        \"id\" : \"92S3fusdf-O62g\",\n        \"email\": \"hdsfjhdf@xdjvhv.cghdc\"\n      },\n\t\t\t{\n        \"id\" : \"92S3FySjSB-kZSSe6O62g\",\n        \"email\": \"dajhsdh@xdjvhv.cghdc\"\n      }\n\t\t]\n\t}\n}"
        - in: path
          name: sharedLineGroupId
          type: string
          required: true
          description: Unique Identifier of the shared line group.
    parameters:
      - name: sharedLineGroupId
        in: path
        type: string
        required: true
    delete:
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` **No Content**<br>

            Members unassigned successfully.
          schema: {}
        '400':
          description: |
            **HTTP Status Code:** `400` **Bad Request**<br>
            **Error Code:** `300` **Validation Failed**<br>
            * Shared line group (id: {sharedLingGroupId}) does not exist.
      summary: Unassign members of a shared line group
      description: |-
        Members of the [shared line group](https://support.zoom.us/hc/en-us/articles/360038850792) have access to the group's phone number and voicemail. Use this API to unassign **all** the existing members from a Shared Line Group.
        **Prerequisties:** <br>
        * Pro or higher account with Zoom Phone license.
        * A valid Shared Line Group
        * Account owner or admin privileges

        **Scopes:** `phone:write:admin`


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      operationId: deleteMembersOfSLG
      tags:
        - Phone Shared Line Groups
      parameters:
        - in: path
          name: sharedLineGroupId
          type: string
          required: true
          description: Unique identifier of the Shared Line Group that you would like to delete.
  '/phone/shared_line_groups/{sharedLineGroupId}/members/{memberId}':
    delete:
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` **No Content**<br>

            Members unassigned successfully.
        '400':
          description: |
            **HTTP Status Code:** `400` **Bad Request**<br>
            **Error Code:** `300` **Validation Failed**<br>
            * Shared line group (id: {sharedLingGroupId}) does not exist.
      summary: Unassign a member from a shared line group
      description: |-
        Members of the [shared line group](https://support.zoom.us/hc/en-us/articles/360038850792) have access to the group's phone number and voicemail. Use this API to unassign **a specific member** from a Shared Line Group.
        **Prerequisties:** <br>
        * Pro or higher account with Zoom Phone license.
        * A valid Shared Line Group
        * Account owner or admin privileges

        **Scopes:** `phone:write:admin`


         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      operationId: deleteAMemberSLG
      tags:
        - Phone Shared Line Groups
      parameters:
        - in: path
          name: sharedLineGroupId
          type: string
          required: true
          description: Unique Identifier of the shared line group from which you would like to remove a member.
        - in: path
          name: memberId
          type: string
          required: true
          description: Unique identifier of the member who is to be removed.
    parameters:
      - name: sharedLineGroupId
        in: path
        type: string
        required: true
      - name: memberId
        in: path
        type: string
        required: true
  '/phone/shared_line_groups/{sharedLineGroupId}/phone_numbers':
    post:
      responses:
        '201':
          description: |-
            **HTTP Status Code:** `201` **Created**<br>
            Phone number(s) assigned successfully.
        '400':
          description: |+
            **HTTP Status Code:** `400` **Bad Request**<br>
            **Error Code:** `400`<br>
            Phone number does not exist<br><br>
            **Error Code:** `300` **Validation Failed.**<br>
            Shared line group (id: {sharedLingGroupId}) does not exist.

        '401':
          description: |-
            **HTTP Status Code:** `401` **Unauthorized**<br>
            **Error Code:** `124`
            Phone number does not belong to this account
      summary: Assign phone numbers
      description: |-
        Use this API to assign phone numbers to a shared line groups. These direct phone numbers will be shared among members of the [shared line group](https://support.zoom.us/hc/en-us/articles/360038850792-Setting-up-shared-line-groups).
        **Prerequisties:** <br>
        * Pro or higher account with Zoom Phone license.
        * A valid Shared Line Group
        * Account owner or admin privileges

        **Scopes:** `phone:write:admin`
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      operationId: assignPhoneNumbersSLG
      tags:
        - Phone Shared Line Groups
      parameters:
        - in: path
          name: sharedLineGroupId
          type: string
          required: true
          description: Unique Identifier of the Shared Line Group.
        - in: body
          name: body
          schema:
            type: object
            properties:
              phone_numbers:
                type: array
                description: Phone number(s) to be assigned to the Shared Line Group.
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Unique Identifier of the phone number.
                    number:
                      type: string
                      description: Phone number.
          x-examples:
            application/json:
              phone_numbers:
                - id: '123123'
                  number: '4567890'
    parameters:
      - name: sharedLineGroupId
        in: path
        type: string
        required: true
    delete:
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` **No Content**<br>
            Phone Numbers unassigned successfully.
        '400':
          description: |+
            **HTTP Status Code:** `400` **Bad Request**<br>
            **Error Code:** `400`<br>
            Phone number does not exist<br><br>
            **Error Code:** `300` **Validation Failed.**<br>
            Shared line group (id: {sharedLingGroupId}) does not exist.

        '401':
          description: |-
            **HTTP Status Code:** `401` **Unauthorized**<br>
            **Error Code:** `124`
            Phone number does not belong to this account
      summary: Unassign all phone numbers
      description: |-
        Use this API to unassign all the phone numbers that have been assigned to the [shared line group](https://support.zoom.us/hc/en-us/articles/360038850792-Setting-up-shared-line-groups).
        **Prerequisties:** <br>
        * Pro or higher account with Zoom Phone license.
        * A valid Shared Line Group
        * Account owner or admin privileges

        **Scopes:** `phone:write:admin`
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      operationId: deletePhoneNumbersSLG
      tags:
        - Phone Shared Line Groups
      parameters:
        - in: path
          name: sharedLineGroupId
          type: string
          required: true
          description: Unique Identifier of the Shared Line Group.
      x-private: true
  '/phone/shared_line_groups/{sharedLineGroupId}/phone_numbers/{phoneNumberId}':
    delete:
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` **No Content**<br>
            Phone Numbers unassigned successfully.
        '400':
          description: |+
            **HTTP Status Code:** `400` **Bad Request**<br>
            **Error Code:** `400`<br>
            Phone number does not exist<br><br>
            **Error Code:** `300` **Validation Failed.**<br>
            Shared line group (id: {sharedLingGroupId}) does not exist.

        '401':
          description: |-
            **HTTP Status Code:** `401` **Unauthorized**<br>
            **Error Code:** `124`
            Phone number does not belong to this account
      summary: Unassign a phone number
      description: |-
        Use this API to unassign a specific phone number that was assigned to the [shared line group](https://support.zoom.us/hc/en-us/articles/360038850792-Setting-up-shared-line-groups).
        **Prerequisties:** <br>
        * Pro or higher account with Zoom Phone license.
        * A valid Shared Line Group
        * Account owner or admin privileges

        **Scopes:** `phone:write:admin`
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
      operationId: deleteAPhoneNumberSLG
      tags:
        - Phone Shared Line Groups
      parameters:
        - in: path
          name: sharedLineGroupId
          type: string
          required: true
          description: Unique identifier of the shared line group from which you would like to unassign a phone number.
        - in: path
          name: phoneNumberId
          type: string
          required: true
          description: Unique identifier of the phone number which is to be unassigned. This can be retrieved from Get a Shared Line Group API.
    parameters:
      - name: sharedLineGroupId
        in: path
        type: string
        required: true
      - name: phoneNumberId
        in: path
        type: string
        required: true
  /phone/auto_receptionists:
    post:
      responses:
        '201':
          description: |-
            **HTTP Status Code:** `201` **Created**

            Auto receptionist added successfully.
          schema:
            type: object
            properties:
              id:
                type: string
                description: Auto receptionist ID. Unique Identifier of the auto receptionist.
              name:
                type: string
                description: ' Name of the auto receptionist.'
              extension_number:
                description: ' Extension number assigned to the auto receptionist.'
                type: integer
          examples:
            application/json:
              id: officdt76ydatat
              name: HQ Auto Receptionist
              extension_number: 123
        '400':
          description: |+
            **HTTP Status Code:** `400` **Bad Request**<br>
            **Error Code:** `300` **Validation failed.**<br>
            * Multiple Site is disabled.<br>
            * Site does not exist.


      summary: Add an auto receptionist
      description: |+
        Auto receptionists answer calls with a personalized recording and routes calls to a phone user, call queue, common area phone, voicemail or an IVR system. Use this API to add an [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Interactive-Voice-Response-IVR-) to a Zoom Phone.<br>

        **Prerequisites:**<br>
        * Pro or higher account with Zoom Phone license.<br>
        **Scopes:** `phone:write:admin` <br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`

      operationId: addAutoReceptionist
      tags:
        - Phone Auto Receptionists
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              site_id:
                type: string
                description: 'Unique identifier of the site where the auto receptionist is to be assigned. This field is required only if you have [multiple sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) enabled.'
              name:
                type: string
                description: Provide a name to help identify the auto receptionist.
            required:
              - name
          x-examples:
            application/json:
              name: HQ Auto Receptionist
              site_id: dorfdg67on
  '/meetings/{meetingId}/batch_registrants':
    post:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` **OK** <br>
            Registrants added.
          schema:
            type: object
            properties:
              registrants:
                type: array
                items:
                  type: object
                  properties:
                    registrant_id:
                      type: string
                      description: Unique identifier of the registrant.
                    email:
                      type: string
                      description: Email address of the registrant.
                    join_url:
                      type: string
                      description: Unique URL using which registrant can join the meeting.
          examples:
            application/json:
              registrants:
                - registrant_id: conseret14re
                  email: AqJiu@BkIJbPQOXXngjYCpbrlI.zyax
                  join_url: ' https://zoom.us/w/9999999?tk=oZuwHfdgAAAAAAAAAAAAAAAA&uuid=WN_XW4_SdxBBBBxLDQt'
                - registrant_id: fdgsfh2ey82fuh
                  email: DEih6AZ@mvRTbzqfUSOItBkyPDbNbAW.ouz
                  join_url: ' https://zoom.us/w/9999999?tk=oZu52542356AAAAAA&uuid=WN_XW4_SdxBBBBxLDQt'
                - registrant_id: hdsfhjf3iwh
                  email: i8OzhqFt2h@YKJmTmm.tge
                  join_url: ' https://zoom.us/w/9999999?tk=ozghdfdsghf36AAA&uuid=WN_XW4_SdxBBBBxLDQt'
        '400':
          description: |+
            **HTTP Status Code:** `400` **Bad Request** <br>
            **Error Code:** `3038`<br>
            Meeting is over, you can not register now. If you have any questions, please contact the Meeting host.<br><br>
            **Error Code:** `303`<br>
            This API can only be used for scheduled meeting(meeting type: 2). Batch registration is not supported for other meeting types.

        '404':
          description: |+
            **HTTP Status Code:** `404` **Not Found** <br>
            **Error Code:** `3001`<br>
            Meeting does not exist: {meetingId}.<br>
            **Error Code:** `3043`<br>
            Meeting has reached maximum attendee capacity.<br>
            **Error Code:** `404`<br>
            Registration has not been enabled for this meeting: {meetingId}.



      x-private: true
      summary: Perform batch registration
      description: |+
        Register up to 30 registrants at once for a meeting that requires [registration](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings). <br>

        **Prerequisites:**<br>
        * The meeting host must be a Licensed user.
        * The meeting must require registration and should be of type `2`, i.e., they should be scheduled meetings. Instant meetings and Recurring meetings are not supported by this API.<br><br>
        **Scope:** `meeting:write`, `meeting:write:admin`<br>
        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>







      operationId: addBatchRegistrants
      tags:
        - Meetings
      security:
        - OAuth: []
        - Bearer: []
      parameters:
        - in: path
          name: meetingId
          type: string
          required: true
          description: Unique identifier of the meeting (Meeting Number).
        - in: body
          name: body
          schema:
            type: object
            properties:
              auto_approve:
                type: boolean
                description: |-
                  If a meeting was scheduled with approval_type `1` (manual approval), but you would like to automatically approve the registrants that are added via this API, you can set the value of this field to `true`.

                  You **cannot** use this field to change approval setting for a meeting  that was originally scheduled with approval_type `0` (automatic approval).
              registrants:
                type: array
                items:
                  type: object
                  properties:
                    first_name:
                      type: string
                      description: First name of the registrant.
                    last_name:
                      type: string
                      description: Last name of the registrant.
                    email:
                      type: string
                      description: Email address of the registrant.
                      format: email
                  required:
                    - first_name
                    - email
          x-examples:
            application/json:
              auto_approve: false
              registrants:
                - first_name: Harry
                  email: AqJiu@BkIJbPQOXXngjYCpbrlI.zyax
                  last_name: CHarles
                - first_name: Mary
                  email: DEih6AZ@mvRTbzqfUSOItBkyPDbNbAW.ouz
                  last_name: Jones
                - first_name: Shekhar
                  email: i8OzhqFt2h@YKJmTmm.tge
                  last_name: Kumar
    parameters:
      - name: meetingId
        in: path
        type: string
        required: true
  '/phone/call_queues/{callQueueId}/recordings':
    get:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              from:
                type: string
                description: Start date.
              to:
                type: string
                description: End date.
              next_page_token:
                type: string
                description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
              page_size:
                description: The number of records returned within a single API call.
                type: integer
              total_records:
                type: string
                description: The total number of records returned for this API call.
              recordings:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Unique Identifier of the recording.
                    caller_number:
                      type: string
                      description: Phone number of the caller.
                    caller_number_type:
                      type: string
                      description: Phone number type of the caller.<br>`1`- Internal<br>`2`- External
                    caller_name:
                      type: string
                      description: Name of the caller.
                    callee_number:
                      type: string
                      description: Name of the callee.
                    callee_number_type:
                      type: string
                      description: Phone number type of the callee.<br>`1`- Internal<br>`2`- External
                    callee_name:
                      type: string
                      description: Contact name of the callee.
                    direction:
                      type: string
                      description: Direction of call. The value of this field can be either `outbound` or `inbound`.
                    duration:
                      type: integer
                      description: Duration of the call.
                    download_url:
                      type: string
                      description: URL using which the recording can be downloaded.
                    date_time:
                      type: string
                      description: Date of the recording.
                      format: date
          examples:
            application/json:
              next_page_token: fg4t65hy
              page_size: 1
              total_records: 1
              recordings:
                - id: dvfv5gg
                  caller_number: '+900138732313213'
                  caller_number_type: internal
                  caller_name: idvdfdf
                  callee_number: '900138752313210'
                  callee_number_type: internal
                  callee_name: dfhjdvf
                  direction: outbound
                  duration: 20
                  download_url: sjhgkdfg.fdghfb/fdgfdg
                  date_time: '2026-08-11'
      summary: Get call queue recordings
      description: |+
        Use this API to view [call recordings](https://support.zoom.us/hc/en-us/articles/360038521091#h_cbc9f2a3-e06c-4daa-83d4-ddbceef9c77b) from the call queue.<br><br>
        **Prerequisites:**<br>
        * Pro or higher account with Zoom Phone license.
        * [Automatic call recordings](https://support.zoom.us/hc/en-us/articles/360033511872#h_fcb297bb-14e8-4094-91ca-dc61e1a18734) must be enabled in the Policy Settings for call queues. <br> **Scope:** `phone:read:admin`<br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`



      operationId: getCallQueueRecordings
      tags:
        - Phone Call Queues
      parameters:
        - in: path
          name: callQueueId
          type: string
          required: true
          description: Unique Identifier of the Call Queue.
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/NextPageToken'
        - in: query
          name: from
          type: string
          description: Start date (within a 6 month range).
          format: date
        - in: query
          name: to
          type: string
          description: End date (within a 6 month range).
          format: date
    parameters:
      - name: callQueueId
        in: path
        type: string
        required: true
  '/rooms/{id}/events':
    patch:
      responses:
        '202':
          description: |-
            **HTTP Status Code:** `202` **Accepted**<br>
            Request processed successfully.
          schema: {}
        '400':
          description: |+
            **HTTP Status Code:** `400` **Bad Request**<br>
            **Error Code:** `300`<br>
            * Zoom Room is offline. Please ensure that the Zoom Room is online before checking in or checking out.
            * Invalid parameters.


        '404':
          description: |+
            **HTTP Status Code:** `404` **Not Found**<br>
            **Error Code:** `1012` <br>
            Room does not exist: {roomId}.


      summary: Check-in or check-out of a Zoom Room
      description: |-
        The Zoom Rooms check-in feature helps maximize your room utilization. Use this API to either **check in** and confirm that you are utilizing the room reservation or to **check out** of the room so that the room gets released from the scheduled meeting and will be made available for others to use. Learn more from the [Using the Zoom Rooms check-in feature](https://support.zoom.us/hc/en-us/articles/360001147163-Using-the-Zoom-Rooms-check-in-feature) guide.

        **Prerequisites:**
        * [Zoom Rooms](https://support.zoom.us/hc/en-us/articles/207483343-Getting-started-with-Zoom-Rooms#:~:text=Zoom%20Rooms%20is%20a%20software,or%20from%20their%20mobile%20device) must have been set up for use for the account and must be online.
        * You must have access to the Calendar Integration APIs (either Microsoft Exchange or Google Calendar APIs) to get calendar information associated with the Room.

        **Scope:** `room:write:admin`
      operationId: checkInRooms
      tags:
        - Rooms
      parameters:
        - in: path
          name: id
          type: string
          required: true
          description: Room ID
        - in: body
          name: body
          schema:
            type: object
            properties:
              method:
                type: string
                description: |-
                  The value of this field can be one of the following:<br>
                  * zoomroom.check_in
                  * zoomroom.check_out
              params:
                type: object
                properties:
                  event_id:
                    type: string
                    description: |+
                      Unique Identifier of the calendar event associated with the Zoom Room.<br><br>If the calendar integration being used is Microsoft Exchange, the value for this field can be retrieved by using Microsoft's [FindItem Operation](https://docs.microsoft.com/en-us/exchange/client-developer/web-service-reference/finditem-operation) and referring to the Id field of the ItemId Element included in the operation response.<br><br>If the Google calendar integration was used for this event, the event_id can be retrieved by calling Google's [Events:list API](https://developers.google.com/calendar/v3/reference/events/list) and referring to the "id" field included in the [events resource](https://developers.google.com/calendar/v3/reference/events#resource).

                  change_key:
                    type: string
                    description: 'This field is required only for Microsoft Exchange or Office 365  calendar. The change key represents the specific version of the calendar item and can be retrieved by using Microsoft''s [FindItem Operation](https://docs.microsoft.com/en-us/exchange/client-developer/web-service-reference/finditem-operation) and referring to the ChangeKey field of the ItemId Element included in the operation response.<br>'
                  calendar_id:
                    type: string
                    description: |-
                      This field is only required if Google Calendar is being used for the event associated with the Zoom Room. The value for this field can be retrieved by calling Google's [CalendarList:list API](https://developers.google.com/calendar/v3/reference/events/list) and referring to the "id" field included in the [calendarList resource](https://developers.google.com/calendar/v3/reference/calendarList#resource).


                  resource_email:
                    type: string
                    description: 'This field is only required for Microsoft Exchange / Office 365 Calendar. It is the [resource mailbox](https://support.microsoft.com/en-us/help/10063/creating-and-managing-resource-mailboxes-in-office-365) associated with the calendar.'
                    format: email
                required:
                  - event_id
          x-examples:
            application/json:
              method: zoomroom.check_in
              params:
                event_id: AAMdxghjkdfkdsd7hgfsjdfjkkjgdjksdjdsdddddg6886AA=
                change_key: DwAbbb/dsuyfwwyu90AE2XqVw
                resource_email: public.test@somedomainhere1234.com
    parameters:
      - name: id
        in: path
        type: string
        required: true
  '/live_meetings/{meetingId}/events':
    patch:
      responses:
        '202':
          description: |-
            **HTTP Status:** `202` **Accepted**
            Request processed successfully.
          schema: {}
        '400':
          description: |
            **HTTP Status:** `400` **Bad Request** <br><br>
            **Error Code:** `300`<br>
            * Meeting id does not exist.<br>
            * Invalid meeting id.<br>
            * Meeting does not exist.<br>
            * No permission.
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            **Error Code:** `3001` <br> Meeting {meetingId} is not found or has expired.
      summary: Use in-Meeting recording controls
      description: |-
        Use this API to control the [in-meeting](https://support.zoom.us/hc/en-us/articles/360021921032-In-Meeting-Controls) **recording features** such as starting a recording, stopping a recording, pausing a recording, and resuming a recording. This API only works for Cloud Recordings and not for local recordings.


        **Prerequisite:**
        * The meeting must be a live meeting.
        * Cloud Recording must be enabled.
        * The user using this API must either be the host or alternative host of the meeting.

        **Scopes:** `meeting:write`, `meeting:write:admin`, `meeting:master`
      operationId: inMeetingRecordingControl
      tags:
        - Meetings
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              method:
                type: string
                description: |+
                  The method that you would like to control. The value of this field can be one of the following:
                  * `recording.start`: Provide this value if you would like to start the recording.<br><br>
                  * `recording.stop`: Provide this value if you would like to stop the recording.<br><br>
                  * `recording.pause`: Provide this value if you would like to pause the recording.<br><br>
                  * `recording.resume`: Provide this value if you would like to resume the recording that was previously paused.



          x-examples:
            application/json:
              method: recording.start
        - in: path
          name: meetingId
          type: string
          required: true
          description: Unique identifier of the live meeting.
    parameters:
      - name: meetingId
        in: path
        type: string
        required: true
  '/accounts/{accountId}/sip_trunk/trunks':
    get:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` **OK**<br>
            List of SIP Trunks returned.
          schema:
            type: object
            properties:
              total_records:
                type: integer
                description: 'Total number of records returned. '
              sip_trunks:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Unique identifier of the sip trunk.
                    name:
                      type: string
                      description: Name assigned to the SIP trunk.
                    sip_server_address:
                      type: string
                      description: IP address or domain of the SIP trunk.
                    dnis:
                      type: string
                      description: DNIS of the SIP trunk.
                    number_prefix:
                      type: string
                      description: Prefix of the SIP Connected Audio phone number.
                    outbound_caller_id:
                      type: string
                      description: Outbound caller Id assigned to the trunk.
          examples:
            application/json:
              total_records: 1
              sip_trunks:
                - id: '268'
                  name: test1
                  sip_server_address: 111.111.1.1
                  dnis: '90001258'
                  number_prefix: '0'
                - id: '281'
                  name: test2
                  sip_server_address: 111.111.1.34
                  dnis: '80001748'
                  number_prefix: '0'
        '400':
          description: |+
            **HTTP Status Code:** `400` **Bad Request**<br>
            **Error Code:** `300`<br> Request failed because this account is not enrolled in SIP Connected Audio plan.

        '404':
          description: |+
            **HTTP Status Code:** `404` **Not Found**<br>
            **Error Code:** `2001`<br> Account does not exist: {0}.

      summary: List SIP trunks
      tags:
        - SIP Connected Audio
      description: |-
        With SIP-connected audio, Zoom establishes a SIP trunk (a network connection specifically designed to make and deliver phone calls) over a direct and private connection between the customer’s network and the Zoom cloud. Meeting participants that dial into a meeting or have the meeting call them, and are On-Net from the perspective of the customers’ IP telephony network, will be connected over this trunk rather than over the PSTN.<br><br>
        Use this API to list all the SIP trunks assigned to a master account or a sub account of the master account. To retrieve SIP trunks assigned to a sub account, provide the account ID of the sub account in the `accountId` path parameter. To retrieve SIP trunks of a master account, provide `me` as the value of the `accountId` path parameter. <br><br> **Scope:** `sip_trunk:read:admin`
        <br><b>Prerequisites:</b><br>
        * The account must either be a master account or a sub account with [API Partner Plan](https://zoom.us/plan/api) and SIP Connected Audio Plan.
      operationId: listSIPTrunks
      parameters:
        - in: path
          name: accountId
          type: string
          required: true
          description: 'Unique Identifier of the Account. To retrieve SIP trunks assigned to a sub account, provide the account ID of the sub account in the as the value of this field. To retrieve SIP trunks of a master account, provide `me` as the value of this field.'
    parameters:
      - name: accountId
        in: path
        type: string
        required: true
    post:
      responses:
        '201':
          description: |-
            **HTTP Status Code:** `204` **No Content**<br>
            SIP Trunk assigned successfully.
          schema:
            type: object
            properties:
              sip_trunks:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Unique identifier of the SIP trunk.
                    name:
                      type: string
                      description: Name of the SIP trunk.
                    sip_server_address:
                      type: string
                      description: IP Address or domain of the SIP trunk.
                    dnis:
                      type: string
                      description: DNIS - identifier for the SIP trunk enabled account.
                    number_prefix:
                      type: string
                      description: 'If the value of this field is `"0"`, it means that all the calls will be routed through this special line. All other values indicate the prefix of the phone number.'
          examples:
            application/json:
              sip_trunks:
                - id: represdf324fe
                  name: HQ-trunk
                  sip_server_address: 1.11.123.123
                  dnis: dolore43tr4u
                  number_prefix: '0'
        '400':
          description: |+
            **HTTP Status Code:** `400` **Bad Request**<br>
            **Error Code:** `300`<br>
            * Request failed because this account is not enrolled in SIP Connected Audio plan.<br>
            * The master account has no sip trunk configs.<br>
            * Invalid parameter: sip_trunks.


        '404':
          description: |+
            **HTTP Status Code:** `404` **Not Found**<br>
            **Error Code:** `2001`<br> Account does not exist: {0}.


      summary: Assign SIP trunks
      operationId: assignSIPTrunks
      tags:
        - SIP Connected Audio
      description: |-
        With SIP-connected audio, Zoom establishes a SIP trunk (a network connection specifically designed to make and deliver phone calls) over a direct and private connection between the customer’s network and the Zoom cloud. Meeting participants that dial into a meeting or have the meeting call them, and are On-Net from the perspective of the customers’ IP telephony network, will be connected over this trunk rather than over the PSTN.<br><br>Use this API to assign SIP trunk(s) that are available on a master account to a sub account. <br><b>Prerequisites:</b><br>
        * The account making this API request must be a master account with [API Partner Plan](https://zoom.us/plan/api) and SIP Connected Audio Plan.<br><br>
        **Scope:** `sip_trunk:master`
      parameters:
        - in: path
          name: accountId
          type: string
          required: true
          description: Unique Identifier of the sub account.
        - in: body
          name: body
          schema:
            type: object
            properties:
              sip_trunks:
                type: array
                description: 'Array of one or more SIP Trunk objects. '
                minItems: 1
                maxItems: 30
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Unique identifier of the SIP trunk that will be assigned to the sub account. The value of this field can be retrieved by listing the SIP Trunks of a master account using List SIP Trunks API.
                    dnis:
                      type: string
                      description: |-
                        DNIS of the sub account. The prefix of the DNIS (i.e. the first five digits of the DNIS value) must match the DNIS prefix of the master account. To retrieve the DNIS prefix of a master account's SIP Trunk, use the List SIP Trunks API and refer to the first five digits in the `dnis` value.

                        For example, if the DNIS of the master account is 1888812345, the DNIS of the sub account must comprise of "18888" + "random_number". The maximum allowed length of the DNIS is 8.
                      minLength: 5
                      maxLength: 8
                    outbound_caller_id:
                      type: string
                      maxLength: 32
                      description: Assign an outbound caller Id to the trunk.
          x-examples:
            application/json:
              sip_trunks:
                - id: '133'
                  dnis: '12345678'
  '/accounts/{accountId}/sip_trunk/trunks/{trunkId}':
    delete:
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` **No Content**<br>
            SIP Trunk deleted.
          schema:
            type: object
            properties: {}
        '400':
          description: |-
            **HTTP Status Code:** `400` **Bad Request**<br>
            **Error Code:** `300`<br>
            * Request failed because this account is not enrolled in SIP Connected Audio plan.<br>
            * Your account does not have the permission to make updates on this account. Only a master account can perform this action on a sub account.
        '404':
          description: |+
            **HTTP Status Code:** `404` **Not Found**<br>
            **Error Code:** `2001`<br> Account does not exist: {0}.



      summary: Delete a SIP trunk
      description: |-
        Use this API to remove existing SIP trunk of a sub account.<br>
        <br><b>Prerequisites:</b><br>
        * The account making this API request must be a master account with [API Partner Plan](https://zoom.us/plan/api) and SIP Connected Audio Plan.<br><br>
        **Scope:** `sip_trunk:master`
      operationId: deleteSIPTrunk
      tags:
        - SIP Connected Audio
      parameters:
        - in: path
          name: accountId
          type: string
          required: true
          description: Unique identifier of the sub account.
        - in: path
          name: trunkId
          type: string
          required: true
          description: 'Unique identifier of the SIP Trunk that was previously assigned to a sub account. To retrieve the value of this field, use the List SIP Trunks API.'
    parameters:
      - name: accountId
        in: path
        type: string
        required: true
      - name: trunkId
        in: path
        type: string
        required: true
  '/accounts/{accountId}/sip_trunk/callout_countries':
    post:
      responses:
        '201':
          description: |-
            **HTTP Status Code:** `201` **Created** <br>
            Call-out countries created.
          schema:
            type: object
            properties:
              callout_countries:
                type: array
                description: List of Call-out countries.
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Country ID.
                    name:
                      type: string
                      description: Name of the country.
                    code:
                      type: string
                      description: Country code for Phone number.
          examples:
            application/json:
              callout_countries:
                - id: US
                  name: United States
                  code: '1'
                - id: CA
                  name: Canada
                  code: '1'
        '400':
          description: |+
            **HTTP Status Code:** `400` **Bad Request**<br>
            **Error Code:** `300`<br>
            * Your account does not have the permission to make updates on this account. Only a master account can perform this action on a sub account.
            *  Request failed because this account is not enrolled in SIP Connected Audio plan.
            * This account is not a master account. To get access to this API, your account must be enrolled in the API Partner Plan and must be a master account.
            *  Invalid parameter: callout_countries.

        '404':
          description: |+
            **HTTP Status Code:** `404` **Not Found**<br>
            **Error Code:** `2001`<br> Account does not exist: {0}.


      description: |-
        Specify the list of [call-out](https://support.zoom.us/hc/en-us/articles/200942859-How-To-Use-Telephone-Call-Out-) countries for a master account or a sub account. To add call-out enabled countries to a sub account, provide the account ID of the sub account in the `accountId` path parameter. To add call-out enabled countries to a master account, provide `me` as the value of the `accountId` path parameter.
        <br><b>Prerequisites:</b><br>
        * The account making this API request must be a [master account](https://marketplace.zoom.us/docs/api-reference/master-account-apis) with SIP Connected Audio Plan.<br><br>
        **Scope:** `sip_trunk:master`
      summary: Add internal call-out countries
      operationId: addCalloutCountries
      tags:
        - SIP Connected Audio
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              callout_countries:
                type: array
                description: List of callout countries.
                minItems: 1
                maxItems: 30
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Two letter country code of the  call-out country.
                  required:
                    - id
            required:
              - callout_countries
          x-examples:
            application/json:
              callout_countries:
                - id: US
                - id: CA
        - in: path
          name: accountId
          type: string
          required: true
          description: 'Unique identifier of the account. To add Call-out enabled countries to a sub account, provide the account ID of the sub account in the `accountId` path parameter. To add Call-out enabled countries to a master account, provide `me` as the value of the `accountId` path parameter.'
    parameters:
      - name: accountId
        in: path
        type: string
        required: true
    get:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` **OK** <br>
            List of Internal Callout Countries returned.
          schema:
            type: object
            properties:
              total_records:
                type: integer
                description: The total number of records returned.
              callout_countries:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Two letter country Id.
                    name:
                      type: string
                      description: Name of the country.
                    code:
                      type: string
                      description: Country code.
          examples:
            application/json:
              total_records: 2
              callout_countries:
                - id: US
                  name: United States
                  code: '1'
                - id: CA
                  name: Canada
                  code: '1'
        '400':
          description: |+
            **HTTP Status Code:** `400` **Bad Request**<br>
            **Error Code:** `300`<br>
            * Your account does not have the permission to make updates on this account. Only a master account can perform this action on a sub account.
            *  Request failed because this account is not enrolled in SIP Connected Audio plan.
            * This account is not a master account. To get access to this API, your account must be enrolled in the API Partner Plan and must be a master account.

        '404':
          description: |-
            **HTTP Status Code:** `404` **Not Found**<br>
            **Error Code:** `2001`<br> Account does not exist: {0}.
      summary: List internal call-out countries
      description: |-
        Retrieve the list of internal [call-out](https://support.zoom.us/hc/en-us/articles/200942859-How-To-Use-Telephone-Call-Out-) countries of a master account or a sub account. To list call-out enabled countries of a sub account, provide the account ID of the sub account in the `accountId` path parameter. To list call-out enabled countries of a master account, provide `me` as the value of the `accountId` path parameter.
        <br><b>Prerequisites:</b><br>
        * The account making this API request must be a [master account](https://marketplace.zoom.us/docs/api-reference/master-account-apis) with SIP Connected Audio Plan.<br><br>
        **Scope:** `sip_trunk:master`
      operationId: listInternalCalloutCountries
      tags:
        - SIP Connected Audio
      parameters:
        - in: path
          name: accountId
          type: string
          required: true
          description: 'Unique identifier of the account. To list Call-out enabled countries to a sub account, provide the account ID of the sub account in the `accountId` path parameter. To list Call-out enabled countries of a sub account, provide the account ID of the sub account in the `accountId` path parameter. To list Call-out enabled countries of a master account, provide `me` as the value of the `accountId` path parameter.'
  '/accounts/{accountId}/sip_trunk/callout_countries/{countryId}':
    delete:
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` **No Content** <br>
            Country deleted.
          schema: {}
        '400':
          description: |+
            **HTTP Status Code:** `400` **Bad Request**<br>
            **Error Code:** `300`<br>
            * Your account does not have the permission to make updates on this account. Only a master account can perform this action on a sub account.
            *  Request failed because this account is not enrolled in SIP Connected Audio plan.
            * This account is not a master account. To get access to this API, your account must be enrolled in the API Partner Plan and must be a master account.



        '404':
          description: |-
            **HTTP Status Code:** `404` **Not Found**<br>
            **Error Code:** `2001`<br> Account does not exist: {0}.
      summary: Delete internal call-out country
      description: |-
        Delete a previously assigned [call-out](https://support.zoom.us/hc/en-us/articles/200942859-How-To-Use-Telephone-Call-Out-) country from a master account or a sub account. To remove call-out country from a sub account, provide the account ID of the sub account in the `accountId` path parameter. To remove call-out country from a master account, provide `me` as the value of the `accountId` path parameter.
        <br><b>Prerequisites:</b><br>
        * The account making this API request must be a [master account](https://marketplace.zoom.us/docs/api-reference/master-account-apis) with SIP Connected Audio Plan.<br><br>
        **Scope:** `sip_trunk:master`
      operationId: deleteInternalCallOutCountry
      tags:
        - SIP Connected Audio
      parameters:
        - in: path
          name: accountId
          type: string
          required: true
          description: |-
            Unique Identifier of the Account.<br>
            To remove Call-out country from a sub account, provide the account ID of the sub account in the `accountId` path parameter. To remove Call-out country from a master account, provide `me` as the value of the `accountId` path parameter.
        - in: path
          name: countryId
          type: string
          required: true
          description: Two lettered Id of the country.
    parameters:
      - name: accountId
        in: path
        type: string
        required: true
      - name: countryId
        in: path
        type: string
        required: true
  '/accounts/{accountId}/sip_trunk/internal_numbers':
    post:
      responses:
        '201':
          description: |
            **HTTP Status Code:** `201` **Created** <br>
            Internal numbers added successfully.
          schema:
            type: object
            properties:
              internal_numbers:
                type: array
                items:
                  type: object
                  properties:
                    number:
                      type: string
                      description: Phone number in E164 format.
                    display_number:
                      type: string
                      description: 'Phone number with display format. For instance, if the value in the number field is `+1888888000`, the value of this field could be `+1 888 888 000`. '
                    country:
                      type: string
                      description: Two letter country code of the country.
                    visible:
                      type: boolean
                      description: |-
                        Specify whether you want this number to be visible (in Zoom Client and Zoom Portal) to the account users or not. The value could be one of the following:<br>
                        * `true`: Make the number visible. <br>
                        * `false`: Hide the number.
                    allow_join:
                      type: boolean
                      description: |-
                        Specify whether this number can be used by users to join a meeting or not. <br>
                        * `true` : This number can be used to join a meeting. <br>
                        *  `false`: This number can not be used to join a meeting.

                        Note that if the value of `visible` field is set to `true`, the value of this field will always be `true`.
                    type:
                      type: integer
                      description: |-
                        Type of phone number. <br>
                        The value can be one of the following:<br>
                        * `0` : toll <br>
                        * `1` : tollfree
                      enum:
                        - 0
                        - 1
                    labels:
                      type: string
                      description: A short description for the phone number.
                    languages:
                      type: string
                      description: 'Specify the language in which this phone number should be displayed. Currently, the only supported languages are `en-GB`, `en-US`, `de-DE`.'
                      enum:
                        - en-GB
                        - en-US
                        - de-DE
                    id:
                      type: string
                      description: Unique identifier of the internal number.
                    allow_for_external_meetings:
                      type: boolean
                      description: Control whether the number can be used to attend 3rd party meetings.
                  required:
                    - number
                    - display_number
                    - country
                    - type
                    - labels
                    - languages
          examples:
            application/json:
              internal_numbers:
                - id: A26fhgdfg63
                  number: '+16466661110'
                  display_number: +1 646 666 1110
                  country: US
                  type: 0
                  labels: SIP-Internal
                  languages: en-GB
                  visible: true
                  allow_join: true
        '400':
          description: |+
            **HTTP Status Code:** `400` **Bad Request**<br>
            **Error Code:** `300`<br>
            * Your account does not have the permission to make updates on this account. Only a master account can perform this action on a sub account.
            * Request failed because this account is not enrolled in SIP Connected Audio plan.
            * This account is not a master account. To get access to this API, your account must be enrolled in the API Partner Plan and must be a master account.
            * You can only assign a maximum of {0} phone numbers to this account.
            * The value you provided for the ‘number’ field has already been used. Please provide a unique value for this field.
            * Invalid parameter: internal_numbers.



        '404':
          description: |+
            **HTTP Status Code:** `404` **Not Found**<br>
            **Error Code:** `2001`<br> Account does not exist: {0}.




      summary: Add internal numbers
      description: |+
        This API allows a master account with SIP Connected Audio plan to assign internal phone numbers (i.e., numbers that are not provided by Zoom but are owned by the organization consuming the API) to a master account or a sub account.<br><br>To add internal numbers to a sub account, provide the account ID of the sub account in the `accountId` path parameter. To add internal numbers to a master account, provide `me` as the value of the `accountId` path parameter.
        <br><b>Prerequisites:</b><br>
        * The account making this API request must be a [master account](https://marketplace.zoom.us/docs/api-reference/master-account-apis) with SIP Connected Audio Plan.<br><br>
        **Scope:** `sip_trunk:master`

      operationId: addInternalNumbers
      tags:
        - SIP Connected Audio
      parameters:
        - in: path
          name: accountId
          type: string
          required: true
          description: 'Unique identifier of the account.<br>To add internal numbers to a sub account, provide the account ID of the sub account in the `accountId` path parameter. To add internal numbers to a master account, provide `me` as the value of the `accountId` path parameter.'
        - in: body
          name: body
          schema:
            type: object
            properties:
              internal_numbers:
                type: array
                minItems: 1
                maxItems: 30
                items:
                  type: object
                  properties:
                    number:
                      type: string
                      description: Phone number in E164 format.
                    display_number:
                      type: string
                      description: 'Phone number with display format. For instance, if the value in the number field is `+1888888000`, the value of this field could be `+1 888 888 000`. '
                    country:
                      type: string
                      description: Two letter country code of the country.
                    visible:
                      type: boolean
                      description: |-
                        Specify whether you want this number to be visible (in Zoom Client and Zoom Portal) to the account users or not. The value could be one of the following:<br>
                        * `true`: Make the number visible. <br>
                        * `false`: Hide the number.
                    allow_join:
                      type: boolean
                      description: |-
                        Specify whether this number can be used by users to join a meeting or not. <br>
                        * `true` : This number can be used to join a meeting. <br>
                        *  `false`: This number can not be used to join a meeting.

                        Note that if the value of `visible` field is set to `true`, the value of this field will always be `true`.
                    allow_for_external_meetings:
                      type: boolean
                      description: Control whether the number can be used to attend 3rd party meetings.
                    type:
                      type: integer
                      description: |-
                        Type of phone number. <br>
                        The value can be one of the following:<br>
                        * `0` : toll <br>
                        * `1` : tollfree
                      enum:
                        - 0
                        - 1
                    labels:
                      type: string
                      description: A short description for the phone number.
                    languages:
                      type: string
                      description: 'Specify the language in which this phone number should be displayed. Currently, the only supported languages are `en-GB`, `en-US`, `de-DE`.'
                      enum:
                        - en-GB
                        - en-US
                        - de-DE
                  required:
                    - number
                    - display_number
                    - country
                    - type
                    - labels
                    - languages
          x-examples:
            application/json:
              internal_numbers:
                - number: '+16466661110'
                  display_number: +1 646 666 1110
                  country: US
                  type: 0
                  labels: SIP-Internal
                  languages: en-GB
                  visible: true
                  allow_join: true
    parameters:
      - name: accountId
        in: path
        type: string
        required: true
    get:
      responses:
        '200':
          description: |
            **HTTP Status Code:** `200` **OK**<br>
            List of internal numbers returned.
          schema:
            type: object
            properties:
              page_size:
                type: integer
                description: The number of records that you specified to get in the response per page.
                default: 30
              total_records:
                type: integer
                description: The total number of records returned.
              next_page_token:
                type: string
                description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
              internal_numbers:
                type: array
                items:
                  type: object
                  properties:
                    number:
                      type: string
                      description: Phone number in E164 format.
                    display_number:
                      type: string
                      description: 'Phone number with display format. For instance, if the value in the number field is `+1888888000`, the value of this field could be `+1 888 888 000`. '
                    country:
                      type: string
                      description: Two letter country code of the country.
                    visible:
                      type: boolean
                      description: |-
                        Specify whether you want this number to be visible (in Zoom Client and Zoom Portal) to the account users or not. The value could be one of the following:<br>
                        * `true`: Make the number visible. <br>
                        * `false`: Hide the number.
                    allow_join:
                      type: boolean
                      description: |-
                        Specify whether this number can be used by users to join a meeting or not. <br>
                        * `true` : This number can be used to join a meeting. <br>
                        *  `false`: This number can not be used to join a meeting.

                        Note that if the value of `visible` field is set to `true`, the value of this field will always be `true`.
                    type:
                      type: integer
                      description: |-
                        Type of phone number. <br>
                        The value can be one of the following:<br>
                        * `0` : toll <br>
                        * `1` : tollfree
                      enum:
                        - 0
                        - 1
                    labels:
                      type: string
                      description: A short description for the phone number.
                    languages:
                      type: string
                      description: 'Specify the language in which this phone number should be displayed. Currently, the only supported languages are `en-GB`, `en-US`, `de-DE`.'
                      enum:
                        - en-GB
                        - en-US
                        - de-DE
                    allow_for_external_meetings:
                      type: boolean
                      description: Control whether the number can be used to attend 3rd party meetings.
                  required:
                    - number
                    - display_number
                    - country
                    - type
                    - labels
                    - languages
        '400':
          description: |+
            **HTTP Status Code:** `400` **Bad Request**<br>
            **Error Code:** `300`<br>
            * Your account does not have the permission to make updates on this account. Only a master account can perform this action on a sub account.
            * Request failed because this account is not enrolled in SIP Connected Audio plan.
            * This account is not a master account. To get access to this API, your account must be enrolled in the API Partner Plan and must be a master account.



        '404':
          description: |-
            **HTTP Status Code:** `404` **Not Found**<br>
            **Error Code:** `2001`<br> Account does not exist: {0}.
      summary: List internal numbers
      description: |+
        This API allows a master account with SIP Connected Audio plan to list internal phone numbers (i.e., numbers that are not provided by Zoom but are owned by the organization consuming the API) assigned to a master account or a sub account.<br><br>To list internal numbers of a sub account, provide the account ID of the sub account in the `accountId` path parameter. To list internal numbers of a  master account, provide `me` as the value of the `accountId` path parameter.
        <br><b>Prerequisites:</b><br>
        * The account making this API request must be a [master account](https://marketplace.zoom.us/docs/api-reference/master-account-apis) with SIP Connected Audio Plan.<br><br>
        **Scope:** `sip_trunk:master`


      operationId: listInternalNumbers
      tags:
        - SIP Connected Audio
      parameters:
        - in: path
          name: accountId
          type: string
          required: true
          description: 'Unique identifier of the account. To list internal numbers of a sub account, provide the account ID of the sub account in the `accountId` path parameter. To list internal numbers of a  master account, provide `me` as the value of the `accountId` path parameter.'
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/NextPageToken'
  '/accounts/{accountId}/sip_trunk/internal_numbers/{numberId}':
    delete:
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` **No Content** <br>
            Number deleted.
          schema: {}
        '400':
          description: |+
            **HTTP Status Code:** `400` **Bad Request**<br>
            **Error Code:** `300`<br>
            * Your account does not have the permission to make updates on this account. Only a master account can perform this action on a sub account.
            * Request failed because this account is not enrolled in SIP Connected Audio plan.
            * This account is not a master account. To get access to this API, your account must be enrolled in the API Partner Plan and must be a master account.



        '404':
          description: |-
            **HTTP Status Code:** `404` **Not Found**<br>
            **Error Code:** `2001`<br> Account does not exist: {0}.
      description: |+
        This API allows a master account with SIP Connected Audio plan to delete a previously assigned internal phone number from a master account or a sub account.<br><br>To delete an internal number from a sub account, provide the account ID of the sub account in the `accountId` path parameter. To delete an internal number from a master account, provide `me` as the value of the `accountId` path parameter.
        <br><b>Prerequisites:</b><br>
        * The account making this API request must be a [master account](https://marketplace.zoom.us/docs/api-reference/master-account-apis) with SIP Connected Audio Plan.<br><br>
        **Scope:** `sip_trunk:master`


      summary: Delete an internal number
      tags:
        - SIP Connected Audio
      operationId: deleteInternalNumber
      parameters:
        - in: path
          name: accountId
          type: string
          required: true
          description: 'Unique Identifier of the account. To delete an internal number from a sub account, provide the account ID of the sub account in the `accountId` path parameter. To delete an internal number from a master account, provide `me` as the value of the `accountId` path parameter.'
        - in: path
          name: numberId
          type: string
          required: true
          description: Unique identifier of the phone number. This value can be retrieved by calling the List Internal Numbers API.
    parameters:
      - name: accountId
        in: path
        type: string
        required: true
      - name: numberId
        in: path
        type: string
        required: true
  '/rooms/{roomId}/devices/{deviceId}/app_version':
    put:
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` **No Content** <br>
            Request processed successfully.
          schema: {}
        '400':
          description: |-
            **HTTP Status Code:** `400` **Bad Request**<br>
            **Error Code:** `8001` <br> Cannot process this upgrade request. The Zoom Rooms Software in this device is either already up to date or is currently being updated.  <br>  <br>
            **Error Code:** `8002` <br> Cannot process the downgrade request. The target version for downgrading is not available or the downgrade process has already been initiated. <br>  <br>
            **Error Code:** `8003` <br>  The cancel request could not be processed because the Zoom Rooms Software in this device is not being downgraded or upgraded at the moment. The cancel action should only be used to cancel an ongoing upgrade or downgrade process. <br>  <br>
            **Error Code:** `8004` <br> A device with the provided Device ID: {deviceId} does not belong to the current room: {roomId}.
      summary: Change Zoom Rooms' app version
      description: |-
        [Upgrade](https://support.zoom.us/hc/en-us/articles/204675449-Upgrade-or-Downgrade-Zoom-Rooms-Software#h_1751c48a-644e-4a60-b96a-31ec77c616e6) or [downgrade](https://support.zoom.us/hc/en-us/articles/204675449-Upgrade-or-Downgrade-Zoom-Rooms-Software#h_d97349d6-9253-484c-af80-350475026524) the version of Zoom Rooms App installed in your Mac or Windows device.

        **Prerequisites:**<br>
        * Pro or a higher account with Zoom Rooms.
        * Zoom Rooms software must be installed either on a Mac or a Windows device. This API does not support other devices.
      operationId: changeZoomRoomsAppVersion
      tags:
        - Rooms Devices
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              action:
                type: string
                description: |-
                  Specify one of the following values for this field:

                  `upgrade`: Upgrade to the latest Zoom Rooms App Version.<br>
                  `downgrade`: Downgrade the Zoom Rooms App Version.<br>
                  `cancel`: Cancel an ongoing upgrade or downgrade process.
                enum:
                  - upgrade
                  - downgrade
                  - cancel
          x-examples:
            application/json:
              action: upgrade
        - in: path
          name: roomId
          type: string
          required: true
          description: Unique Identifier of the Zoom Room.
        - in: path
          name: deviceId
          type: string
          required: true
          description: 'Unique Identifier of the Mac or the Windows device. The value of this field can be retrieved from the [List Zoom Room Devices API](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms/listzrdevices).'
    parameters:
      - name: roomId
        in: path
        type: string
        required: true
      - name: deviceId
        in: path
        type: string
        required: true
  /rooms/digital_signage:
    get:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` **OK**<br>
            List returned.
          schema:
            type: object
            properties:
              page_size:
                type: integer
                description: The number of records returned within a single API call.
              next_page_token:
                type: string
                description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
              contents:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: 'Unique identifier of the content or the folder. '
                    name:
                      type: string
                      description: Name of the content file or the folder.
          examples:
            application/json:
              total_records: 2
              page_size: 30
              next_page_token: ''
              contents:
                - id: sWbbbb535LQ
                  name: Marketing_Folder
                - id: 9N333khdhfgiafg
                  name: BackgroundImage.png
        '400':
          description: |-
            **HTTP Status Code:** `400` **Bad Request**<br>
            * Zoom Room subscription was not found. Try again after purchasing a Zoom Room subscription.
            * Access restricted.
      summary: List digital signage contents
      description: |+
        List information about existing [Zoom Rooms digital signage](https://support.zoom.us/hc/en-us/articles/360000030683-Zoom-Rooms-digital-signage) content in a Zoom account.<br> You can also access this information by logging into your Zoom account in the Zoom web portal and visiting the [Digital Signage Content](https://zoom.us/digitalsignage#/) page listed under **Room Management**.

        **Prerequisites:**
        * Pro or a higher account with Zoom Rooms.
        * Existing content files or folder in [Digital Signage Content](https://zoom.us/digitalsignage#/) page.


      operationId: listDigitalSignageContent
      tags:
        - Rooms
      parameters:
        - in: query
          name: type
          type: string
          description: |-
            Specify the type of digital signane resource. The value can be one of the following:
            * `content`: Returns information about content files.
            * `folder`: Returns information about the folder where the content files are located.
        - in: query
          name: folder_id
          type: string
          description: Unique identifier of the folder where the content is located. Provide this field if you would like to filter the response by contents that are only available in a specific folder.
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/NextPageToken'
  '/users/{userId}/webinar_templates':
    get:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200` **OK** <br>
            List of existing templates returned.
          schema:
            type: object
            properties:
              total_records:
                type: integer
                description: Total number of records returned.
              templates:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: 'Unique identifier of the template. If you would like to use this template while scheduling a webinar, you can provide the value of this field in `template_id` field of [Create a Webinar](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/webinarcreate) API.'
                    name:
                      type: string
                      description: Name of the template.
          examples:
            application/json:
              total_records: 1
              templates:
                - id: ull6574eur
                  name: Weekly Meeting Template
        '400':
          description: |-
            **HTTP Status Code:** `400` **Bad Request** <br>
            **Error Code:** `200`<br> Cannot use webinar API, you need to subscribe webinar plan and then enable webinar for this user:{userId}.<br>
            **Error Code:** `1001`<br>
            * User not exist: {userId}.
            * User {userId} does not exist or does not belong to this account.
      summary: List webinar templates
      description: |-
        When you schedule a webinar, you can save the settings for that webinar as a template for scheduling future webinars. <br><br>Use this API to list a user's existing [Webinar templates'](https://support.zoom.us/hc/en-us/articles/115001079746-Webinar-Templates) information.

        **Prerequisites:**
        * Pro or a higher account with Webinar plan enabled.
      operationId: listWebinarTemplates
      tags:
        - Webinars
    parameters:
      - name: userId
        in: path
        type: string
        required: true
  '/users/{userId}/presence_status':
    put:
      responses:
        '204':
          description: |
            **HTTP Status Code:** `204`<br>

            Status updated succesfully.
          schema: {}
        '400':
          description: |-
            **HTTP Status Code:** `400` **Bad Request**<br>
            **Error Code:** `5301`<br>
            Request to update the presence status of this user failed.<br>
            **Error Code:** `5411`<br>
            Unauthorized request. You do not have permission to update the presence status of this user.
        '404':
          description: |+
            **HTTP Status Code:** `404` **Not Found**<br>
            **Error Code:** `1001`<br>
            User does not exist: {userId}.



        '429':
          description: |-
            **HTTP Status Code:** `429` **Too Many Requests**<br>
            Too many requests submitted to update the presence status of this user. Please wait for the request to be processed and try again later.
      summary: Update a user's presence status
      description: |+
        Users in the Zoom desktop client and mobile apps are assigned with a [presence status](https://support.zoom.us/hc/en-us/articles/360032554051-Status-Icons). The presence status informs users of their contact's availability. Users can also change their own presence status to be either "Away", "Do not disturb", or "Available".

        Use this API to update a user's presence status. A user's status can not be updated more than once per minute, i.e., you can only submit a maximum of 1 update request/minute for a single user.<br>Note that a user's presence status can not be updated using this API if the user is not logged in to the Zoom client.

        **Scopes:** `user:write`, `user:write:admin`<br>
        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>


      operationId: updatePresenceStatus
      tags:
        - Users
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              status:
                type: string
                description: |-
                  Presence status of the user. The value can be set to one of the following:<br>
                  * `Away`
                  * `Do_Not_Disturb`
                  * `Available`

                  Users who are on Zoom Client with a version **lower than 5.3.0** can update the status from:
                  * `Away` to `Do_Not_Disturb`
                  * `Available` to `Do-Not_Disturb`

                  Users who are on **Zoom Client 5.3.0** or higher can update the status from:
                  * `Do_Not_Disturb` to `Away`
                  * `Do_Not_Disturb` to `Available`
                  * `Available` to `Away`
                  * `Away` to `Available`
                enum:
                  - Do_No_Disturb
                  - Away
                  - Available
              duration:
                type: integer
                description: |-
                  If you're updating the status to `Do_Not_Disturb`, specify a duration in minutes for which the status should remain as `Do_Not_Disturb`.

                  The default value is 20 minutes and the maximum allowed value is 1440 minutes.
                minimum: 20
                maximum: 1440
          x-examples:
            application/json:
              status: Do_No_Disturb
              duration: 45
    parameters:
      - name: userId
        in: path
        type: string
        required: true
  /phone/metrics/call_logs:
    get:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              next_page_token:
                type: string
                description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
              page_size:
                type: integer
                description: The number of records returned within a single call.
              total_records:
                type: integer
                description: The total number of records available across all pages.
              from:
                type: string
                description: Start date for the report in `yyyy-mm-dd` format.
              to:
                type: string
                description: End date for the report in `yyyy-mm-dd` format.
              call_logs:
                type: array
                description: Call logs.
                items:
                  type: object
                  properties:
                    call_id:
                      type: string
                      description: Unique identifier of the call.
                    duration:
                      type: integer
                      description: Duration of the call in seconds.
                    direction:
                      type: string
                      description: Direction of the call. The value of this field can be either `internal` or `outbound`.
                    date_time:
                      type: string
                      description: Date and time at which the call started.
                    mos:
                      type: string
                      description: Zoom uses Mean Opinion Score (MOS) as the main measurement to report on voice quality. MOS measures voice quality on a scale of 1 to 5. A score of 1 indicates unacceptable voice quality for all users. A score of 5 is the best voice quality.
                    caller:
                      type: object
                      description: Caller object contains information of the caller.
                      properties:
                        phone_number:
                          type: string
                          description: Phone number of the caller in E164 format.
                        extension_number:
                          type: string
                          description: Full extension number of the caller.
                        codec:
                          type: string
                          description: Audio codec.
                        microphone:
                          type: string
                          description: Microphone used for the call by the caller.
                        headset:
                          type: string
                          description: Headset used for the call by the caller.
                        isp:
                          type: string
                          description: ISP.
                        device_type:
                          type: string
                          description: Device type.
                        site_id:
                          type: string
                          description: 'Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites).'
                    callee:
                      type: object
                      description: Callee object contains information of the calee.
                      properties:
                        phone_number:
                          type: string
                          description: Phone number of the callee in E164 format.
                        extension_number:
                          type: string
                          description: Full extension number of the callee.
                        codec:
                          type: string
                          description: Audio codec.
                        microphone:
                          type: string
                          description: Microphone used for the call by the callee.
                        headset:
                          type: string
                          description: Headset used for the call by the callee.
                        isp:
                          type: string
                          description: ISP.
                        device_type:
                          type: string
                          description: Device type.
                        site_id:
                          type: string
                          description: 'Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites).'
          examples:
            application/json:
              next_page_token: Dhgnfxcnxzerz
              page_size: 10
              total_records: 3
              from: '2020-03-11'
              to: '2020-09-11'
              call_logs:
                - call_id: '600097'
                  duration: 75
                  direction: internal
                  date_time: '2020-09-11T05:38:53Z'
                  mos: '1.0'
                  caller:
                    phone_number: '+100006180'
                    extension_number: '1021'
                    codec: opus
                    microphone: Logitech USB Headset H340
                    headset: Logitech USB Headset H340
                    isp: other
                    device_type: Windows_Client 5.2.42619.0804
                    site_id: 8f71O6rWT8KFUGQmJIFAdQ
                  callee:
                    phone_number: '+1200009995'
                    extension_number: '1003'
                    codec: opus
                    microphone: Logitech USB Headset H340
                    headset: Logitech USB Headset H340
                    isp: other
                    device_type: Windows_Client 5.2.42619.0804
                    site_id: 8f71O86ghjIFAdQ
                - call_id: '687000062'
                  duration: 71
                  direction: internal
                  date_time: '2020-09-11T05:35:41Z'
                  mos: '1.0'
                  caller:
                    phone_number: '+100003330'
                    extension_number: '1021'
                    codec: opus
                    microphone: Logitech USB Headset H340
                    headset: Logitech USB Headset H340
                    isp: other
                    device_type: Windows_Client 5.2.42619.0804
                    site_id: 8f9586mJIFAdQ
                  callee:
                    phone_number: '+120123435'
                    extension_number: '1003'
                    codec: opus
                    microphone: Logitech USB Headset H340
                    headset: Logitech USB Headset H340
                    isp: other
                    device_type: Windows_Client 5.2.42619.0804
                    site_id: 8f87cgmJIFAdQ
                - call_id: '68798685701826'
                  duration: 67
                  direction: internal
                  date_time: '2020-09-11T05:30:49Z'
                  mos: '1.0'
                  caller:
                    phone_number: '+12099990'
                    extension_number: '1021'
                    codec: opus
                    microphone: Logitech USB Headset H340
                    headset: Logitech USB Headset H340
                    isp: other
                    device_type: Windows_Client 5.2.42619.0804
                    site_id: 8f71O6rWT8KFUGQmJIFAdQ
                  callee:
                    extension_number: '10006'
                    site_id: DS8YB6B6TYSN8BKo0P-5ug
      summary: List call logs
      description: |-
        Call logs provide a record of all incoming and outgoing calls over Zoom Phone in an account.

        Use this API to list monthly call logs metrics. You can use query parameters to filter the response by date, site and MOS(Mean Opinion Score) of the call.

        **Prerequisites:**
        * Business, or Education account
        * Zoom Phone license <br><br>

        **Scopes:** `phone:read:admin`, `phone:write:admin`<br>
        **Rate Limit Label:** `Heavy`
      operationId: listCallLogsMetrics
      tags:
        - Dashboards
      parameters:
        - in: query
          name: from
          type: string
          description: Start date for the report in `yyyy-mm-dd` format. Specify a 30 day range using the `from` and `to` parameters as the response provides a maximum of a month worth of data per API request.
        - in: query
          name: to
          type: string
          description: End date for the report in `yyyy-mm-dd` format.
        - in: query
          name: site_id
          type: string
          description: 'Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites). Use this query parameter if you have enabled multiple sites and would like to filter the response of this API call by call logs of a specific phone site.'
        - in: query
          name: quality_type
          type: string
          description: |+
            Filter call logs by voice quality. Zoom uses MOS of 3.5 as a general baseline to categorize calls by call quality. A MOS greater than or equal to 3.5 means good quality, while below 3.5 means poor quality. <br><br>The value of this field can be one of the following:<br>
            * `good`: Retrieve call logs of the call(s) with good quality of voice.<br>
            *  <br> * `bad`: Retrieve call logs of the call(s) with good quality of voice. <br> * `all`: Retrieve all call logs without filtering by voice quality.



        - in: query
          name: page_size
          type: integer
          default: 30
          maximum: 100
          description: The number of records returned within a single call.
        - in: query
          name: next_page_token
          type: string
          description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
  '/phone/metrics/call_logs/{call_id}':
    get:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              call_id:
                type: string
                description: Unique identifier of the call.
              duration:
                type: integer
                description: Duration of the call in seconds.
              direction:
                type: string
                description: Direction of the call. The value of this field can be either `internal` or `outbound`.
              date_time:
                type: string
                description: Date and time at which the call started.
              mos:
                type: string
                description: Zoom uses Mean Opinion Score (MOS) as the main measurement to report on voice quality. MOS measures voice quality on a scale of 1 to 5. A score of 1 indicates unacceptable voice quality for all users. A score of 5 is the best voice quality.
              caller:
                type: object
                description: Caller object contains information of the caller.
                properties:
                  phone_number:
                    type: string
                    description: Phone number of the caller in E164 format.
                  extension_number:
                    type: string
                    description: Full extension number of the caller.
                  codec:
                    type: string
                    description: Audio codec.
                  microphone:
                    type: string
                    description: Microphone used for the call by the caller.
                  headset:
                    type: string
                    description: Headset used for the call by the caller.
                  isp:
                    type: string
                    description: ISP.
                  device_type:
                    type: string
                    description: Device type.
                  site_id:
                    type: string
                    description: 'Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites).'
              callee:
                type: object
                description: Callee object contains information of the calee.
                properties:
                  phone_number:
                    type: string
                    description: Phone number of the callee in E164 format.
                  extension_number:
                    type: string
                    description: Full extension number of the callee.
                  codec:
                    type: string
                    description: Audio codec.
                  microphone:
                    type: string
                    description: Microphone used for the call by the callee.
                  headset:
                    type: string
                    description: Headset used for the call by the callee.
                  isp:
                    type: string
                    description: ISP.
                  device_type:
                    type: string
                    description: Device type.
                  site_id:
                    type: string
                    description: 'Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites).'
          examples:
            application/json:
              call_id: '687100000600397'
              duration: 75
              direction: internal
              date_time: '2020-09-11T05:38:53Z'
              mos: '1.0'
              caller:
                id: Y40bbbbgGh0V1Ul_Q
                extension_type: user
                display_name: Abcde
                phone_number: '+120997086780'
                extension_number: '1021'
                codec: opus
                microphone: Logitech USB Headset H340
                headset: Logitech USB Headset H340
                isp: other
                device_type: Windows_Client 5.2.42619.0804
                site_id: 8f71986768JIFAdQ
              callee:
                id: DnE46573vvzjgojw
                extension_type: user
                display_name: Shrijana
                phone_number: '+12066753735'
                extension_number: '1003'
                codec: opus
                microphone: Logitech USB Headset H340
                headset: Logitech USB Headset H340
                isp: other
                device_type: Windows_Client 5.2.42619.0804
                site_id: 8f71O66543IFAdQ
                route:
                  - id: 8M756763533A
                    extension_type: callQueue
                    display_name: asfdfsdg3_214
                    extension_number: '10006'
      summary: Get call log details
      description: |
        Call logs provide a record of all incoming and outgoing calls over Zoom Phone in an account.

        Use this API to list call log details of a specific call.

        **Prerequisites:**
        * Business, or Education account
        * Zoom Phone license <br><br>

        **Scopes:** `phone:read:admin`, `phone:write:admin`<br>
        **Rate Limit Label:** `Light`
      operationId: getCallLogMetricsDetails
      tags:
        - Dashboards
      parameters:
        - in: path
          name: call_id
          type: string
          required: true
          description: 'Unique identifier of the call. The value of this field can be retrieved from [List Call Logs]() API.'
    parameters:
      - name: call_id
        in: path
        type: string
        required: true
  '/phone/metrics/call_logs/{callId}/qos':
    get:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              call_id:
                type: string
                description: Unique identifier of the call.
              caller_qos:
                type: object
                description: Quality of Service object that represents the call quality data of the caller.
                properties:
                  sending:
                    type: array
                    description: QoS sent by the caller.
                    items:
                      type: object
                      properties:
                        date_time:
                          type: string
                          description: Date and time at which the QoS was delivered.
                          format: date-time
                        qos:
                          type: object
                          properties:
                            bitrate:
                              type: string
                              description: The number of bits per second in kbps that can be transmitted along a digital network.
                            avg_loss:
                              type: string
                              description: 'The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.'
                            max_loss:
                              type: string
                              description: 'The max amount of packet loss, i.e., the max percentage of packets that fail to arrive at their destination.'
                            network_delay:
                              type: string
                              description: The amount of time(in milliseconds) it takes for a VoIP packet to travel from one point to another.
                            jitter:
                              type: string
                              description: The variation in the delay of received packets. The value of this field is expressed in milliseconds.
                            mos:
                              type: string
                              description: 'Mean Opinion Score(MOS) measures voice quality on a scale of 1 to 5. A MOS greater than or equal to 3.5 means good quality, while below 3.5 means poor quality.'
                  receiving:
                    type: array
                    description: QoS received by the caller.
                    items:
                      type: object
                      properties:
                        date_time:
                          type: string
                          description: Date and time at which the QoS was received.
                          format: date-time
                        qos:
                          type: object
                          properties:
                            bitrate:
                              type: string
                              description: The number of bits per second in kbps that can be transmitted along a digital network.
                            avg_loss:
                              type: string
                              description: 'The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.'
                            max_loss:
                              type: string
                              description: 'The max amount of packet loss, i.e., the max percentage of packets that fail to arrive at their destination.'
                            network_delay:
                              type: string
                              description: The amount of time(in milliseconds) it takes for a VoIP packet to travel from one point to another.
                            jitter:
                              type: string
                              description: The variation in the delay of received packets. The value of this field is expressed in milliseconds.
                            mos:
                              type: string
                              description: 'Mean Opinion Score(MOS) measures voice quality on a scale of 1 to 5. A MOS greater than or equal to 3.5 means good quality, while below 3.5 means poor quality.'
              callee_qos:
                type: object
                properties:
                  sending:
                    type: array
                    description: QoS sent by the callee.
                    items:
                      type: object
                      properties:
                        date_time:
                          type: string
                          description: Date and time at which the QoS was delivered.
                          format: date-time
                        qos:
                          type: object
                          properties:
                            bitrate:
                              type: string
                              description: The number of bits per second expressed in kbps that can be transmitted along a digital network.
                            avg_loss:
                              type: string
                              description: 'The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.'
                            max_loss:
                              type: string
                              description: 'The max amount of packet loss, i.e., the max percentage of packets that fail to arrive at their destination.'
                            network_delay:
                              type: string
                              description: The amount of time(in milliseconds) it takes for a VoIP packet to travel from one point to another.
                            jitter:
                              type: string
                              description: The variation in the delay of received packets. The value of this field is expressed in milliseconds.
                            mos:
                              type: string
                              description: 'Mean Opinion Score(MOS) measures voice quality on a scale of 1 to 5. A MOS greater than or equal to 3.5 means good quality, while below 3.5 means poor quality.'
                  receiving:
                    type: array
                    description: QoS received by the callee.
                    items:
                      type: object
                      properties:
                        date_time:
                          type: string
                          description: Date and time at which the QoS was received.
                          format: date-time
                        qos:
                          type: object
                          properties:
                            bitrate:
                              type: string
                              description: The number of bits per second in kbps that can be transmitted along a digital network.
                            avg_loss:
                              type: string
                              description: 'The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.'
                            max_loss:
                              type: string
                              description: 'The max amount of packet loss, i.e., the max percentage of packets that fail to arrive at their destination.'
                            network_delay:
                              type: string
                              description: The amount of time(in milliseconds) it takes for a VoIP packet to travel from one point to another.
                            jitter:
                              type: string
                              description: The variation in the delay of received packets. The value of this field is expressed in milliseconds.
                            mos:
                              type: string
                              description: 'Mean Opinion Score(MOS) measures voice quality on a scale of 1 to 5. A MOS greater than or equal to 3.5 means good quality, while below 3.5 means poor quality.'
          examples:
            application/json:
              call_id: '6738888828'
              caller_qos:
                sending:
                  - date_time: '2019-09-05T02:22:27Z'
                    qos:
                      bitrate: 28.4kbps
                      avg_loss: 0.03%
                      max_loss: 0.4%
                      jitter: 0ms
                      network_delay: '252'
                      mos: '4.0'
                  - date_time: '2019-09-05T02:23:27Z'
                    qos:
                      bitrate: 27.15kbps
                      avg_loss: 0.03%
                      max_loss: 0.4%
                      jitter: 0ms
                      network_delay: '251'
                      mos: '4.0'
                  - date_time: '2019-09-05T02:24:27Z'
                    qos:
                      bitrate: 37.25kbps
                      avg_loss: 0%
                      max_loss: 0%
                      jitter: 0.55ms
                      network_delay: '249'
                      mos: '4.0'
                receiving:
                  - date_time: '2019-09-05T02:22:35Z'
                    qos:
                      bitrate: 26.25kbps
                      avg_loss: 1.8%
                      max_loss: ''
                      jitter: 1.0ms
                      network_delay: '248'
                      mos: '3.9'
                  - date_time: '2019-09-05T02:23:40Z'
                    qos:
                      bitrate: 26.14kbps
                      avg_loss: 1.1%
                      max_loss: ''
                      jitter: 1.0ms
                      network_delay: '252'
                      mos: '3.9'
                  - date_time: '2019-09-05T02:24:40Z'
                    qos:
                      bitrate: 26.66kbps
                      avg_loss: 1.3%
                      max_loss: ''
                      jitter: 1.0ms
                      network_delay: '248'
                      mos: '3.9'
              callee_qos:
                sending:
                  - date_time: '2019-09-05T02:22:33Z'
                    qos:
                      bitrate: 18.23kbps
                      avg_loss: 0.03%
                      max_loss: 0.55%
                      jitter: 0ms
                      network_delay: '0'
                      mos: '4.5'
                  - date_time: '2019-09-05T02:23:34Z'
                    qos:
                      bitrate: 18.28kbps
                      avg_loss: 0%
                      max_loss: 0%
                      jitter: 2.52ms
                      network_delay: '0'
                      mos: '4.5'
                  - date_time: '2019-09-05T02:24:34Z'
                    qos:
                      bitrate: 19.16kbps
                      avg_loss: 0%
                      max_loss: 0%
                      jitter: 0.48ms
                      network_delay: '0'
                      mos: '4.5'
                receiving:
                  - date_time: '2019-09-05T02:22:35Z'
                    qos:
                      bitrate: 26.25kbps
                      avg_loss: 1.8%
                      max_loss: ''
                      jitter: 1.0ms
                      network_delay: '248'
                      mos: '3.9'
                  - date_time: '2019-09-05T02:23:40Z'
                    qos:
                      bitrate: 26.14kbps
                      avg_loss: 1.1%
                      max_loss: ''
                      jitter: 1.0ms
                      network_delay: '252'
                      mos: '3.9'
                  - date_time: '2019-09-05T02:24:40Z'
                    qos:
                      bitrate: 26.66kbps
                      avg_loss: 1.3%
                      max_loss: ''
                      jitter: 1.0ms
                      network_delay: '248'
                      mos: '3.9'
      summary: Get call QoS
      description: |-
        Get call quality of service(QoS) data for a call made or received by a Zoom phone user in the account.

        **Prerequisites:**
        * Business, or Education account
        * Zoom Phone license <br><br>
        **Scopes:** `phone:read:admin`, `phone:write:admin`<br>
        **Rate Limit Label:** `Light`
      operationId: getCallQoS
      tags:
        - Dashboards
      parameters:
        - in: path
          name: callId
          type: string
          required: true
          description: Unique identifier of the call.
    parameters:
      - name: callId
        in: path
        type: string
        required: true
  '/phone/users/{userId}/sms/sessions':
    get:
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              next_page_token:
                type: string
                description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of the available result list exceeds the page size.
              page_size:
                type: integer
                description: The size of each page.
              sms_sessions:
                type: array
                items:
                  type: object
                  properties:
                    participants:
                      type: array
                      description: The SMS members.
                      items:
                        type: object
                        properties:
                          phone_number:
                            type: string
                            description: The participant phone number.
                          display_name:
                            type: string
                            description: The participant name.
                    session_id:
                      type: string
                      description: The SMS session ID.
                    last_access_time:
                      type: string
                      format: date
                      description: The last send or receive time in UTC.
          examples:
            application/json:
              next_page_token: 123rty456uio
              page_size: 30
              sms_sessions:
                - participants:
                    - phone_number: '+1234567890'
                      display_name: name
                  session_id: mcfl89er03po
                  last_access_time: '2021-04-01T10:00:00Z'
        '401':
          description: |-
            **HTTP Status Code:** `401`<br>

            **Error Code:** `124`<br>
            Account does not exist: {accountId}.
        '404':
          description: |-
            **HTTP Status Code:** `404` <br>

            **Error Code:** `1001`<br>
            User does not exist: {userId}

            **Error Code:** `7012`<br>
            Error retrieving SMS
      operationId: userSmsSession
      tags:
        - Phone
      description: |-
        Get details about SMS sessions for a user.

        **Scope**
        * `phone_sms:read`
        * `phone_sms:read:admin`
        * `phone_sms:master`

        **Prerequisites**
        * Paid account
        * User-enabled Zoom phone

        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`
      summary: Get User's SMS Sessions
      parameters:
        - in: path
          name: userId
          type: string
          required: true
          description: 'User ID, user email, or “me” if using OAuth token.'
        - in: query
          name: page_size
          type: integer
          default: 30
          description: The number of records returned within a single API call.
          maximum: 100
        - in: query
          name: next_page_token
          type: string
          description: The current page number of returned records.
        - in: query
          name: from
          type: string
          format: date
          description: Start date in yyyy-mm-dd format. The date range defined by the `from` and `to` parameters should only be one month as the report includes only one month's worth of data at once.
        - in: query
          name: to
          type: string
          format: date
          description: End date in yyyy-mm-dd format.
        - in: query
          name: phone_number
          type: string
          description: 'Either the sender’s or receiver’s phone number, to limit the list of SMS sessions.'
      x-private: true
  /phone/sms/sessions:
    get:
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              next_page_token:
                type: string
                description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of the available result list exceeds the page size.
              page_size:
                type: integer
                description: The size of each page.
              sms_sessions:
                type: array
                items:
                  type: object
                  properties:
                    participants:
                      type: array
                      description: The SMS members.
                      items:
                        type: object
                        properties:
                          phone_number:
                            type: string
                            description: The participant phone number.
                          display_name:
                            type: string
                            description: The participant name.
                    session_id:
                      type: string
                      description: The SMS session ID.
                    last_access_time:
                      type: string
                      format: date
                      description: The last send or receive time in UTC.
          examples:
            application/json:
              next_page_token: 123rty456uio
              page_size: 30
              sms_sessions:
                - participants:
                    - phone_number: '+1234567890'
                      display_name: name
                  session_id: mcfl89er03po
                  last_access_time: '2021-04-01T10:00:00Z'
        '401':
          description: |-
            **HTTP Status Code:** `401`<br>

            **Error Code:** `124`<br>
            Account does not exist: {accountId}.
        '404':
          description: |-
            **HTTP Status Code:** `404` <br>

            **Error Code:** `7012`<br>
            Error retrieving SMS
      operationId: accountSmsSession
      tags:
        - Phone
      description: |-
        Get details about SMS sessions for an account.

        **Scopes**
        * `phone_sms:read:admin`
        * `phone_sms:master`

        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`
      summary: Get Account's SMS Sessions
      parameters:
        - in: query
          name: page_size
          type: integer
          default: 30
          description: The number of records returned within a single API call.
          maximum: 100
        - in: query
          name: next_page_token
          type: string
          description: The current page number of returned records.
        - in: query
          name: from
          type: string
          format: date
          description: Start date in yyyy-mm-dd format. The date range defined by the `from` and `to` parameters should only be one month as the report includes only one month's worth of data at once.
        - in: query
          name: to
          type: string
          format: date
          description: End date in yyyy-mm-dd format.
        - in: query
          name: phone_number
          type: string
          description: 'Either the sender’s or receiver’s phone number, to limit the list of SMS sessions.'
      x-private: true
  '/phone/sms/sessions/{sessionId}':
    get:
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              next_page_token:
                type: string
                description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of the available result list exceeds the page size.
              page_size:
                type: integer
                description: The size of the page.
              sms_histories:
                type: array
                items:
                  type: object
                  properties:
                    sender:
                      type: object
                      properties:
                        phone_number:
                          type: string
                          description: Sender's phone number.
                        display_name:
                          type: string
                          description: Sender's name.
                    to_members:
                      type: array
                      items:
                        type: object
                        properties:
                          phone_number:
                            type: string
                            description: Receiver's phone number.
                    message_id:
                      type: string
                      description: The message ID.
                    message_type:
                      type: integer
                      description: |-
                        The message type:<br>
                        1 - SMS<br>
                        2 - MMS<br>
                        3 - GROUP_SMS<br>
                        4 - GROUP_MMS<br>
                        5 - SMS_INTER<br>
                        6 - MSG_ON_NET
                      enum:
                        - 1
                        - 2
                        - 3
                        - 4
                        - 5
                        - 6
                    message:
                      type: string
                      description: The SMS text contents.
                    date_time:
                      type: string
                      description: The UTC time the message was created.
                      format: date
                    attachments:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            description: The media file ID.
                          size:
                            type: integer
                            description: The file size.
                          name:
                            type: string
                            description: The file name.
                          type:
                            type: string
                            description: 'The file type: OTHER, PNG, GIF, JPG, AUDIO, VIDEO'
                            enum:
                              - OTHER
                              - PNG
                              - GIF
                              - JPG
                              - AUDIO
                              - VIDEO
                          download_url:
                            type: string
                            description: The download link for the media file.
          examples:
            application/json:
              next_page_token: 123rty456uio
              page_size: 30
              sms_histories:
                - sender:
                    phone_number: '+1234567890'
                    display_name: name
                  to_members:
                    - phone_number: '+1115557890'
                  message_id: 334k4kds
                  message_type: 2
                  message: hello world
                  date_time: '2021-04-01T10:00:00Z'
                  attachments:
                    - id: ttllslww
                      size: 1254
                      name: file_name
                      type: GIF
                      download_url: 'https://www.example.com/file_name.gif'
        '401':
          description: |-
            **HTTP Status Code:** `401`<br>

            **Error Code:** `124`<br>
            Account does not exist: {accountId}.
        '404':
          description: |-
            **HTTP Status Code:** `404` <br>
            Not found

            **Error Code:** `1001`<br>
            Session does not exist: {sessionId}.

            **Error Code:** `7013`<br>
            Error retrieving SMS history.
      operationId: smsSessionDetails
      tags:
        - Phone
      description: |-
        Get details about an SMS session.

        **Scope**
        * `phone_sms:read`
        * `phone_sms:read:admin`
        * `phone_sms:master`

        **Prerequisites**
        * Paid account
        * User-enabled Zoom phone

        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`
      summary: Get SMS session details
      parameters:
        - in: path
          name: sessionId
          type: string
          required: true
          description: SMS session ID.
        - in: query
          name: page_size
          type: integer
          default: 30
          description: The number of records returned within a single API call.
          maximum: 100
        - in: query
          name: next_page_token
          type: string
          description: The current page number of returned records.
        - in: query
          name: from
          type: string
          format: date
          description: Start date in yyyy-mm-dd format. The date range defined by the `from` and `to` parameters should only be one month as the report includes only one month's worth of data at once.
        - in: query
          name: to
          type: string
          format: date
          description: End date in yyyy-mm-dd format.
      x-private: true
  '/phone/sms/sessions/{sessionId}/messages/{messageId}':
    get:
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              sender:
                type: object
                properties:
                  phone_number:
                    type: string
                    description: Sender's phone number.
                  display_name:
                    type: string
                    description: Sender's name.
              to_members:
                type: array
                items:
                  type: object
                  properties:
                    phone_number:
                      type: string
                      description: Receiver's phone number.
              message_id:
                type: string
                description: The message ID.
              message_type:
                type: integer
                description: |-
                  The message type:<br>
                  1 - SMS<br>
                  2 - MMS<br>
                  3 - GROUP_SMS<br>
                  4 - GROUP_MMS<br>
                  5 - SMS_INTER<br>
                  6 - MSG_ON_NET
                enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
              message:
                type: string
                description: The SMS text contents.
              date_time:
                type: string
                description: The UTC time the message was created.
                format: date
              attachments:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: The media file ID.
                    size:
                      type: integer
                      description: The file size.
                    name:
                      type: string
                      description: The file name.
                    type:
                      type: string
                      description: 'The file type: OTHER, PNG, GIF, JPG, AUDIO, VIDEO'
                      enum:
                        - OTHER
                        - PNG
                        - GIF
                        - JPG
                        - AUDIO
                        - VIDEO
                    download_url:
                      type: string
                      description: The download link for the media file.
          examples:
            application/json:
              sender:
                phone_number: '+1234567890'
                display_name: name
              to_members:
                - phone_number: '+1115557890'
              message_id: 334k4kds
              message_type: 2
              message: hello world
              date_time: '2021-04-01T10:00:00Z'
              attachments:
                - id: ttllslww
                  size: 1254
                  name: file_name
                  type: GIF
                  download_url: 'https://www.example.com/file_name.gif'
        '401':
          description: |-
            **HTTP Status Code:** `401`<br>

            **Error Code:** `124`<br>
            Account does not exist: {accountId}.
      operationId: smsByMessageId
      tags:
        - Phone
      description: |-
        Get details about a specific message in an SMS session.

        **Scope**
        * `phone_sms:read`
        * `phone_sms:read:admin`
        * `phone_sms:master`

        **Prerequisites**
        * Paid account
        * User-enabled Zoom phone

        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`
      summary: Get SMS by message ID
      parameters:
        - in: path
          name: sessionId
          type: string
          required: true
          description: The SMS session ID.
        - in: path
          name: messageId
          type: string
          required: true
          description: The SMS message ID.
      x-private: true
  /metrics/quality:
    get:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties: {}
      summary: Get meeting quality score
      description: Get the quality scores of a meeting.
      operationId: meetingQualityScore
      tags:
        - Meetings
      x-private: true
  '/meetings/{meetingId}/batch_polls':
    post:
      responses:
        '201':
          description: |-
            **HTTP Status Code:** `201` <br>
            Meeting Poll Created
          schema:
            type: object
            properties:
              polls:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Meeting Poll ID
                    title:
                      type: string
                      description: Title for the Poll
                    status:
                      type: string
                      description: 'Status of the Meeting Poll:<br>`notstart` - Poll not started<br>`started` - Poll started<br>`ended` - Poll ended<br>`sharing` - Sharing poll results'
                      enum:
                        - notstart
                        - started
                        - ended
                        - sharing
                      x-enum-descriptions:
                        - Poll not start
                        - Poll started
                        - Poll ended
                        - Poll is sharing
                    questions:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                            description: Name of question.
                          type:
                            type: string
                            enum:
                              - single
                              - multiple
                            description: Poll question and answer type.
                          answers:
                            type: array
                            items:
                              type: string
                            description: Answers to questons
          examples:
            application/json:
              polls:
                - id: ex eiusmod
                  title: in dolore culpa ad qui
                  status: Excepteur Lorem dolor exercitation
                  questions:
                    - name: in mollit cillum adipisicing ullamco
                      type: consectetur magna et
                      answers:
                        - est officia
                        - dolor amet consectetur ad
                        - irure consectetur enim commodo
                    - name: non proident dolor eiusmod consectetur
                      type: 'et deserunt nisi '
                      answers:
                        - ut ut
                        - non pariatur dolore eiusmod consectetur
                        - pariatur deserunt in dolore et
                        - deserunt exercitation incididunt nostrud dolore
                        - dolor sit in laboris eiusmod
                    - name: minim
                      type: velit labore
                      answers:
                        - dolor mollit
                        - dolore Lorem voluptate
                - id: mollit do
                  title: est incididunt in dolore tempor
                  status: deserunt id occaecat nisi qui
                  questions:
                    - name: exercitation consectetur officia do
                      type: id ex consequat culpa
                      answers:
                        - 'culpa '
                        - aliquip dolore
                    - name: proident ad
                      type: Lorem nostrud nulla
                      answers:
                        - ullamco consequat ut id esse
                        - veniam eiusmod anim laborum
                    - name: sint cillum ut
                      type: in enim
                      answers:
                        - nostrud voluptate eu velit
                        - non labore dolor ad eiusmod
                        - vo
                    - name: eu ullamco
                      type: anim dolor sunt
                      answers:
                        - sunt voluptate
                        - reprehenderit ea
                        - sunt aute
                        - elit
                    - name: sit enim consequat cupidatat
                      type: cillum adipisicing
                      answers:
                        - nulla Duis
                - id: 'qui '
                  title: ullamco dolore
                  status: ut Ut esse
                  questions:
                    - name: ullamco et pariatur
                      type: proident
                      answers:
                        - laboris laborum
                        - nostrud sit dolore veniam
                        - sunt commodo amet dolor ex
                    - name: adipisicing dolor culpa commodo
                      type: aliquip veniam
                      answers:
                        - anim magna ut Lorem
                    - name: laborum nisi
                      type: in Duis qui Excepteur aute
                      answers:
                        - 'sunt dolor Excepteur amet '
                        - qui pariatur esse id fugiat
                        - aliquip
        '400':
          description: |-
            **HTTP Status Code:** `404` **Not Found** <br>
            **Error Code:** `300` <br>
            Invalid Meeting ID.
            **Error Code:** `300` <br>
            Meeting id does not exist.
            **Error Code:** `3000` <br>
            Cannot access meeting information.
            **Error Code:** `3001`<br>
            Meeting does not exist: {meetingId}.<br>
            **Error Code:** `4400`<br>
            Polling has not been enabled for this meeting: {meetingId}.
            **Error Code:** `4400`<br>
            You can add a maximum of 25 polls.
      summary: Perform batch poll creation
      description: |-
        Polls allow the meeting host to survey attendees. Use this API to create batch [polls](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings) for a meeting.<br><br>

        **Scopes**: `meeting:write:admin` `meeting:write`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>
        **Prerequisites**:<br>
        * Host user type must be **Pro** or higher plan.
        * Polling feature must be enabled in the host's account.
        * Meeting must be a scheduled meeting. Instant meetings do not have polling features enabled.
      operationId: createBatchPolls
      tags:
        - Meetings
      parameters:
        - in: path
          name: meetingId
          type: string
          required: true
    parameters:
      - name: meetingId
        in: path
        type: string
        required: true
      - in: body
        name: body
        schema:
          type: object
          properties:
            title:
              type: string
              description: Meeting Poll Title.
            questions:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    description: Name of the question.
                  type:
                    type: string
                    description: 'Question type:<br>`single` - Single choice<br>`mutliple` - Multiple choice'
                    enum:
                      - single
                      - multiple
                  answers:
                    type: array
                    description: Possible answers for the question.
                    items:
                      type: string
        x-examples:
          application/json:
            polls:
              - title: Meeting Usefulness
                questions:
                  - name: Question Name
                    type: multiple
                    answers:
                      - answer 1
                      - answer 2
                  - name: Question Name 2
                    type: single
                    answers:
                      - answer 1
                      - answer 2
        description: Batch Meeting poll object
  /rooms/events:
    patch:
      responses:
        '202':
          description: '**HTTP Status Code:** `202` <br>'
          schema:
            type: object
            properties:
              event_id:
                type: string
                description: |-
                  Unique identifier of the event related to the content being displayed. This field is only returned if you provided `zoomroom.emergency_alert_displayed` as the value of the `method` parameter.

                  Save this response value and provide it as the value of the `event_id` request parameter when you need to remove the alert content using `zoomroom.emergency_alert_removed` method.
          examples:
            application/json:
              event_id: 6354hgfsdj34
        '400':
          description: |-
            **HTTP Status Code:** `400` <br>

            **Error Code:** `200` <br> Access restricted. <br><br>
            **Error Code:** `300`
            Event id is required.<br>
            Invalid value submitted for Target Ids. Provide a valid Target Id associated with the Target type.
      summary: Update E911 digital signage
      description: |
        Display or hide E911 emergency alert text content from [Zoom Rooms digital signage](https://support.zoom.us/hc/en-us/articles/360000030683-Zoom-Rooms-digital-signage).

        **Scope:** `room:write:admin`

        **Prerequisites:**<br>
        * [Zoom Rooms](https://zoom.us/zoomrooms/software) 5.3.0 or higher
        * Zoom Rooms digital signage must be [enabled](https://support.zoom.us/hc/en-us/articles/360000030683-Zoom-Rooms-Digital-Signage#h_767fbb33-82a8-45a8-8392-a1bfa9687edd)
      operationId: manageE911signage
      tags:
        - Rooms
      parameters:
        - in: body
          name: body
          schema:
            oneOf:
              - description: 'Provide this request body to set and display the emergency alert content. '
                properties:
                  method:
                    type: string
                    description: 'To display the emergency content on the Zoom Rooms digital signage display, set the value of this field to be `zoomroom.emergency_alert_displayed`.'
                    enum:
                      - zoomroom.emergency_alert_displayed
                  params:
                    type: object
                    properties:
                      content:
                        type: string
                        description: 'Provide the content to be displayed. '
                      target_ids:
                        type: array
                        minItems: 1
                        maxItems: 10
                        description: |-
                          Provide one of the following IDs associated with the Zoom Room.<br>

                          * `accountId`: Account ID of the Zoom account.<br> Provide account ID as the value of this field to display the alert content on all Zoom Rooms' displays in the account.<br><br>
                          * `locationId`: Location ID. Get the value of this field by calling [List Zoom Rooms Locations API](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations).<br>Provide location ID as the value of this field to display the alert content on all Zoom Rooms' displays listed in the specified location.<br><br>
                          * `roomId`: Unique identifier of the Zoom Room. Get the value of this field by calling [List Zoom Rooms API](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms/listzoomrooms). Provide room ID as the value of this field to display the alert content on a specific Zoom Rooms' display.
                        items:
                          type: string
                      target_type:
                        type: string
                        description: |-
                          Provide one of the following values for this field that is associated to the value you entered in the `target_ids` field. <br>
                          * `account`
                          * `location`
                          * `room`
                        enum:
                          - account
                          - location
                          - room
              - description: Provide this request body to remove the emergency alert content. Note that there won't be a response body for this request.
                properties:
                  method:
                    type: string
                    description: 'To remove the emergency content from the Zoom Rooms digital signage display, set the value of this field to be `zoomroom.emergency_alert_removed`.'
                    enum:
                      - zoomroom.emergency_alert_removed
                  params:
                    type: object
                    properties:
                      event_id:
                        type: string
                        description: 'Unique identifier of the event. '
                      target_ids:
                        type: array
                        minItems: 1
                        maxItems: 10
                        description: |-
                          Provide one of the following IDs associated with the Zoom Room.<br>

                          * `accountId`: Account ID of the Zoom account.<br> Provide account ID as the value of this field to remove the alert content from all Zoom Rooms' displays in the account.<br><br>
                          * `locationId`: Location ID. Get the value of this field by calling [List Zoom Rooms Locations API](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations).<br>Provide location ID as the value of this field to remove the alert content from all Zoom Rooms' displays listed in the specified location.<br><br>
                          * `roomId`: Unique identifier of the Zoom Room. Get the value of this field by calling [List Zoom Rooms API](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms/listzoomrooms). Provide room ID as the value of this field to remove the alert content from a specific Zoom Rooms' display.
                        items:
                          type: string
                      target_type:
                        type: string
                        description: |-
                          Provide one of the following values for this field that is associated to the value you entered in the `target_ids` field. <br>
                          * `account`
                          * `location`
                          * `room`
                        enum:
                          - account
                          - location
                          - room
            type: object
          x-examples:
            application/json:
              method: zoomroom.emergency_alert_displayed
              params:
                content: This is an example.
                target_ids:
                  - dhhjdshgf237y7
                  - dnfv345556
                target_type: location
  /phone/reports/operationlogs:
    get:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Report returned.
          schema:
            allOf:
              - $ref: '#/definitions/PaginationToken4IMChat'
              - type: object
                properties:
                  operation_logs:
                    type: array
                    description: Array of operation log objects
                    items:
                      type: object
                      properties:
                        time:
                          type: string
                          format: date-time
                          description: The time at which the operation was performed.
                        operator:
                          type: string
                          description: The user who performed the operation.
                        category_type:
                          type: string
                          description: Category type of the operation.
                        action:
                          type: string
                          description: Action that was performed.
                        operation_detail:
                          type: string
                          description: Operation detail.
          examples:
            application/json:
              next_page_token: abcD3944YsoYPB12
              page_size: 15
              total_records: 16
              from: '2020-08-01'
              to: '2020-08-30'
              operation_logs:
                - time: '2020-08-24T06:15:12Z'
                  operator: apbchd@mail123a.com
                  category_type: Phone Number
                  action: UPDATE
                  operation_detail: Unbind Phone Number +1112222 From Not_Delete_CallQueue_Recording
                - time: '2020-08-24T06:13:30Z'
                  operator: apbchd@mail123a.com
                  category_type: Phone Number
                  action: DELETE
                  operation_detail: Delete Phone Number +123456 From abc.zoom.us
                - time: '2020-08-11T03:13:17Z'
                  operator: apbcdef@mail123a.com
                  category_type: Device
                  action: ADD
                  operation_detail: Add Device testDevice
                - time: '2020-08-06T08:29:45Z'
                  operator: apapbchd@mail123a.com
                  category_type: Phone Number
                  action: UPDATE
                  operation_detail: Assign Phone Number +120000123 to Sam Mendes(abcdaccount@someaccount.com)
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            **Error Code**: `124`<br> Account does not exist: {accountId}.
      summary: Get operation logs report
      description: |+
        The **Phone System operation logs report** allows account owners and admins to view monthly Zoom phone related admin operation details.

        Use this API to retrieve the **Phone System Operation Logs Report**. Account owners and admins can also access this information by logging into their Zoom accounts and navigating to [Phone System Operation Logs](https://zoom.us/pbx/page/report/operations#/report/operation-logs).<br><br> **Scopes:** `phone:read:admin`, `phone:write:admin` <br> **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>
        <br> **Prerequisites:** <br>
        * Account must be enrollled in Pro or a higher plan
        * Account must be enrolled in a [Zoom Phone](https://zoom.us/pricing/zoom-phone) plan

      operationId: getPSOperationLogs
      tags:
        - Phone Reports
      parameters:
        - in: query
          name: from
          type: string
          description: Start date in 'yyyy-mm-dd' format. The date range defined by the "from" and "to" parameters should only be one month as the report provides only one month worth of data per API request.
        - in: query
          name: to
          type: string
          description: End date in 'yyyy-mm-dd' format.
        - in: query
          name: category_type
          type: string
          description: 'Filter the response by the category of the action performed. By default, the value of this field is "all" and thus, the response will include log of all operations for the defined period.<br><br>To only include response for a specific category type, provide a value for `category_type` from this [table](http://marketplace.zoom.us/docs/phone-operation-categories ).'
          default: all
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/NextPageToken'
  '/accounts/{accountId}/billing/invoices':
    get:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Account billing invoice information returned.
          schema:
            type: object
            properties:
              invoices:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Unique identifier of the invoice.
                    invoice_number:
                      type: string
                      description: Invoice number.
                    total_amount:
                      type: number
                      format: double
                      description: Total invoice amount.
                    tax_amount:
                      type: number
                      format: double
                      description: Tax amount.
                    balance:
                      type: number
                      format: double
                      description: |+
                        The remaining balance of the invoice after all payments, adjustments, and refunds are applied.

                    due_date:
                      type: string
                      description: |+
                        The date by which the payment for this invoice is due.

                    invoice_date:
                      type: string
                      description: |
                        The date when the invoice was generated.
                    target_date:
                      type: string
                      description: |
                        This date is used to determine which charges are to be billed. All charges that are to be billed on this date or prior will be included in the invoice.
                    status:
                      type: string
                      description: Status of the invoice.
                      default: '"Draft"'
              currency:
                type: string
                description: Currency used in the invoice.
          examples:
            application/json:
              invoices:
                - id: 2c92c12348d07e0580
                  invoice_number: S8INsdf4534000001
                  total_amount: 2039
                  tax_amount: 0
                  balance: 2039
                  due_date: '2020-08-07'
                  invoice_date: '2020-08-07'
                  target_date: '2020-08-07'
                  status: Draft
              currency: USD
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>
            **Error Code:** `200`<br>
            Only available for Paid account: {subAccountId}.
            **Error Code:** `2001`<br>
            Account does not exist: {subAccountId}.
      summary: List billing invoices
      description: |-
        List [invoices](https://support.zoom.us/hc/en-us/articles/207276556-Viewing-your-invoice-history#h_6710542f-23cc-4059-9cc7-ff02bec7314e) of a Zoom account.

        To list a regular Zoom account's invoices or a master account's invoices, provide `me` as the value of the `accountId` path parameter. To list a sub account's invoices, provide the account ID of the sub account in the `accountId` path parameter.

        **Prerequisites:**
        * Account must be enrolled in Pro or a higher plan.<br>

        **Scope**:`billing:master`<br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>
        **Additional Rate Limit:** You can make **one** API request per account(`accountId`) every **five** minutes until the daily limit is reached. This API has a daily limit of **6** requests per account(`accountId`).
      tags:
        - Billing
      operationId: accountBillingInvoices
      parameters:
        - in: query
          name: from
          type: string
          format: date
          description: |
            Start date for the invoice query in `yyyy-mm-dd` format. The date range defined by the “from” and “to” parameters should not exceed one year. The range defined should fall within the past three years.
        - in: query
          name: to
          type: string
          format: date
          description: End date for the invoice query in `yyyy-mm-dd` format
    parameters:
      - name: accountId
        in: path
        type: string
        required: true
        description: The account ID.
  '/accounts/{accountId}/billing/invoices/{invoiceId}':
    get:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Account billing invoice information returned.
          schema:
            type: object
            properties:
              id:
                type: string
                description: Unique identifier of the invoice.
              invoice_number:
                type: string
                description: Invoice number.
              total_amount:
                type: number
                format: double
                description: Total invoice amount.
              tax_amount:
                type: number
                format: double
                description: Tax amount.
              balance:
                type: number
                format: double
                description: |+
                  The remaining balance of the invoice after all payments, adjustments, and refunds are applied.

              due_date:
                type: string
                description: |+
                  The date by which the payment for this invoice is due.

              invoice_date:
                type: string
                description: |
                  The date when the invoice was generated.
              target_date:
                type: string
                description: |
                  This date is used to determine which charges are to be billed. All charges that are to be billed on this date or prior will be included in the invoice.
              status:
                type: string
                description: Status of the invoice.
                default: '"Draft"'
              invoice_items:
                type: array
                items:
                  type: object
                  properties:
                    charge_name:
                      type: string
                      description: Description for the charge.
                    charge_type:
                      type: string
                      description: Charge type.
                    charge_number:
                      type: string
                      description: Identifier for the charge.
                    total_amount:
                      type: number
                      format: double
                      description: Total amount.
                    tax_amount:
                      type: number
                      format: double
                      description: Tax amount.
                    quantity:
                      type: integer
                      description: Quantity.
                    start_date:
                      type: string
                      description: Billing start date.
                      format: date
                    end_date:
                      type: string
                      description: Billing end date.
                      format: date
              currency:
                type: string
                description: Billing currency.
          examples:
            application/json:
              id: 2c92fghvb0580
              invoice_number: Shjmr5INV00000001
              total_amount: 2039
              tax_amount: 0
              balance: 2039
              due_date: '2020-08-07'
              invoice_date: '2020-08-07'
              target_date: '2020-08-07'
              status: Draft
              invoice_items:
                - charge_name: Standard Biz Annual
                  charge_type: Recurring
                  charge_number: C-00000004
                  total_amount: 1999
                  tax_amount: 0
                  quantity: 10
                  start_date: '2020-08-07'
                  end_date: '2021-08-06'
                - charge_name: Cloud Recording 100 GB
                  charge_type: Recurring
                  charge_number: C-00000005
                  total_amount: 40
                  tax_amount: 0
                  quantity: 1
                  start_date: '2020-08-07'
                  end_date: '2020-09-06'
              currency: USD
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>
            **Error Code:** `2001`<br>
            Account does not exist: {subAccountId}.<br>
            InvoiceId does not exist: {invoiceId}.
      summary: Get invoice details
      description: |-
        Get detailed information about a specific [invoice](https://support.zoom.us/hc/en-us/articles/207276556-Viewing-your-invoice-history#h_6710542f-23cc-4059-9cc7-ff02bec7314e). <br>To retrieve a regular Zoom account's invoice details or a master account's invoice details, provide `me` as the value of `accountId` path parameter. To list a sub account's invoice details, provide the account ID of the sub account in the `accountId` path parameter.

        **Prerequisites:**
        * Account must be enrolled in Pro or a higher plan. <br>

        **Scope**:`billing:master`<br>
        <br>**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>
        **Additional Rate Limit:** You can make **one** API request every **thirty** minutes until the daily limit is reached. This API has a daily limit of **100** requests per **account**.
      operationId: getAccountBillingInvoice
      tags:
        - Billing
    parameters:
      - name: accountId
        in: path
        type: string
        required: true
        description: The account ID.
      - name: invoiceId
        in: path
        type: string
        required: true
        description: The invoice ID.
  '/api/download/billing/invoices/{invoiceId}':
    get:
      responses:
        '200':
          description: |-
            **HTTP Status Code:** `200`<br>
            Account billing invoice PDF returned.
          schema: {}
        '400':
          description: |-
            **HTTP Status Code:** `400`<br>
            **Error Code:** `2001`<br>
            Account does not exist: {subAccountId}.<br>
      summary: Download an invoice file
      description: |-
        Download a [billed](https://support.zoom.us/hc/en-us/articles/201363263-About-Billing) invoice file of a Zoom account in PDF format. To download a regular account's invoice or a  master account's invoice, provide `me` as the value of `accountId` path parameter. To download a sub account's invoice, provide the account ID of the sub account in the `accountId` path parameter.


        **Prerequisites:**
        * Account must be enrolled in Pro or a higher plan.<br>

        **Scope**:`billing:master`<br>
        **Rate Limit:** You can make **one** request to this API every **thirty** minutes until the daily limit is reached. This API has a daily limit of **100** requests per **account**.
      operationId: downloadInvoicePDF
      tags:
        - Billing
    parameters:
      - name: invoiceId
        in: path
        type: string
        required: true
  '/metrics/meetings/{meetingId}/participants/satisfaction':
    get:
      responses:
        '200':
          description: |+
            **HTTP Status Code:** `200`<br>

          schema:
            type: object
            properties:
              page_size:
                type: integer
                description: The number of records returned within a single API call.
              next_page_token:
                type: string
                description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
              participants:
                type: array
                items:
                  type: object
                  properties:
                    user_id:
                      type: string
                      description: User ID of the participant.
                    email:
                      type: string
                      description: Email address of the participant.
                      format: email
                    quality:
                      type: string
                      description: |-
                        Feedback submitted by the participant.

                        * `GOOD`: Thumbs up.
                        * `NOT GOOD`: Thumbs down.
                      enum:
                        - GOOD
                        - NOT GOOD
                    date_time:
                      type: string
                      description: Date and time at which the feedback was submitted.
                      format: date-time
          examples:
            application/json:
              page_size: 1
              next_page_token: ''
              participants:
                - user_id: aegr46312rum
                  email: RB6iBb@aWlMmuZFPVjptyOCzNgpi.mx
                  quality: GOOD
                  date_time: '2021-02-21T18:48:06.423Z'
        '400':
          description: |
            **HTTP Status Code:** `400`<br>
            **Error Code:** `200`<br>
            Only available for paid accounts that have dashboard feature enabled.
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            **Error Code:** `3001`<br>
            Meeting ID is invalid or not end.
      summary: Get post meeting feedback
      description: |-
        When a meeting ends, each attendee will be prompted to share their meeting experience by clicking either thumbs up or thumbs down. Use this API to retrieve the feedback submitted for a specific meeting. Note that this API only works for meetings scheduled after December 20, 2020.

        **Prerequisites:**
        * [Feedback to Zoom](https://support.zoom.us/hc/en-us/articles/115005838023) setting must be enabled by the participant prior to the meeting.
        * The user making the API request must be enrolled in a Business or a higher plan.

        <br> **Scope:** `dashboard_meetings:read:admiin`

        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>
      operationId: participantFeedback
      tags:
        - Dashboards
      parameters:
        - $ref: '#/parameters/MeetingId4Metrics'
        - $ref: '#/parameters/MeetingTypePast'
        - $ref: '#/parameters/NextPageToken'
        - $ref: '#/parameters/PageSize'
    parameters:
      - name: meetingId
        in: path
        type: string
        required: true
  '/metrics/webinars/{webinarId}/participants/satisfaction':
    get:
      responses:
        '200':
          description: |+
            **HTTP Status Code:** `200`<br>

          schema:
            type: object
            properties:
              page_size:
                type: integer
                description: The number of records returned within a single API call.
              next_page_token:
                type: string
                description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
              participants:
                type: array
                items:
                  type: object
                  properties:
                    user_id:
                      type: string
                      description: User ID of the participant.
                    email:
                      type: string
                      description: Email address of the participant.
                      format: email
                    quality:
                      type: string
                      description: |-
                        Feedback submitted by the participant.

                        * `GOOD`: Thumbs up.
                        * `NOT GOOD`: Thumbs down.
                      enum:
                        - GOOD
                        - NOT GOOD
                    date_time:
                      type: string
                      description: Date and time at which the feedback was submitted.
                      format: date-time
          examples:
            application/json:
              page_size: 1
              next_page_token: ''
              participants:
                - user_id: aegr46312rum
                  email: RB6iBb@aWlMmuZFPVjptyOCzNgpi.mx
                  quality: GOOD
                  date_time: '2021-02-21T18:48:06.423Z'
        '400':
          description: |
            **HTTP Status Code:** `400`<br>
            **Error Code:** `200`<br>
            Only available for paid accounts that have dashboard feature enabled.
        '404':
          description: |-
            **HTTP Status Code:** `404`<br>
            **Error Code:** `3001`<br>
            Webinar ID is invalid or not end.
      summary: Get post webinar feedback
      description: |-
        When a Webinar ends, each attendee will be prompted to share their Webinar experience by clicking either thumbs up or thumbs down. Use this API to retrieve the feedback submitted for a specific webinar. Note that this API only works for meetings scheduled after December 20, 2020.

        **Prerequisites:**
        * [Feedback to Zoom](https://support.zoom.us/hc/en-us/articles/115005838023) setting must be enabled by the participant prior to the meeting.
        * The user making the API request must be enrolled in a Business or a higher plan.


        <br> **Scope:** `dashboard_webinars:read:admin`

        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>
      operationId: participantWebinarFeedback
      tags:
        - Dashboards
      parameters:
        - $ref: '#/parameters/MeetingTypePast'
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/NextPageToken'
        - $ref: '#/parameters/WebinarId4Metrics'
  '/phone/call_logs/{callLogId}':
    get:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties: {}
      summary: Get call log details
      description: |-
        Get detailed information associated with a [call log](https://support.zoom.us/hc/en-us/articles/360021114452-Viewing-and-identifying-logs).

        **Scopes:** `phone:read`, `phone:read:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`<br>
        **Prerequisite:**
        1. Business or Enterprise account
        2. A Zoom Phone license
      operationId: getCallLogDetails
      tags:
        - Phone
      parameters:
        - in: path
          name: callLogId
          type: string
          required: true
          description: 'Unique identifier of the call log. The value for this field can be retrieved from [account''s call logs](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone/accountcalllogs) or [user''s call logs](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone/phoneusercalllogs).'
      x-private: true
    parameters:
      - name: callLogId
        in: path
        type: string
        required: true
  '/phone/users/{userId}/call_logs/{callLogId}':
    delete:
      responses:
        '204':
          description: |
            **HTTP Status Code**: `204` <br>
            Log deleted.
          schema: {}
        '401':
          description: |-
            **HTTP Status Code**: `404` <br>
            **Error Code**: `124` <br>
            Account does not exist: {accountId}.
        '404':
          description: |+
            **HTTP Status Code**: `404` <br>
            Call log information was not found for the following callLogId: {callLogId}.


      summary: Delete a user's call log
      description: |-
        Delete a user's [call log](https://support.zoom.us/hc/en-us/articles/360021114452-Viewing-and-identifying-logs).

        **Scopes:** `phone:write`, `phone:write:admin`<br>
         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>

        **Prerequisites:**
        1. User must belong to a Business or an Enterprise account.
        2. User must hold a Zoom Phone license.
      operationId: deleteCallLog
      tags:
        - Phone
      parameters:
        - in: path
          name: userId
          type: string
          required: true
          description: The user ID or email address of the user.
        - in: path
          name: callLogId
          type: string
          required: true
          description: 'Unique identifier of the call log. The value for this field can be retrieved from [account''s call logs](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone/accountcalllogs) or [user''s call logs](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone/phoneusercalllogs).'
    parameters:
      - name: userId
        in: path
        type: string
        required: true
      - name: callLogId
        in: path
        type: string
        required: true
  /phone/byoc_numbers:
    post:
      responses:
        '201':
          description: '**HTTP Status Code:** `201` **Created**'
          schema:
            type: object
            properties:
              phone_numbers:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Unique identifier of the phone number.
                    number:
                      type: string
                      description: Phone number in e164 format.
          examples:
            application/json:
              phone_numbers:
                - id: incididunt
                  number: '+123456789'
        '300':
          description: |+
            **HTTP Status Code:** `300`

            Validation failed. Adding batch phone numbers are limited to 50 per request.

        '400':
          description: |-
            **HTTP Status Code:** `400` **Bad request**

            BYOC phone numbers are not enabled for this account.
        '401':
          description: |-
            **HTTP Status Code:** `401` **Unauthorized**

            **Error Code:** `124` Account does not exist: {accountId}.
        '404':
          description: |-
            **HTTP Status Code:** `404` **Not Found**

            The following account carrier does not exist: {0}.
        '429':
          description: |-
            **HTTP Status Code:** `429` **Too Many Requests**

             You have reached the maximum number of concurrent requests for this account’s BYOC phone numbers.
      summary: Add BYOC phone numbers
      description: |+
        Use this API to add BYOC phone numbers(provided to you by your carrier) to Zoom.

        **Scope:** `phone:write:admin` or `phone:write` or `phone:master`

        **Prerequisites:**<br>
        * The account must hold a business or enterprise plan and Zoom Phone license.

        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>


      operationId: addBYOCNumber
      tags:
        - Phone
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              carrier:
                type: string
                description: Name of the carrier.
              phone_numbers:
                type: array
                description: Phone number(s) to be added to Zoom. The value should be in e164 format.
                items:
                  type: string
              site_id:
                type: string
                description: 'Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites). This field is only required if you have enabled multiple sites in the account.'
            required:
              - carrier
              - phone_numbers
          x-examples:
            application/json:
              carrier: Lorem qui voluptate Ut
              phone_numbers:
                - '+123456789'
              site_id: dfmb3yor7w4yu
  '/phone/voice_mails/{voicemailId}':
    delete:
      responses:
        '204':
          description: |-
            **HTTP Status Code:** `204` **No Content**

            Voicemail deleted.
          schema: {}
        '401':
          description: |+
            **HTTP Status Code:** `401` **Unauthorized**<br>
            **Error Code:** `124`<br>
            Account does not exist: {accountId}.


        '404':
          description: |+
            **HTTP Status Code:** `404` **Not Found**

            Voice mail does not exist: {voicemailId}.

      summary: Delete a voicemail
      description: |+
        Delete a [voicemail message](https://support.zoom.us/hc/en-us/articles/360021400211-Managing-voicemail-messages) from a Zoom account.

        **Scope:** `phone:write:admin` or `phone:write`


        **Prerequisite**:
        * The account must have activted Zoom Phone license.

        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>


      operationId: deleteVoicemail
      tags:
        - Phone
      parameters:
        - in: path
          name: voicemailId
          type: string
          required: true
          description: 'Unique identifier of the voicemail. Retrieve the value for this field by calling the [Get voicemails](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone/phoneuservoicemails) API.'
    parameters:
      - name: voicemailId
        in: path
        type: string
        required: true
  '/accounts/{accountId}/settings/virtual_backgrounds':
    post:
      responses:
        '201':
          description: |
            **HTTP Status Code:** `201` **Created** <br>
          schema:
            type: object
            properties:
              id:
                type: string
                description: Unique identifier of the file.
              name:
                type: string
                description: File name.
              type:
                type: string
                description: File type.
              is_default:
                type: boolean
                description: Indicates whether or not this file is the default virtual background file.
              size:
                type: string
                description: File size.
          examples:
            application/json:
              id: _Tcj7354w6eHw
              name: u=mdbhhfg3y7&fm=2fdjs0.jpg
              type: image
              is_default: false
              size: 53434
        '400':
          description: |+
            **HTTP Status Code:** `400` **Bad Request** <br>
            **Error Code:** `120`<br>
            No file uploaded, verify that a file has been uploaded.<br>
            File size cannot exceed 15M.<br>
            A maximum of 10 files are allowed for a user.<br>
            Only jpg/jpeg, gif or png image file can be uploaded.

        '404':
          description: |-
            **HTTP Status Code:** `404` **Not Found** <br>
            **Error Code:** `2001`<br>
            This account does not exist or does not belong to you: {accountId}.
      summary: Upload virtual background files
      description: |+
        Use this API to [upload virtual background files](https://support.zoom.us/hc/en-us/articles/210707503-Virtual-Background#h_01EJF3YFEWGT8YA0ZJ079JEDQE) for all users on the account to use.


        **Prerequisites:**<br>
        * Virtual background feature must be [enabled](https://support.zoom.us/hc/en-us/articles/210707503-Virtual-Background#h_2ef28080-fce9-4ac2-b567-dc958afab1b7) on the account.
        <br> **Scope:** `account:write:admin`<br><br>
        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>

      operationId: uploadVB
      tags:
        - Accounts
      parameters:
        - in: path
          name: accountId
          type: string
          required: true
          description: Unique identifier of the account.
        - in: formData
          name: file
          type: string
          description: Provide the file's path here.
      consumes:
        - multipart/form-data
    parameters:
      - name: accountId
        in: path
        type: string
        required: true
    delete:
      responses:
        '204':
          description: |
            **HTTP Status Code:** `204` **No Content** <br>
            Deleted.
        '400':
          description: |-
            **HTTP Status Code:** `400` **Bad request** <br>
            **Error Code:** `300`<br>
            Invalid parameter: file_ids.
        '404':
          description: |-
            **HTTP Status Code:** `404` **Not Found** <br>
            **Error Code:** `2001`<br>
            This account does not exist or does not belong to you: {accountId}.
      summary: Delete virtual background files
      description: |+
        Delete existing virtual background file(s) from an account.

        **Prerequisites:**<br>
        * Virtual background feature must be [enabled](https://support.zoom.us/hc/en-us/articles/210707503-Virtual-Background#h_2ef28080-fce9-4ac2-b567-dc958afab1b7) on the account.
        <br> **Scope:** `account:write:admin`<br> <br>
        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>

      operationId: delVB
      tags:
        - Accounts
      parameters:
        - in: query
          name: file_ids
          type: string
          description: 'Provide the id of the file that is to be deleted. To delete multiple files, provide comma separated values for this field.'
  '/groups/{groupId}/settings/virtual_backgrounds':
    delete:
      responses:
        '204':
          description: |
            **HTTP Status Code:** `204` **No Content** <br>
            Deleted.
        '400':
          description: |
            **HTTP Status Code:** `400` **Bad request** <br>
            **Error Code:** `300`<br>
            Invalid parameter: file_ids. <br>
            Group member not found.
        '404':
          description: |-
            **HTTP Status Code:** `404` **Not Found** <br>
            **Error Code:** `4130`<br>
            A group with this {groupId} does not exist.
      summary: Delete virtual background files
      description: |+
        Delete existing virtual background file(s) from an account.

        **Prerequisites:**<br>
        * Virtual background feature must be [enabled](https://support.zoom.us/hc/en-us/articles/210707503-Virtual-Background#h_2ef28080-fce9-4ac2-b567-dc958afab1b7) on the account.
        <br> **Scope:** `group:write:admin`<br><br>
        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>

      operationId: delGroupVB
      tags:
        - Groups
      parameters:
        - in: path
          name: groupId
          type: string
          required: true
          description: 'Unique identifier of the group. Retrieve the value for this field by calling the [List groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups) API.'
        - in: query
          name: file_ids
          type: string
          description: 'Provide the id of the file that is to be deleted. To delete multiple files, provide comma separated values for this field.'
    parameters:
      - in: query
        name: file_ids
        type: string
        description: 'Provide the id of the file that is to be deleted. To delete multiple files, provide comma separated values for this field.'
      - name: groupId
        in: path
        type: string
        required: true
    post:
      responses:
        '201':
          description: |
            **HTTP Status Code:** `201` **Created** <br>
          schema:
            type: object
            properties:
              id:
                type: string
                description: Unique identifier of the file.
              name:
                type: string
                description: File name.
              type:
                type: string
                description: File type.
              is_default:
                type: boolean
                description: Indicate whether or not this file is the default virtual background file.
              size:
                type: string
                description: File size.
          examples:
            application/json:
              id: _Tcj7354w6eHw
              name: u=mdbhhfg3y7&fm=2fdjs0.jpg
              type: image
              is_default: false
              size: 53434
        '400':
          description: |+
            **HTTP Status Code:** `400` **Bad Request** <br>
            **Error Code:** `120`<br>
            No file uploaded, verify that a file has been uploaded.<br>
            File size cannot exceed 15M.<br>
            A maximum of 10 files are allowed for a user.<br>
            Only jpg/jpeg or png image file can be uploaded.

        '404':
          description: |-
            **HTTP Status Code:** `404` **Not Found** <br>
            **Error Code:** `1001`<br>
            User not exist.<br>
            User {email} not exist or not belong to this account.
      summary: Upload virtual background files
      description: |-
        Use this API to [upload virtual background files](https://support.zoom.us/hc/en-us/articles/210707503-Virtual-Background#h_01EJF3YFEWGT8YA0ZJ079JEDQE) for all users in a group to use.


        **Prerequisites:**<br>
        * Virtual background feature must be [enabled](https://support.zoom.us/hc/en-us/articles/210707503-Virtual-Background#h_2ef28080-fce9-4ac2-b567-dc958afab1b7) on the account.
        <br> **Scope:** `group:write:admin`<br><br>
        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>


        `
      operationId: uploadGroupVB
      tags:
        - Groups
      parameters:
        - in: path
          name: groupId
          type: string
          required: true
          description: 'Unique identifier of the group. Retrieve the value for this field by calling the [List groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups) API.'
        - in: formData
          name: file
          type: string
          description: Provide the file's path here.
      consumes:
        - multipart/form-data
  '/users/{userId}/settings/virtual_backgrounds':
    post:
      responses:
        '201':
          description: |
            **HTTP Status Code:** `201` **Created** <br>
          schema:
            type: object
            properties:
              id:
                type: string
                description: Unique identifier of the file.
              name:
                type: string
                description: File name.
              type:
                type: string
                description: File type.
              is_default:
                type: boolean
                description: Indicate whether or not this file is the default virtual background file.
              size:
                type: string
                description: File size.
          examples:
            application/json:
              id: _Tcj7354w6eHw
              name: u=mdbhhfg3y7&fm=2fdjs0.jpg
              type: image
              is_default: false
              size: 53434
        '400':
          description: |+
            **HTTP Status Code:** `400` **Bad Request** <br>
            **Error Code:** `120`<br>
            No file uploaded, verify that a file has been uploaded.<br>
            File size cannot exceed 15M.<br>
            A maximum of 10 files are allowed for a user.<br>
            Only jpg/jpeg, gif or png image file can be uploaded.

        '404':
          description: |-
            **HTTP Status Code:** `404` **Not Found** <br>
            Group not found.
      summary: Upload virtual background files
      description: |+
        Use this API to [upload virtual background files](https://support.zoom.us/hc/en-us/articles/210707503-Virtual-Background) for a user.

        **Prerequisites:**<br>
        * Virtual background feature must be [enabled](https://support.zoom.us/hc/en-us/articles/210707503-Virtual-Background#h_2ef28080-fce9-4ac2-b567-dc958afab1b7) on the account.
        <br> **Scope:** `user:write:admin`
        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br>

      operationId: uploadVBuser
      tags:
        - Users
      consumes:
        - multipart/form-data
      parameters:
        - in: path
          name: userId
          type: string
          required: true
          description: 'Unique identifier of the user. Retrieve the value for this field by calling the [List users](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/users) API.'
        - in: formData
          name: file
          type: string
          description: Provide the file's path here.
    parameters:
      - name: userId
        in: path
        type: string
        required: true
    delete:
      responses:
        '204':
          description: |
            **HTTP Status Code:** `204` **No Content** <br>
            Deleted.
        '400':
          description: |
            **HTTP Status Code:** `400` **Bad request** <br>
            **Error Code:** `300`<br>
            Invalid parameter: file_ids. <br>
        '404':
          description: |
            **HTTP Status Code:** `404` **Not Found** <br>
            **Error Code:** `1001`<br>
            User not exist.<br>
            User {userId} does not exist or does not belong to this account.
      summary: Delete virtual background files
      description: |+
        Delete existing virtual background file(s) of a user.

        **Prerequisites:**<br>
        * Virtual background feature must be [enabled](https://support.zoom.us/hc/en-us/articles/210707503-Virtual-Background#h_2ef28080-fce9-4ac2-b567-dc958afab1b7) on the account.
        <br> **Scope:** `user:write:admin`<br>
        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`<br>

      operationId: delUserVB
      tags:
        - Users
      consumes:
        - multipart/form-data
      parameters:
        - in: query
          name: file_ids
          type: string
          description: 'Provide the id of the file that is to be deleted. To delete multiple files, provide comma separated values for this field.'
        - in: path
          name: userId
          type: string
          required: true
          description: 'Unique identifier of the user. Retrieve the value of this field by calling the [List users](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/users) API. '
  '/users/{userId}/meeting_templates':
    get:
      responses:
        '200':
          description: '**HTTP Status Code:** `200` **OK** <br>'
          schema:
            type: object
            properties:
              total_records:
                type: integer
                description: Total records found for this request.
              templates:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Unique identifier of the template.
                    name:
                      type: string
                      description: Name of the template.
                    type:
                      type: integer
                      description: |-
                        Type of the template. The value of this field can be one of the following:<br>
                        `1`: meeting template <br>
                        `2`: admin meeting template
          examples:
            application/json:
              total_records: 2
              templates:
                - id: AdxbhxCzKgSiWAw
                  type: 1
                  name: My meeting template
                - id: eYshgdftw4-5_MUSQ
                  type: 2
                  name: Zoom meeting template for daily sync
        '404':
          description: |-
            **HTTP Status Code:** `404` **Not Found** <br>
            **Error Code:** `1001`<br> User not exist: {userId}.<br>
            User {userId} does not exist or does not belong to this account.
      summary: List meeting templates
      operationId: listMeetingTemplates
      tags:
        - Meetings
      description: |
        Use this API to list [meeting templates](https://support.zoom.us/hc/en-us/articles/360036559151-Meeting-templates) that are available to be used by a user.

        **Scope:** `meeting:read` or `meeting:read:admin`

         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
      parameters:
        - in: path
          name: userId
          type: string
          required: true
          description: 'Unique identifier of the user. Retrieve the value of this field by calling the [List users](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/users) API.'
    parameters:
      - name: userId
        in: path
        type: string
        required: true
  /archive_files:
    get:
      responses:
        '200':
          description: |
            **HTTP Status Code:** `200` **OK**
            Archived files returned.
          schema:
            type: object
            properties:
              from:
                type: string
                description: 'Start date for the query in "yyyy-MM-dd''T''HH:mm:ss''Z''" format. The duration for the query defined using the "from" and "to" parameters should not exceed 7 days as this API only provides a week''s data at once.'
              to:
                type: string
                description: 'End date for the query in "yyyy-MM-dd''T''HH:mm:ss''Z''" format. '
              page_size:
                type: integer
                description: The number of records returned within a single API call.
              next_page_token:
                type: string
                description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
              meetings:
                type: array
                items:
                  type: object
                  properties:
                    uuid:
                      type: string
                      description: |
                        Unique identifier of the meeting instance or the webinar instance during which the archiving took place. Each instance of the meeting will have its own UUID.
                    id:
                      type: integer
                      description: |
                        Unique identifier of the meeting(meetingId) or the webinar(webinarId).
                    host_id:
                      type: string
                      description: |
                        ID of the user set as the host of meeting or the webinar that was archived.
                    topic:
                      type: string
                      description: Meeting or webinar topic.
                    type:
                      type: integer
                      description: |
                        Type of the meeting or the webinar that was archived.<br>
                        <br>Meeting types:<br>
                        `1` - Instant meeting<br>
                        `2` - Scheduled meeting<br>
                        `3` - Recurring meeting with no fixed time<br>
                        8 - Recurring meeting with fixed time

                        Webinar types:<br>
                        `5` - Webinar<br>
                        `6` - Recurring webinar with no fixed time<br>
                        `9` - Recurring webinar with a fixed time
                    start_time:
                      type: string
                      description: |
                        The time at which the meeting or the webinar started.
                    timezone:
                      type: string
                      description: Timezone of the host.
                    duration:
                      type: integer
                      description: Scheduled duration of the meeting or the webinar.
                    total_size:
                      type: integer
                      description: |
                        Total size of the archive.
                    recording_count:
                      type: integer
                      description: |
                        Number of recording files returned in the response of this API call.
                    archive_files:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            description: |
                              Unique identifier of the archived file.
                          file_type:
                            type: string
                            description: |-
                              Recorded file type. The value of this field could be one of the following:

                              `MP4`: Video file of the recording.<br>
                              `M4A`: Audio-only file of the recording.<br>
                              `TRANSCRIPT`: Transcription file of the recording in VTT format.
                              CHAT: A TXT file containing in-meeting chat messages that were sent during the meeting.<br>
                              `CC`: File containing closed captions of the recording in VTT file format.<br>
                              `CSV`: File containing polling data in csv format.
                          file_extension:
                            type: string
                            description: |
                              Extension of the recording file.
                          file_size:
                            type: integer
                            description: |
                              The recording file size.
                          download_url:
                            type: string
                            description: |-
                              The URL using which the archived file can be downloaded. To download the archived file of a meeting or a webinar hosted in your account, create a [Zoom JWT App Type](https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-jwt-app). Use the generated JWT token as the value of the access_token query parameter and include this query parameter at the end of the URL as shown in the example.

                              Example: `https://{{base-domain}}/rec/archive/download/xxx?access_token={{Your-JWT}}`

                              If a user has authorized and installed your OAuth app that supports archiving, use the user’s [OAuth access token](https://marketplace.zoom.us/docs/guides/auth/oauth) to download the file.

                              Example: `https://{{base-domain}}/rec/archive/download/xxx?access_token={{ OAuth Access Token }}`
                          status:
                            type: string
                            description: |
                              Status of the archived file.
                          recording_type:
                            type: string
                            description: |
                              The recording type. The value of this field can be one of the following:
                              * `shared_screen_with_speaker_view(CC)`
                              * `shared_screen_with_speaker_view`
                              * `shared_screen_with_gallery_view`
                              * `speaker_view`
                              * `gallery_view`
                              * `shared_screen`
                              * `audio_only`
                              * `audio_transcript`
                              * `chat_file`,
                              * `active_speaker`
                              * `host_video`
          examples:
            application/json:
              from: '2021-03-11T05:41:36Z'
              to: '2021-03-18T05:41:36Z'
              page_size: 30
              next_page_token: ''
              meetings:
                - uuid: yO3dfhh3t467UkQ==
                  id: 553068284
                  host_id: Dhjdfgdkg8w
                  topic: Zoom Meeting
                  type: 1
                  start_time: '2021-03-12T01:57:27Z'
                  timezone: ''
                  duration: 0
                  total_size: 364463
                  recording_count: 2
                  archive_files:
                    - id: 55hfgsd-sd8e2bd7255
                      file_type: M4A
                      file_extension: M4A
                      file_size: 165743
                      download_url: 'https://zoom.us/rec/archive/download/snGardfsw3435SKIsXAMhJ6wh'
                      status: completed
                      recording_type: audio_only
                    - id: 9c5daa5b-34a1-40e8-8947-a11be5e373a7
                      file_type: MP4
                      file_extension: MP4
                      file_size: 198720
                      download_url: 'https://zoom.us/rec/archive/download/eXy782Ua9dghjhPvao.bUFwLAgQrFOjfOjr'
                      status: completed
                      recording_type: shared_screen_with_speaker_view
        '400':
          description: |-
            **HTTP Status Code:** `400` **Bad request**<br>
            **Error Code:** `2001`<br>
            Account does not exist: {accountId}.
      summary: List archived files
      description: |-
        Zoom’s [archiving solution](https://support.zoom.us/hc/en-us/articles/360050431572-Archiving-Meeting-and-Webinar-data) allows account administrators to set up an automated mechanism to record, collect and archive meeting data to a 3rd party platform of their choice and hence, satisfy FINRA and/ or other compliance requirements.<br><br>
        Use this API to retrieve archived meeting or webinar files of an account.

        **Scope:** `recording:read:admin`<br>
        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`<br><br>
        **Prerequisites:** <br>
        * Enable cloud recording.
        * Follow the [enablement process](https://support.zoom.us/hc/en-us/articles/360050431572-Archiving-Meeting-and-Webinar-data#h_01ENPBD3WR68D7FAKTBY92SG45) to access the archiving feature.
      operationId: listArchivedFiles
      tags:
        - Cloud Recording
      parameters:
        - $ref: '#/parameters/PageSize'
        - $ref: '#/parameters/NextPageToken'
        - in: query
          name: from
          type: string
          description: 'Start date for the query in "yyyy-MM-dd''T''HH:mm:ss''Z''" format. The duration for the query defined using the "from" and "to" parameters should not exceed 7 days as this API only provides a week''s data at once.'
        - in: query
          name: to
          type: string
          description: 'End date for the query in "yyyy-MM-dd''T''HH:mm:ss''Z''" format. '
parameters:
  AccountId:
    in: path
    name: accountId
    description: The account ID.
    type: string
    required: true
  FromDate:
    in: query
    name: from
    description: Start date in 'yyyy-mm-dd' format. The date range defined by the "from" and "to" parameters should only be one month as the report includes only one month worth of data at once.
    type: string
    format: date
    required: true
  GroupId:
    in: path
    name: groupId
    description: |-
      The group ID.<br>
      Can be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups).
    type: string
    required: true
  DeviceId:
    in: path
    name: deviceId
    description: The device ID.
    type: string
    required: true
  LoginType:
    in: query
    name: login_type
    description: '`0` - Facebook.<br>`1` - Google.<br>`99` - API.<br>`100` - Zoom.<br>`101` - SSO.'
    type: string
    enum:
      - '0'
      - '1'
      - '99'
      - '100'
      - '101'
    x-enum-descriptions:
      - Facebook
      - Google
      - API
      - Zoom
      - SSO
  Mc:
    in: query
    name: mc
    description: Query Metadata of Recording if an On-Premise Meeting Connector was used for the meeting.
    type: string
    default: 'false'
  Trash:
    in: query
    name: trash
    description: |-
      Query trash.
      `true`: List recordings from trash.<br> `false`: Do not list recordings from the trash.<br> The default value is `false`. If you set it to `true`, you can use the `trash_type` property to indicate the type of Cloud recording that you need to retrieve.
    type: boolean
    default: false
  MeetingId:
    in: path
    name: meetingId
    description: |-
      The meeting ID in **long** format. The data type of this field is "long"(represented as int64 in JSON).

      While storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.
    type: integer
    required: true
    format: int64
  MeetingIdNumber:
    in: path
    name: meetingId
    description: The meeting ID or UUID.
    type: string
    required: true
  RecordingId:
    in: path
    name: recordingId
    description: The recording ID.
    type: string
    required: true
  RecordingDeleteAction:
    in: query
    name: action
    description: 'The recording delete actions:<br>`trash` - Move recording to trash.<br>`delete` - Delete recording permanently.'
    type: string
    default: trash
    enum:
      - trash
      - delete
    x-enum-descriptions:
      - move recording to trash
      - delete recording permanently
  MeetingId4Metrics:
    in: path
    name: meetingId
    description: |-
      The meeting ID or the meeting UUID.  If a meeting ID is provided in the request instead of a UUID, the response will be for the latest meeting instance.

      If a UUID starts with "/" or contains "//" (example: "/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID before making an API request.
    type: string
    required: true
  MeetingUUID:
    in: path
    name: meetingUUID
    description: 'The meeting UUID. Each meeting instance will generate its own Meeting UUID (i.e., after a meeting ends, a new UUID will be generated for the next instance of the meeting). Please double encode your UUID when using it for other API calls if the UUID begins with a ''/''or contains ''//'' in it.'
    type: string
    required: true
  MeetingId4Recording:
    in: path
    name: meetingId
    description: |-
      To get Cloud Recordings of a meeting, provide the meeting ID or meeting UUID. If the meeting ID is provided instead of UUID,the response will be for the latest meeting instance.

      To get Cloud Recordings of a webinar, provide the webinar ID or the webinar UUID. If the webinar ID is provided instead of UUID,the response will be for the latest webinar instance.

      If a UUID starts with "/" or contains "//" (example: "/ajXp112QmuoKj4854875=="), you must **double encode** the UUID before making an API request.
    type: string
    required: true
  MeetingType:
    in: query
    name: type
    description: 'The meeting types: <br>`scheduled` - This includes all valid past meetings (unexpired), live meetings and upcoming scheduled meetings. It is equivalent to the combined list of "Previous Meetings" and "Upcoming Meetings" displayed in the user''s [Meetings page](https://zoom.us/meeting) on the Zoom Web Portal.<br>`live` - All the ongoing meetings.<br>`upcoming` - All upcoming meetings including live meetings.'
    type: string
    default: live
    enum:
      - scheduled
      - live
      - upcoming
    x-enum-descriptions:
      - all the scheduled meetings
      - all the live meetings
      - all the upcoming meetings
  MeetingTypePast:
    in: query
    name: type
    description: |-
      Specify a value to get the response for the corresponding meeting type. The value of this field can be one of the following:<br> <br>`past` - Meeting that already occurred in the specified date range.<br>`pastOne` - Past meetings that were attended by only one user. <br>`live` - Live meetings.<br><br>

      If you do not provide this field, the default value will be `live` and thus, the API will only query responses for live meetings.
    type: string
    default: live
    enum:
      - past
      - pastOne
      - live
    x-enum-descriptions:
      - past meetings
      - past one user meetings
      - live meetings
  MeetingTypePast2:
    in: query
    name: type
    description: 'The meeting types: <br>`past` - Past meetings.<br>`live` - Live Meetings.'
    type: string
    default: live
    enum:
      - past
      - pastOne
      - live
    x-enum-descriptions:
      - past meeting
      - single past user meetings
      - live meeting
  MeetingTypePast3:
    in: query
    name: type
    description: 'The meeting types: <br>`past` - Past meetings.<br>`pastOne` - Past one user meetings.<br>`live` - Live meetings.'
    type: string
    default: live
    enum:
      - past
      - pastOne
      - live
    x-enum-descriptions:
      - past meeting
      - past one user meeting
      - live meeting
  MemberId:
    in: path
    name: memberId
    description: The member ID.
    type: string
    required: true
  NextPageToken:
    in: query
    name: next_page_token
    description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
    type: string
  OccurrenceId:
    in: query
    name: occurrence_id
    description: The meeting occurrence ID.
    type: string
  PageNumber:
    in: query
    name: page_number
    description: |-

      **Deprecated** - This field has been deprecated and we will stop supporting it completely in a future release. Please use "next_page_token" for pagination instead of this field.

      The page number of the current page in the returned records.
    type: integer
    default: 1
  PageSize:
    in: query
    name: page_size
    description: The number of records returned within a single API call.
    type: integer
    default: 30
    maximum: 300
  PageSize4Qos:
    in: query
    name: page_size
    description: The number of items returned per page.
    type: integer
    default: 1
    maximum: 10
  PageToken:
    in: query
    name: next_page_token
    description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.
    type: string
  ParticipantId:
    in: path
    name: participantId
    description: Participant ID.
    type: string
    required: true
  RegistrantId:
    in: path
    name: registrantId
    description: The registrant ID.
    type: string
    required: true
  RegistrantStatus:
    in: query
    name: status
    description: 'The registrant status:<br>`pending` - Registrant''s status is pending.<br>`approved` - Registrant''s status is approved.<br>`denied` - Registrant''s status is denied.'
    type: string
    default: approved
    enum:
      - pending
      - approved
      - denied
    x-enum-descriptions:
      - registrants status is pending
      - registrants status is approved
      - registrants status is denied
  ToDate:
    in: query
    name: to
    description: End date.
    type: string
    format: date
    required: true
  TSPId:
    name: tspId
    description: TSP account ID.
    in: path
    type: string
    required: true
    enum:
      - 1
      - 2
  TransferEmail:
    in: query
    name: transfer_email
    description: Transfer email.
    type: string
    required: false
  TransferMeeting:
    in: query
    name: transfer_meeting
    description: Transfer meeting.
    type: boolean
    required: false
  TransferWebinar:
    in: query
    name: transfer_webinar
    description: Transfer webinar.
    type: boolean
    required: false
  TransferRecording:
    in: query
    name: transfer_recording
    description: Transfer recording.
    type: boolean
    required: false
  UserId:
    in: path
    name: userId
    description: 'The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.'
    type: string
    required: true
  RoleId:
    in: path
    name: roleId
    description: The role ID
    type: string
    required: true
  WebinarId:
    in: path
    name: webinarId
    description: 'The webinar ID in "**long**" format(represented as int64 data type in JSON). '
    type: integer
    required: true
    format: int64
  WebinarId4Metrics:
    in: path
    name: webinarId
    description: |-
      The webinar ID or the webinar UUID.  If a webinar ID is provided in the request instead of a UUID, the response will be for the latest webinar instance.

      If a UUID starts with "/" or contains "//" (example: "/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID before making an API request.
    type: string
    required: true
  WebinarTypePast:
    in: query
    name: type
    description: The webinar type.
    type: string
    default: live
    enum:
      - past
      - live
    x-enum-descriptions:
      - past webinars
      - live webinars
  WebinarTypePast2:
    in: query
    name: type
    description: The webinar type.
    type: string
    default: live
    enum:
      - past
      - live
    x-enum-descriptions:
      - past webinar
      - live webinar
  WebhookId:
    in: path
    name: webhookId
    description: The webhook ID.
    type: string
    required: true
  ZoomRoomId:
    in: path
    name: zoomroomId
    description: The Zoom room ID.
    type: string
    required: true
  SessionId:
    in: path
    name: sessionId
    description: IM chat session ID.
    type: string
    required: true
  FeedbackId:
    name: feedbackId
    in: path
    type: string
    required: true
    description: Feedback Detail Id
  WebinarUUID:
    name: WebinarUUID
    in: path
    type: string
    required: true
    description: 'The Webinar UUID. Each Webinar instance will generate its own Webinar UUID (i.e., after a Webinar ends, a new UUID will be generated for the next instance of the Webinar). Please double encode your UUID when using it for API calls if the UUID begins with a ''/'' or contains ''//'' in it.'
  trash_type:
    in: query
    type: string
    name: trash_type
    default: meeting_recordings
    description: |-
      The type of Cloud recording that you would like to retrieve from the trash. The value can be one of the following:<br>
          `meeting_recordings`: List all meeting recordings from the trash.<br>
          `recording_file`: List all individual recording files from the trash.
definitions:
  Account:
    type: object
    description: 'The account object represents an account on Zoom. The account owner is the user who created the account or had an account created for them. You can read more about the Zoom account structure <a href=''https://medium.com/zoom-developer-blog/a-brief-look-at-zoom-account-structures-1d19c745bf8a'' target=''_blank''>here</a>.'
    properties:
      first_name:
        type: string
        description: User's first name.
      last_name:
        type: string
        description: User's last name.
      email:
        type: string
        description: User's email address.
      password:
        type: string
        description: User's password.
        minimum: 8
      options:
        $ref: '#/definitions/AccountOptions'
      vanity_url:
        type: string
        description: Account Vanity URL
    required:
      - first_name
      - last_name
      - email
      - password
  AccountListItem:
    type: object
    description: Account object in the account list.
    properties:
      accounts:
        type: array
        description: List of Account objects.
        items:
          type: object
          properties:
            id:
              type: string
              description: Account ID.
            account_name:
              type: string
              description: Account name.
            owner_email:
              type: string
              description: Account owner email.
              example: john.doe@zoom.us
            account_type:
              type: string
              description: Account type.
            seats:
              type: integer
              description: Account seats.
            subscription_start_time:
              type: string
              format: date-time
              description: Account subscription start date and time.
            subscription_end_time:
              type: string
              format: date-time
              description: Account subscription end date and time.
            created_at:
              type: string
              format: date-time
              description: Account creation date and time.
            account_number:
              type: string
              description: Account Number of the account.
  AccountList:
    title: Account List
    description: List of Accounts.
    allOf:
      - $ref: '#/definitions/Pagination'
      - $ref: '#/definitions/AccountListItem'
    type: object
  AccountOptions:
    type: object
    description: Account options object.
    properties:
      share_rc:
        type: boolean
        description: 'Enable/disable the option for a sub account to use shared [Virtual Room Connector(s)](https://support.zoom.us/hc/en-us/articles/202134758-Getting-Started-With-Virtual-Room-Connector) that are set up by the master account. Virtual Room Connectors can only be used by On-prem users.'
        default: false
      room_connector_list:
        type: array
        description: |-
          Specify the IP addresses of the Room Connectors that you would like to share with the sub account. Multiple values can be separated by comma. If no value is provided in this field, all the Room Connectors of a master account will be shared with the sub account.


          **Note:** This option can only be used if the value of `share_rc` is set to `true`.
        items:
          type: string
      share_mc:
        type: boolean
        description: 'Enable/disable the option for a sub account to use shared [Meeting Connector(s)](https://support.zoom.us/hc/en-us/articles/201363093-Getting-Started-with-the-Meeting-Connector) that are set up by the master account. Meeting Connectors can only be used by On-prem users.'
        default: false
      meeting_connector_list:
        type: array
        description: |-
          Specify the IP addresses of the Meeting Connectors that you would like to share with the sub account. Multiple values can be separated by comma. If no value is provided in this field, all the Meeting Connectors of a master account will be shared with the sub account.


          **Note:** This option can only be used if the value of `share_mc` is set to `true`.
        items:
          type: string
      pay_mode:
        type: string
        description: 'Payee:<br>`master` - master account holder pays.<br>`sub` - Sub account holder pays.'
        enum:
          - master
          - sub
        x-enum-descriptions:
          - master account holder pays
          - Sub account holder pays
        default: master
      billing_auto_renew:
        type: boolean
        description: Toggle whether automatic billing renewal is on or off.
  AccountPlan:
    type: object
    description: Account plan object.
    properties:
      type:
        type: string
        description: 'Account <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans">plan type.</a>'
      hosts:
        type: integer
        description: Account plan number of hosts.
  AccountPlanBaseRequired:
    type: object
    description: Account base plan object.
    properties:
      type:
        type: string
        description: 'Account base <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans">plan type.</a>'
      hosts:
        type: integer
        description: Account base plan number of hosts. For a Pro Plan please select a value between 1 and 9. For a Business Plan please select a value between 10 and 49. For a Education Plan please select a value between 20 and 149. For a Free Trial Plan please select a value between 1 and 9999.
    required:
      - type
      - hosts
  AccountPlanRequired:
    type: object
    description: Account plan object.
    properties:
      type:
        type: string
        description: 'Account <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans">plan type.</a>'
      hosts:
        type: integer
        description: Number of hosts for this plan.
    required:
      - type
      - hosts
  AccountPlans:
    type: object
    description: Account Plans object.
    properties:
      plan_base:
        $ref: '#/definitions/AccountPlanBaseRequired'
      plan_zoom_rooms:
        $ref: '#/definitions/AccountPlan'
      plan_room_connector:
        $ref: '#/definitions/AccountPlan'
      plan_large_meeting:
        type: array
        description: Additional large meeting Plans.
        items:
          $ref: '#/definitions/AccountPlan'
      plan_webinar:
        type: array
        description: Additional webinar plans.
        items:
          $ref: '#/definitions/AccountPlan'
      plan_recording:
        type: string
        description: Additional cloud recording plan.
      plan_audio:
        type: object
        description: 'Additional audio conferencing <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans#audio-conferencing-plans">plan type</a>.'
        properties:
          type:
            type: string
            description: 'Additional audio conferencing <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans#audio-conferencing-plans">plan type</a>.'
          tollfree_countries:
            type: string
            description: 'Toll-free countries: multiple values should separated by a comma. For a list of allowed values, refer to the "ID" field in the [Toll Free Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#toll-free-countries) table.'
          premium_countries:
            type: string
            description: 'Premium countries: multiple values should be separated by commas. For a list of allowed values, refer to the "ID" field in the [Premium Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#premium-countries) table.'
          callout_countries:
            type: string
            description: 'Call-out countries: multiple values should separated by  commas. For a list of allowed values, refer to the "ID" field in [this](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#tsp-call-out-countries) table.'
          ddi_numbers:
            type: integer
            description: Dedicated dial-In numbers.
      plan_phone:
        $ref: '#/definitions/PhonePlan'
    required:
      - plan_base
  AccountSettings:
    title: Account settings
    type: object
    properties:
      schedule_meeting:
        $ref: '#/definitions/AccountSettingsScheduleMeeting'
      in_meeting:
        $ref: '#/definitions/AccountSettingsInMeeting'
      email_notification:
        $ref: '#/definitions/AccountSettingsEmailNotification'
      zoom_rooms:
        $ref: '#/definitions/AccountSettingsZoomRooms'
      security:
        $ref: '#/definitions/AccountSettingsSecurity'
      recording:
        $ref: '#/definitions/AccountSettingsRecording'
      telephony:
        $ref: '#/definitions/AccountSettingsTelephony'
      integration:
        $ref: '#/definitions/AccountSettingsIntegration'
      feature:
        $ref: '#/definitions/AccountSettingsFeature'
      tsp:
        $ref: '#/definitions/AccountSettingsTSP'
      profile:
        $ref: '#/definitions/Profile'
  AccountUpdateSettings:
    title: Update account settings
    type: object
    properties:
      schedule_meeting:
        $ref: '#/definitions/AccountSettingsScheduleMeeting'
      in_meeting:
        $ref: '#/definitions/AccountSettingsInMeeting'
      email_notification:
        $ref: '#/definitions/AccountSettingsEmailNotification'
      zoom_rooms:
        $ref: '#/definitions/AccountSettingsZoomRooms'
      security:
        $ref: '#/definitions/AccountSettingsSecurity'
      recording:
        $ref: '#/definitions/AccountSettingsRecording'
      telephony:
        $ref: '#/definitions/AccountSettingsUpdateTelephony'
      integration:
        $ref: '#/definitions/AccountSettingsIntegration'
      feature:
        $ref: '#/definitions/AccountSettingsFeature'
      tsp:
        $ref: '#/definitions/AccountSettingsTSP'
      profile:
        $ref: '#/definitions/Profile'
  AccountSettingsScheduleMeeting:
    type: object
    description: 'Account Settings: Schedule Meeting.'
    properties:
      host_video:
        type: boolean
        description: Start meetings with the host video on.
      participant_video:
        type: boolean
        description: Start meetings with the participant video on. Participants can change this setting during the meeting.
      audio_type:
        type: string
        description: Determine how participants can join the audio portion of the meeting.<br>`both` - Telephony and VoIP.<br>`telephony` - Audio PSTN telephony only.<br>`voip` - VoIP only.<br>`thirdParty` - 3rd party audio conference.
        default: both
        enum:
          - both
          - telephony
          - voip
          - thirdParty
        x-enum-descriptions:
          - Telephony and VoIP
          - Audio PSTN telephony only
          - VoIP only
          - 3rd party audio conference
      join_before_host:
        type: boolean
        description: Allow participants to join the meeting before the host arrives.
      enforce_login:
        type: boolean
        description: Only Zoom users who are signed in can join meetings.
      enforce_login_with_domains:
        type: boolean
        description: Only signed in users with a specific domain can join meetings.
      enforce_login_domains:
        type: string
        description: 'Only signed in users with a specified domain can join the meeting. '
      not_store_meeting_topic:
        type: boolean
        description: Always display "Zoom Meeting" as the meeting topic.
      force_pmi_jbh_password:
        type: boolean
        description: Require a password for Personal Meetings if attendees can join before host.
      use_pmi_for_scheduled_meetings:
        type: boolean
        description: |
          Use Personal Meeting ID (PMI) when scheduling a meeting
      use_pmi_for_instant_meetings:
        type: boolean
        description: |
          Use Personal Meeting ID (PMI) when starting an instant meeting
      require_password_for_scheduling_new_meetings:
        type: boolean
        description: 'Require a password when scheduling new meetings. This setting applies for regular meetings that do not use PMI. If enabled, a password will be generated while a host schedules a new meeting and participants will be required to enter the password before they can join the meeting. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.'
      require_password_for_scheduled_meetings:
        type: boolean
        description: |
          Require a password for meetings which have already been scheduled
      require_password_for_instant_meetings:
        type: boolean
        description: |
          Require a password for instant meetings. If you use PMI for your instant meetings, this option will be disabled. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.
      require_password_for_pmi_meetings:
        type: string
        description: |
          Require a password for a meeting held using Personal Meeting ID (PMI) This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.
        enum:
          - jbh_only
          - all
          - none
        x-enum-descriptions:
          - Only meetings with Join Before Host enabled
          - All meetings using PMI
          - Disabled
      meeting_password_requirement:
        type: object
        description: 'Account wide meeting/webinar [password requirements](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604).'
        properties:
          length:
            type: integer
            description: The minimum length that the meeting/webinar password needs to have.
          have_letter:
            type: boolean
            description: |
              If set to `true`, the password must contain at least 1 letter (such as a,b,c...).
          have_number:
            type: boolean
            description: 'If set to `true`, the password must contain at least 1 number (such as 1,2,3...).'
          have_special_character:
            type: boolean
            description: 'If set to `true`, the password must have at least 1 special character (!,@,#...).'
          only_allow_numeric:
            type: boolean
            description: 'If set to `true`, the password must only contain numbers and no other characters.'
          have_upper_and_lower_characters:
            type: boolean
            description: 'If set to `true`, the password must include both uppercase and lowercase characters.'
          consecutive_characters_length:
            type: integer
            enum:
              - 0
              - 4
              - 5
              - 6
              - 7
              - 8
          weak_enhance_detection:
            type: boolean
            description: 'If set to `true`, users will be informed if the provided password is weak.'
      personal_meeting:
        description: |+
          Personal Meeting Setting.<br><br>
          `true`: Indicates that the **"Enable Personal Meeting ID"** setting is turned on. Users can choose to use personal meeting ID for their meetings. <br><br>
          `false`: Indicates that the **"Enable Personal Meeting ID"** setting is [turned off](https://support.zoom.us/hc/en-us/articles/201362843-Personal-meeting-ID-PMI-and-personal-link#h_aa0335c8-3b06-41bc-bc1f-a8b84ef17f2a). If this setting is disabled, meetings that were scheduled with PMI will be invalid. Scheduled meetings will need to be manually updated.
          For Zoom Phone only:If a user has been assigned a desk phone, **"Elevate to Zoom Meeting"** on desk phone will be disabled.


        type: boolean
  AccountSettingsInMeeting:
    type: object
    description: 'Account Settings: In Meeting.'
    properties:
      e2e_encryption:
        type: boolean
        description: 'Zoom requires encryption for all data between the Zoom cloud, Zoom client, and Zoom Room. Require encryption for 3rd party endpoints (H323/SIP).'
      chat:
        type: boolean
        description: Allow meeting participants to send a message that is visible to all participants.
      private_chat:
        type: boolean
        description: Allow a meeting participant to send a private message to another participant.
      auto_saving_chat:
        type: boolean
        description: Automatically save all in-meeting chats so that the host does not need to manually save the chat transcript after the meeting starts.
      entry_exit_chime:
        type: string
        description: Play sound when participants join or leave.<br>`host` - Heard by host only.<br>`all` - Heard by host and all attendees.<br>`none` - Disable.
        enum:
          - host
          - all
          - none
        x-enum-descriptions:
          - Heard by host only
          - Heard by host and all attendees
          - Disable
      record_play_own_voice:
        type: boolean
        description: Record and play their own voice.
      feedback:
        type: boolean
        description: Add a "Feedback" tab to the Windows Settings or Mac Preferences dialog. Enable users to provide feedback to Zoom at the end of the meeting.
      post_meeting_feedback:
        type: boolean
        description: Display a thumbs up or down survey at the end of each meeting.
      co_host:
        type: boolean
        description: Allow the host to add co-hosts.
      polling:
        type: boolean
        description: Add "Polls" to the meeting controls.
      attendee_on_hold:
        type: boolean
        default: false
        description: |-
          Allow host to put attendee on hold.

          **This field has been deprecated and is no longer supported.**
      show_meeting_control_toolbar:
        type: boolean
        description: Always show the meeting control toolbar.
      allow_show_zoom_windows:
        type: boolean
        description: 'Show the Zoom desktop application when sharing screens. '
      annotation:
        type: boolean
        description: Allow participants to use annotation tools to add information to shared screens.
      whiteboard:
        type: boolean
        description: Allow participants to share a whiteboard that includes annotation tools.
      webinar_question_answer:
        type: boolean
        description: Allow a Q&A in a webinar.
      anonymous_question_answer:
        type: boolean
        description: Allow an anonymous Q&A in a webinar.
      breakout_room:
        type: boolean
        description: 'Allow host to split meeting participants into separate, smaller rooms.'
      closed_caption:
        type: boolean
        description: 'Allow a host to type closed captions. Enable a host to assign a participant or third party device to add closed captions. '
      far_end_camera_control:
        type: boolean
        description: Allow another user to take control of your camera during a meeting.
      group_hd:
        type: boolean
        description: |-
          Activate higher quality video for host and participants.
          Please note: This will use more bandwidth.
      virtual_background:
        type: boolean
        description: Allow users to replace their background with any selected image. Choose or upload an image in the Zoom desktop application settings.
      virtual_background_settings:
        type: object
        description: Settings to manage virtual background.
        properties:
          enable:
            type: boolean
            description: Enable virtual background.
          allow_videos:
            type: boolean
            description: Allow use of videos for virtual backgrounds.
          allow_upload_custom:
            type: boolean
            description: Allow users to upload custom backgrounds.
          files:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                  description: Unique identifier of the file.
                name:
                  type: string
                  description: File name.
                type:
                  type: string
                  description: File type.
                is_default:
                  type: boolean
                  description: Indicates whether or not this file is the default virtual background file.
                size:
                  type: string
                  description: File size.
      watermark:
        type: boolean
        description: Add a watermark when viewing a shared screen.
      alert_guest_join:
        type: boolean
        description: Identify guest participants in a meeting or webinar.
      auto_answer:
        type: boolean
        description: Enable users to see and add contacts to the "auto-answer group" in the chat contact list. Any call from members of this group will automatically be answered.
      p2p_connetion:
        type: boolean
        description: Peer to peer connection while only two people are in a meeting.
      p2p_ports:
        type: boolean
        description: Peer to peer listening ports range.
      ports_range:
        type: string
        description: 'The listening ports range, separated by a comma (ex 55,56). The ports range must be between 1 to 65535.'
        default: ''
      sending_default_email_invites:
        type: boolean
        description: Only show the default email when sending email invites.
      use_html_format_email:
        type: boolean
        description: Use HTML formatted email for the Outlook plugin.
      dscp_marking:
        type: boolean
        description: DSCP marking.
      dscp_audio:
        type: integer
        description: DSCP audio.
        minimum: 1
        maximum: 63
      dscp_video:
        type: integer
        description: DSCP video.
        minimum: 1
        maximum: 63
      stereo_audio:
        type: boolean
        description: Allow users to select stereo audio in their client settings.
      original_audio:
        type: boolean
        description: Allow users to select original sound in their client settings.
      screen_sharing:
        type: boolean
        description: Allow screen sharing.
      remote_control:
        type: boolean
        description: Allow users to request remote control.
      allow_live_streaming:
        type: boolean
        description: Allow live streaming.
      workplace_by_facebook:
        type: boolean
        description: Workplace by facebook.
      custom_live_streaming_service:
        type: boolean
        description: Custom live streaming.
      custom_service_instructions:
        type: string
        description: Custom service instructions.
      custom_data_center_regions:
        type: boolean
        description: 'If set to `true`, account owners and admins on paid accounts can [select data center regions](https://support.zoom.us/hc/en-us/articles/360042411451-Selecting-data-center-regions-for-hosted-meetings-and-webinars) to use for hosting their real-time meeting and webinar traffic. These regions can be provided in the `data_center_regions` field. If set to `false`, the regions cannot be customized and the default regions will be used.'
      data_center_regions:
        type: array
        description: |
          If you have set the value of `custom_data_center_regions` to `true`, specify the data center regions that you would like to opt in to (country codes from among: ["EU", "HK", "AU", "IN", "LA", "TY", "CN", "US", "CA"]).
        enum:
          - EU
          - HK
          - AU
          - IN
          - TY
          - CN
          - US
          - CA
        items:
          type: string
      meeting_reactions:
        type: boolean
        description: |-
          Enable or disable meeting reactions. <br>
          `true`: Allow meeting participants to communicate without interrupting by reacting with an emoji that shows on their video.<br>
          `false`: Do not enable meeting reactions.
      show_a_join_from_your_browser_link:
        type: boolean
        description: 'If the value of this field is set to `true`, you will allow participants to join a meeting directly from their browser and bypass the Zoom application download process. This is a workaround for participants who are unable to download, install, or run applications. Note that the meeting experience from the browser is limited.'
      allow_participants_to_rename:
        type: boolean
        description: |
          If the value of this field is set to `true`, meeting participants and webinar panelists can be allowed to rename themselves during a meeting or a webinar.
      who_can_share_screen:
        type: string
        description: |
          Indicates who can share their screen or content during meetings. The value can be one of the following: <br>
          `host`: Only host can share the screen.<br>
          `all`: Both hosts and attendees can share their screen during meetings. For Webinar, the hosts and panelists can start screen sharing, but not the attendees.
        enum:
          - host
          - all
      who_can_share_screen_when_someone_is_sharing:
        type: string
        description: |
          Indicates who is allowed to start sharing screen when someone else in the meeting is sharing their screen. The value can be one of the following:<br>
          `host`: Only a host can share the screen when someone else is sharing.<br>
          `all`: Anyone in the meeting is allowed to start sharing their screen when someone else is sharing. For Webinar, the hosts and panelists can start screen sharing, but not the attendees.
        enum:
          - host
          - all
      file_transfer:
        type: boolean
        description: 'Indicates whether [in-meeting file transfer](https://support.zoom.us/hc/en-us/articles/209605493-In-meeting-file-transfer) setting has been enabled on the account or not.'
      request_permission_to_unmute:
        type: boolean
        description: 'Indicates whether the [**Request permission to unmute participants**](https://support.zoom.us/hc/en-us/articles/203435537-Muting-and-unmuting-participants-in-a-meeting#h_01EGK4XFWS1SJGZ71MYGKF7260) option has been enabled for the account or not.'
  AccountSettingsEmailNotification:
    type: object
    description: 'Account Settings: Notification.'
    properties:
      cloud_recording_avaliable_reminder:
        type: boolean
        description: Notify host when cloud recording is available.
      jbh_reminder:
        type: boolean
        description: Notify the host when participants join the meeting before them.
      cancel_meeting_reminder:
        type: boolean
        description: Notify the host and participants when a meeting is cancelled.
      low_host_count_reminder:
        type: boolean
        description: Notify user when host licenses are running low.
      alternative_host_reminder:
        type: boolean
        description: Notify when an alternative host is set or removed from a meeting.
      schedule_for_reminder:
        type: boolean
        description: 'Notify the host there is a meeting is scheduled, rescheduled, or cancelled.'
  AccountSettingsZoomRooms:
    type: object
    description: 'Account Settings: Zoom Rooms.'
    properties:
      upcoming_meeting_alert:
        type: boolean
        description: Upcoming meeting alert.
      start_airplay_manually:
        type: boolean
        description: Start AirPlay service manually.
      weekly_system_restart:
        type: boolean
        description: Weekly system restart.
      list_meetings_with_calendar:
        type: boolean
        description: Display meeting list with calendar integration.
      zr_post_meeting_feedback:
        type: boolean
        description: Zoom Room post meeting feedback.
      ultrasonic:
        type: boolean
        description: Automatic direct sharing using an ultrasonic proximity signal.
      force_private_meeting:
        type: boolean
        description: Shift all meetings to private.
      hide_host_information:
        type: boolean
        description: Hide host and meeting ID from private meetings.
      cmr_for_instant_meeting:
        type: boolean
        description: Cloud recording for instant meetings.
      auto_start_stop_scheduled_meetings:
        type: boolean
        description: Automatic start and stop for scheduled meetings.
  AccountSettingsSecurity:
    type: object
    description: '[Security settings](https://support.zoom.us/hc/en-us/articles/360034675592-Advanced-security-settings#h_bf8a25f6-9a66-447a-befd-f02ed3404f89) of an Account.'
    properties:
      admin_change_name_pic:
        type: boolean
        description: Only account administrators can change a user's username and picture.
      import_photos_from_devices:
        type: boolean
        description: Allow users to import photos from a photo library on a  device.
      hide_billing_info:
        type: boolean
        description: Hide billing information.
      password_requirement:
        type: object
        description: 'This object refers to the [enhanced password rules](https://support.zoom.us/hc/en-us/articles/360034675592-Advanced-security-settings#h_bf8a25f6-9a66-447a-befd-f02ed3404f89) that allows Zoom account admins and owners to apply extra requiremets to the users'' Zoom login password. '
        properties:
          minimum_password_length:
            type: integer
            description: 'Specify a minimum length for the password. The password length can be from a minimum of 9 characters, up to 14 characters. If you provide `0` as the value of this field, this field will be disabled and not be used and the basic password length requirement (minimum of 8 characters) will be applied for the requirement.'
            minimum: 8
            maximum: 14
          have_special_character:
            type: boolean
            description: 'If the value of this field is set to `true`, the password must have at least one special character(!, @, #...).'
          consecutive_characters_length:
            type: integer
            description: |-

              Specify the max length of consecutive characters(abcde...) that can be used in a password.
              If you set the value of this field to `0`, no restriction will be applied on consecutive characters.

              If you would like to set this restriction, you can specify a number between 4 and 8 that define the maximum allowed length for consecutive characters in a password.

              The max allowed length will be `n-1` where `n` refers to the value you provide for this field.  For instance, if you provide `4` as the value, there can only be a maximum of `3` consecutive characters in a password(example: abc1x@8fdh).
          weak_enhance_detection:
            type: boolean
            description: 'If the value of this field is set to `true`, user passwords will have to pass detection through a weak password dictionary in case hackers use simple passwords to sign in to your users’ accounts.'
      sign_in_with_two_factor_auth:
        type: string
        enum:
          - all
          - group
          - role
          - none
        description: |
          Settings for 2FA( [two factor authentication](https://support.zoom.us/hc/en-us/articles/360038247071) ). The value can be one of the following:
          `all`: Two factor authentication will be enabled for all users in the account.<br>
          `none`: Two factor authentication is disabled.<br>
          `group`: Two factor authentication will be enabled for users belonging to specific groups. If 2FA is enabled for certain groups, the group IDs of the group(s) will be provided in the `sign_in_with_two_factor_auth_groups` field.<br>
          `role`: Two factor authentication will be enabled only for users assigned with specific roles in the account. If 2FA is enabled for specific roles, the role IDs will be provided in the
          `sign_in_with_two_factor_auth_roles` field.
      sign_again_period_for_inactivity_on_client:
        type: integer
        description: |
          Settings for User Sign In interval requirements after a period of inactivity. If enabled, this setting forces automatic logout of users in Zoom Client app after a set amount of time. <br>

          If this setting is disabled, the value of this field will be `0`. If the setting is enabled, the value of this field will indicate the **period of inactivity** in minutes after which, an inactive user will be automatically logged out of the Zoom Client. The value for the period of inactivity can be one of the following:<br>

          `5`: 5 minutes<br>
          `10`: 10 minutes<br>
          `15`: 15 minutes<br>
          `30`: 30 minutes<br>
          `45`: 45 minutes<br>
          `60`: 60 minutes<br>
          `90`: 90 minutes<br>
          `120`: 120 minutes
      sign_again_period_for_inactivity_on_web:
        type: integer
        description: |+
          Settings for User Sign In interval requirements after a period of inactivity. If enabled, this setting forces automatic logout of users in Zoom Web Portal after a set amount of time. <br>

          If this setting is disabled, the value of this field will be `0`. If the setting is enabled, the value of this field will indicate the **period of inactivity** in minutes after which, an inactive user will be automatically logged out of the Zoom Web Portal. The value for the period of inactivity can be one of the following:<br>

          `5`: 5 minutes<br>
          `10`: 10 minutes<br>
          `15`: 15 minutes<br>
          `30`: 30 minutes<br>
          `60`: 60 minutes<br>
          `120`: 120 minutes



      sign_in_with_two_factor_auth_groups:
        type: array
        description: This field contains group IDs of groups that have 2FA enabled. This field is only returned if the value of `sign_in_with_two_factor_auth` is `group`
        items:
          type: string
      sign_in_with_two_factor_auth_roles:
        type: array
        description: This field contains role IDs of roles that have 2FA enabled. This field is only returned if the value of `sign_in_with_two_factor_auth` is `role`.
        items:
          type: string
  AccountSettingsRecording:
    type: object
    description: 'Account Settings: Recording.'
    properties:
      local_recording:
        type: boolean
        description: Allow hosts and participants to record the meeting using a local file.
      cloud_recording:
        type: boolean
        description: Allow hosts to record and save the meeting in the cloud.
      record_speaker_view:
        type: boolean
        description: Record the active speaker with a shared screen.
      record_gallery_view:
        type: boolean
        description: Record the gallery view with a shared screen.
      record_audio_file:
        type: boolean
        description: Record an audio only file.
      save_chat_text:
        type: boolean
        description: Save the chat text from the meeting.
      show_timestamp:
        type: boolean
        description: Add a timestamp to the recording.
      recording_audio_transcript:
        type: boolean
        description: Automatically transcribe the audio of the meeting or webinar to the cloud.
      auto_recording:
        type: string
        description: 'Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.'
        enum:
          - local
          - cloud
          - none
        x-enum-descriptions:
          - Record on local
          - Record on cloud
          - Disabled
      cloud_recording_download:
        type: boolean
        description: Cloud recording downloads.
      cloud_recording_download_host:
        type: boolean
        description: Only the host can download cloud recordings.
      account_user_access_recording:
        type: boolean
        description: Cloud recordings are only accessible to account members. People outside of your organization cannot open links that provide access to cloud recordings.
      auto_delete_cmr:
        type: boolean
        description: Allow Zoom to permanantly delete recordings automatically after a specified number of days.
      auto_delete_cmr_days:
        type: integer
        description: When `auto_delete_cmr` function is 'true' this value will set the number of days before the auto deletion of cloud recordings.
      recording_password_requirement:
        type: object
        description: This object represents the minimum password requirements set for recordings via Account Recording Settings.
        properties:
          length:
            type: integer
            description: Minimum required length for the password.
            maximum: 10
          have_letter:
            type: boolean
            description: 'Indicates whether or not password must contain at least one alphabetical letter (a, b, c..).'
          have_number:
            type: boolean
            description: 'Indicates whether or not password must contain at least one number(1, 2, 3..).'
          have_special_character:
            type: boolean
            description: 'Indicates whether or not password must contain at least one special character(!, @, #..).'
          only_allow_numeric:
            type: boolean
            description: Indicates whether or not password must contain only numeric characters.
      allow_recovery_deleted_cloud_recordings:
        type: boolean
        description: |-
          Allow recovery of deleted cloud recordings from trash.
          If the value of this field is set to `true`, deleted cloud recordings will be kept in trash for 30 days after deletion and can be recovered within that period.
      recording_disclaimer:
        type: boolean
        description: |
          Show a disclaimer to participants before a recording starts
      host_delete_cloud_recording:
        type: boolean
        description: |
          If the value of this field is set to `true`, hosts will be able to delete the recordings. If this option is set to `false`, the recordings cannot be deleted by the host and only admin can delete them.
      required_password_for_existing_cloud_recordings:
        type: boolean
        description: Require a passcode to access existing cloud recordings.
      prevent_host_access_recording:
        type: boolean
        description: |
          If set to `true`, meeting hosts cannot view their meeting cloud recordings. Only the admins who have recording management privilege can access them.
      ip_address_access_control:
        type: object
        description: |
          Setting to allow cloud recording access only from specific IP address ranges.
        properties:
          enable:
            type: boolean
            description: |+
              If set to `true`, the cloud recordings of this account can only be accessed by the IP addresses defined in the `ip_addresses_or_ranges` property.

          ip_addresses_or_ranges:
            type: string
            description: |+
              IP addresses or ranges that have access to the cloud recordings. Separate multiple IP ranges with comma. Use n.n.n.n, n.n.n.n/n or n.n.n.n - n.n.n.n syntax where n is a number.

              Example: `46.33.24.184, 48.99.100.2/25` or `200.181.108.17 - 220.181.108.157`

      archive:
        type: object
        description: '[Archiving solution](https://support.zoom.us/hc/en-us/articles/360050431572-Archiving-Meeting-and-Webinar-data) settings. This setting can only be used if you have been granted with archiving solution access by the Zoom support team.'
        properties:
          enable:
            type: boolean
            description: Enable the archiving feature.
          type:
            type: integer
            description: |-
              Archive types:

              * `1`: Only meetings are archived.<br>
              * `2`: Only webinars are archived.<br>
              * `3`: Both meetings and webinars are archived.
            enum:
              - 1
              - 2
              - 3
          settings:
            type: object
            properties:
              chat_file:
                type: boolean
                description: Inlude in-meeeting chat in the archive.
              audio_file:
                type: boolean
                description: Inlude in-meeeting and/or in-webinar audio in the archive.
              video_file:
                type: boolean
                description: Inlude in-meeeting and/or in-webinar video in the archive.
  AccountSettingsTelephony:
    type: object
    description: 'Account Settings: Telephony.'
    properties:
      third_party_audio:
        type: boolean
        description: Users can join the meeting using the existing third party audio configuration.
      audio_conference_info:
        type: string
        description: Third party audio conference info.
      telephony_regions:
        type: object
        description: Indicates where most of the participants call into or call from duriing a meeting.
        properties:
          allowed_values:
            type: array
            description: Telephony region options provided by Zoom to select from.
            items:
              type: string
          selection_values:
            type: array
            description: Telephony regions selected by the account to indicate where most of the participants call into or call from during a meeting.
            items:
              type: string
  AccountSettingsUpdateTelephony:
    type: object
    description: 'Account Settings Update: Telephony.'
    properties:
      third_party_audio:
        type: boolean
        description: Users can join the meeting using the existing third party audio configuration.
      audio_conference_info:
        type: string
        description: Third party audio conference info.
      telephony_regions:
        type: object
        description: Indicates where most of the participants call into or call from duriing a meeting.
        properties:
          selection_values:
            type: array
            description: Telephony regions selected by the account to indicate where most of the participants call into or call from during a meeting.
            items:
              type: string
  AccountSettingsIntegration:
    type: object
    description: 'Account Settings: Integration.'
    properties:
      google_calendar:
        type: boolean
        description: Enable meetings to be scheduled using Google Calendar.
      google_drive:
        type: boolean
        description: Enable users who join a meeting from their mobile device to share content from their Google Drive.
      dropbox:
        type: boolean
        description: Enable users who join a meeting from their mobile device to share content from their Dropbox account.
      box:
        type: boolean
        description: Enable users who join a meeting from their mobile device to share content from their Box account.
      microsoft_one_drive:
        type: boolean
        description: Enable users who join a meeting from their mobile device to share content from their Microsoft OneDrive account.
      kubi:
        type: boolean
        description: Enable users to control a connected Kubi device from within a Zoom meeting.
  AccountSettingsFeature:
    type: object
    description: 'Account Settings: Feature.'
    properties:
      meeting_capacity:
        type: integer
        description: Set the maximum number of participants a host can have in a single meeting.
  DomainsList:
    type: object
    description: List of managed domains.
    properties:
      total_records:
        type: integer
        description: Total records.
      domains:
        type: array
        description: List of managed domain objects.
        items:
          allOf:
            - properties:
                domain:
                  type: string
                  description: Domain name.
                status:
                  type: string
                  description: Domain status.
          type: object
  BillingContact:
    type: object
    description: Billing Contact object.
    properties:
      first_name:
        type: string
        description: Billing Contact's first name.
      last_name:
        type: string
        description: Billing Contact's last name.
      email:
        type: string
        description: Billing Contact's email address.
      phone_number:
        type: string
        description: Billing Contact's phone number.
      address:
        type: string
        description: Billing Contact's address.
      apt:
        type: string
        description: Billing Contact's apartment/suite.
      city:
        type: string
        description: Billing Contact's city.
      state:
        type: string
        description: Billing Contact's state.
      zip:
        type: string
        description: Billing Contact's zip/postal code.
      country:
        type: string
        description: Billing Contact's country.
  BillingContactRequired:
    type: object
    description: Billing Contact object.
    properties:
      first_name:
        type: string
        description: Billing Contact's first name.
      last_name:
        type: string
        description: Billing Contact's last name.
      email:
        type: string
        description: Billing Contact's email address.
      phone_number:
        type: string
        description: Billing Contact's phone number.
      address:
        type: string
        description: Billing Contact's address.
      apt:
        type: string
        description: Billing Contact's apartment/suite.
      city:
        type: string
        description: Billing Contact's city.
      state:
        type: string
        description: Billing Contact's state.
      zip:
        type: string
        description: Billing Contact's zip/postal code.
      country:
        type: string
        description: 'Billing Contact''s Country [ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) in abbreviated format.'
    required:
      - first_name
      - last_name
      - email
      - phone_number
      - address
      - city
      - state
      - zip
      - country
  CustomQuestion:
    type: object
    description: Custom Question.
    properties:
      title:
        type: string
      value:
        type: string
  DateTime:
    type: object
    description: DateTime Object.
    properties:
      from:
        type: string
        format: date
        description: Start Date.
      to:
        type: string
        format: date
        description: End Date.
  Device:
    type: object
    title: The H.323/SIP device object.
    description: The H.323/SIP device object.
    properties:
      name:
        type: string
        description: Device name.
        maxLength: 64
      protocol:
        type: string
        enum:
          - H.323
          - SIP
        x-enum-descriptions:
          - H.323
          - SIP
        description: 'Device protocol:<br>`H.323` - H.323.<br>`SIP` - SIP.'
      ip:
        type: string
        description: Device IP.
      encryption:
        type: string
        enum:
          - auto
          - 'yes'
          - 'no'
        x-enum-descriptions:
          - auto
          - 'yes'
          - 'no'
        description: 'Device encryption:<br>`auto` - auto.<br>`yes` - yes.<br>`no` - no.'
    required:
      - name
      - protocol
      - ip
      - encryption
  DeviceList:
    title: H.323/SIP Device List
    description: List of H.323/SIP Devices.
    allOf:
      - $ref: '#/definitions/Pagination'
      - properties:
          devices:
            type: array
            description: List of H.323/SIP Device objects.
            items:
              allOf:
                - type: object
                  properties:
                    id:
                      type: string
                      description: Device ID.
                - $ref: '#/definitions/Device'
    type: object
  Group:
    type: object
    description: Group object.
    properties:
      name:
        type: string
        description: Group name.
      total_members:
        type: integer
        description: Total number of members in this group.
  GroupList:
    type: object
    description: List of Groups.
    properties:
      total_records:
        type: integer
        description: Total records.
      groups:
        type: array
        description: List of Group objects.
        items:
          allOf:
            - type: object
              properties:
                id:
                  type: string
                  description: Group ID.
            - $ref: '#/definitions/Group'
  GroupMember:
    type: object
    description: Group member object.
    properties:
      id:
        type: string
        description: User ID.
      email:
        type: string
        description: User email.
      first_name:
        type: string
        description: User first name.
      last_name:
        type: string
        description: User last name.
      type:
        type: integer
        description: |-
          User type.<br>
          `1` - Basic<br> `2` - Licensed<br>
          `3` - On-prem
  GroupMemberList:
    title: Group Member List
    description: List of Group Members.
    allOf:
      - $ref: '#/definitions/Pagination'
      - properties:
          members:
            type: array
            description: List of Group member objects.
            items:
              $ref: '#/definitions/GroupMember'
    type: object
  IMGroup:
    description: IM group object.
    allOf:
      - $ref: '#/definitions/Group'
      - properties:
          type:
            type: string
            description: 'IM Group types:<br>`normal` - Only members can see the other members in the group. Other people can search for members in the group.<br>`shared` - Everyone in the account can see the group and members. <br>`restricted` - No one except group members can see the group or search for other group members. '
            default: normal
            enum:
              - normal
              - shared
              - restricted
            x-enum-descriptions:
              - Only members can see the group automatically. Other people can search members in the group.
              - All people in the account can see the group and members automatically
              - Nobody can see the group or search members except the members in the group
          search_by_domain:
            type: boolean
            description: Members can search for others in the same email domain.
          search_by_account:
            type: boolean
            description: Members can search for others under same account.
          search_by_ma_account:
            type: boolean
            description: Members can search for others under same master account - including all sub accounts.
    type: object
  IMGroupList:
    title: IM Group List
    description: List of IM Groups.
    allOf:
      - properties:
          total_records:
            type: integer
            description: Total number of records returned.
      - properties:
          groups:
            type: array
            description: List of group objects.
            items:
              allOf:
                - type: object
                  properties:
                    id:
                      type: string
                      description: IM group ID.
                - $ref: '#/definitions/IMGroup'
    type: object
  Meeting:
    description: Meeting object.
    allOf:
      - $ref: '#/definitions/Session'
    type: object
  MeetingUpdate:
    description: Meeting object
    allOf:
      - $ref: '#/definitions/SessionUpdate'
    type: object
  MeetingInfo:
    type: object
    description: Meeting object
    properties:
      topic:
        type: string
        description: Meeting topic
        maxLength: 200
      type:
        type: integer
        description: Meeting Type
        default: 2
        enum:
          - 1
          - 2
          - 3
          - 8
        x-enum-descriptions:
          - Instant Meeting
          - Scheduled Meeting
          - Recurring Meeting with no fixed time
          - Recurring Meeting with fixed time
      start_time:
        type: string
        format: date-time
        description: 'Meeting start date-time in UTC/GMT. Example: "2020-03-31T12:02:00Z"'
      duration:
        type: integer
        description: Meeting duration
      timezone:
        type: string
        description: Timezone to format start_time
      created_at:
        type: string
        format: date-time
        description: The date and time at which this meeting was created.
      agenda:
        type: string
        description: Agenda
      start_url:
        type: string
        description: URL to start the meeting. This URL should only be used by the host of the meeting and **should not be shared with anyone other than the host** of the meeting as anyone with this URL will be able to login to the Zoom Client as the host of the meeting.
      join_url:
        type: string
        description: URL for participants to join the meeting. This URL should only be shared with users that you would like to invite for the meeting.
      password:
        type: string
        description: |+
          Meeting password. Password may only contain the following characters: `[a-z A-Z 0-9 @ - _ * !]`

          If "Require a password when scheduling new meetings" setting has been **enabled** **and** [locked](https://support.zoom.us/hc/en-us/articles/115005269866-Using-Tiered-Settings#locked) for the user, the password field will be autogenerated in the response even if it is not provided in the API request.


      h323_password:
        type: string
        description: H.323/SIP room system password
      pmi:
        type: integer
        description: Personal Meeting Id. Only used for scheduled meetings and recurring meetings with no fixed time.
        format: int64
      tracking_fields:
        type: array
        description: Tracking fields
        items:
          type: object
          properties:
            field:
              type: string
              description: Label of the tracking field.
            value:
              type: string
              description: Value for the field.
            visible:
              type: boolean
              description: |-
                Indicates whether the [tracking field](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields) is visible in the meeting scheduling options in the Zoom Web Portal or not.

                `true`: Tracking field is visible. <br>

                `false`: Tracking field is not visible to the users in the meeting options in the Zoom Web Portal but the field was used while scheduling this meeting via API. An invisible tracking field can be used by users while scheduling meetings via API only.
      occurrences:
        $ref: '#/definitions/Occurrences'
      settings:
        $ref: '#/definitions/MeetingSettings'
      recurrence:
        $ref: '#/definitions/Recurrence'
  MeetingInfoGet:
    type: object
    description: Meeting object.
    properties:
      topic:
        type: string
        description: Meeting topic.
      type:
        type: integer
        description: |-
          Meeting Types:<br>`1` - Instant meeting.<br>`2` - Scheduled meeting.<br>`3` - Recurring meeting with no fixed time.<br>`4` - PMI Meeting<br>
          `8` - Recurring meeting with a fixed time.
        default: 2
        enum:
          - 1
          - 2
          - 3
          - 8
        x-enum-descriptions:
          - Instant Meeting
          - Scheduled Meeting
          - Recurring Meeting with no fixed time
          - Recurring Meeting with fixed time
      status:
        type: string
        description: Meeting status
        enum:
          - waiting
          - started
      start_time:
        type: string
        format: date-time
        description: |
          Meeting start time in GMT/UTC. Start time will not be returned if the meeting is an **instant** meeting.
      duration:
        type: integer
        description: Meeting duration.
      timezone:
        type: string
        description: Timezone to format the meeting start time on the .
      created_at:
        type: string
        format: date-time
        description: 'Time of creation. '
      agenda:
        type: string
        description: Meeting description
        maxLength: 2000
      start_url:
        type: string
        description: "<br><aside>The <code>start_url</code> of a Meeting is a URL using which a host or an alternative host can start the Meeting. \n\nThe expiration time for the <code>start_url</code> field listed in the response of [Create a Meeting API](https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/meetingcreate) is two hours for all regular users. \n\t\nFor users created using the <code>custCreate</code> option via the [Create Users](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usercreate) API, the expiration time of the <code>start_url</code> field is 90 days.\n\t\nFor security reasons, to retrieve the updated value for the <code>start_url</code> field programmatically (after the expiry time), you must call the [Retrieve a Meeting API](https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/meeting) and refer to the value of the <code>start_url</code> field in the response.</aside><br>This URL should only be used by the host of the meeting and **should not be shared with anyone other than the host** of the meeting as anyone with this URL will be able to login to the Zoom Client as the host of the meeting."
      join_url:
        type: string
        description: URL for participants to join the meeting. This URL should only be shared with users that you would like to invite for the meeting.
      password:
        type: string
        description: Meeting passcode.
        minimum: 8
      h323_password:
        type: string
        description: H.323/SIP room system passcode.
      encrypted_password:
        type: string
        description: Encrypted passcode for third party endpoints (H323/SIP).
      pmi:
        type: integer
        description: Personal Meeting Id. Only used for scheduled meetings and recurring meetings with no fixed time.
        format: int64
      tracking_fields:
        type: array
        description: Tracking fields
        items:
          type: object
          properties:
            field:
              type: string
              description: Label of the tracking field.
            value:
              type: string
              description: Value for the field.
            visible:
              type: boolean
              description: |-
                Indicates whether the [tracking field](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields) is visible in the meeting scheduling options in the Zoom Web Portal or not.

                `true`: Tracking field is visible. <br>

                `false`: Tracking field is not visible to the users when they look at the meeting details in the Zoom Web Portal but the field was used while scheduling this meeting via API. An invisible tracking field can be used by users while scheduling meetings via API only.
      occurrences:
        $ref: '#/definitions/Occurrences'
      settings:
        $ref: '#/definitions/MeetingSettings'
      recurrence:
        $ref: '#/definitions/Recurrence'
  MeetingList:
    title: Group List
    description: List of meetings.
    allOf:
      - $ref: '#/definitions/Pagination'
      - properties:
          meetings:
            type: array
            description: List of Meeting objects.
            items:
              allOf:
                - properties:
                    uuid:
                      type: string
                      description: Unique Meeting ID. Each meeting instance will generate its own Meeting UUID.
                    id:
                      type: integer
                      description: Meeting ID - also known as the meeting number in double (int64) format.
                      format: int64
                    host_id:
                      type: string
                      description: ID of the user who is set as the host of the meeting.
                    topic:
                      type: string
                      description: Meeting topic.
                    type:
                      type: integer
                      description: 'Meeting Types:<br>`1` - Instant meeting.<br>`2` - Scheduled meeting.<br>`3` - Recurring meeting with no fixed time.<br>`8` - Recurring meeting with fixed time.'
                      enum:
                        - 1
                        - 2
                        - 3
                        - 8
                      x-enum-descriptions:
                        - Instant Meeting
                        - Scheduled Meeting
                        - Recurring Meeting with no fixed time
                        - Recurring Meeting with fixed time
                    start_time:
                      type: string
                      format: date-time
                      description: Meeting start time.
                    duration:
                      type: integer
                      description: Meeting duration.
                    timezone:
                      type: string
                      description: 'Timezone to format the meeting start time. '
                    created_at:
                      type: string
                      format: date-time
                      description: 'Time of creation. '
                    join_url:
                      type: string
                      description: Join URL.
                    agenda:
                      type: string
                      description: 'Meeting description. The length of agenda gets truncated to 250 characters when you list all meetings for a user. To view the complete agenda of a meeting, retrieve details for a single meeting [here](https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/meeting).'
              type: object
    type: object
  MeetingMetric:
    type: object
    title: Meeting Metrics
    description: Meeting metric details.
    properties:
      uuid:
        type: string
        format: uuid
        description: Meeting UUID. Please double encode your UUID when using it for API calls if the UUID begins with a '/'or contains '//' in it.
      id:
        type: integer
        description: '[Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in "**long**" format(represented as int64 data type in JSON), also known as the meeting number.'
        format: int64
      topic:
        type: string
        description: Meeting topic.
      host:
        type: string
        description: Host display name.
      email:
        type: string
        description: Email address of the host.
      user_type:
        type: string
        description: License type of the user.
      start_time:
        type: string
        format: date-time
        description: Meeting start time.
      end_time:
        type: string
        format: date-time
        description: Meeting end time.
      duration:
        type: string
        description: Meeting duration.
      participants:
        type: integer
        description: Meeting participant count.
      has_pstn:
        type: boolean
        description: Indicates whether or not the PSTN was used in the meeting.
      has_voip:
        type: boolean
        description: Indicates whether or not VoIP was used in the meeting.
      has_3rd_party_audio:
        type: boolean
        description: 'Indicates whether or not [third party audio](https://support.zoom.us/hc/en-us/articles/202470795-3rd-Party-Audio-Conference) was used in the meeting.'
      has_video:
        type: boolean
        description: Indicates whether or not video was used in the meeting.
      has_screen_share:
        type: boolean
        description: Indicates whether or not screenshare feature was used in the meeting.
      has_recording:
        type: boolean
        description: 'Indicates whether or not the recording feature was used in the meeting. '
      has_sip:
        type: boolean
        description: Indicates whether or not someone joined the meeting using SIP.
      in_room_participants:
        type: integer
        description: The number of Zoom Room participants in the meeting.
      dept:
        type: string
        description: Department of the host.
      custom_keys:
        type: array
        maxItems: 10
        description: Custom keys and values assigned to the meeting.
        items:
          type: object
          properties:
            key:
              type: string
              description: Custom key associated with the meetinh.
              maxLength: 64
            value:
              type: string
              description: Value of the custom key associated with the meeting.
              maxLength: 256
  MeetingInvitation:
    type: object
    title: Meeting Invitation
    description: Meeting invitation details.
    properties:
      invitation:
        type: string
        description: Meeting invitation.
  MeetingSettings:
    type: object
    description: Meeting settings.
    properties:
      host_video:
        type: boolean
        description: Start video when the host joins the meeting.
      participant_video:
        type: boolean
        description: Start video when participants join the meeting.
      cn_meeting:
        type: boolean
        description: Host meeting in China.
        default: false
      in_meeting:
        type: boolean
        description: Host meeting in India.
        default: false
      join_before_host:
        type: boolean
        description: Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings.
        default: false
      jbh_time:
        type: integer
        description: |-
          If the value of "join_before_host" field is set to true, this field can be used to indicate time limits within which a participant may join a meeting before a host. The value of this field can be one of the following:

          *  `0`: Allow participant to join anytime.
          *  `5`: Allow participant to join 5 minutes before meeting start time.
           * `10`: Allow participant to join 10 minutes before meeting start time.
        enum:
          - 0
          - 5
          - 10
      mute_upon_entry:
        type: boolean
        description: Mute participants upon entry.
        default: false
      watermark:
        type: boolean
        description: Add watermark when viewing a shared screen.
        default: false
      use_pmi:
        type: boolean
        description: Use a personal meeting ID. Only used for scheduled meetings and recurring meetings with no fixed time.
        default: false
      approval_type:
        type: integer
        default: 2
        description: |-
          Enable registration and set approval for the registration. Note that this feature requires the host to be of **Licensed** user type. **Registration cannot be enabled for a basic user.** <br><br>

          `0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.
        enum:
          - 0
          - 1
          - 2
        x-enum-descriptions:
          - Automatically Approve
          - Manually Approve
          - No Registration Required
      registration_type:
        type: integer
        description: Registration type. Used for recurring meeting with fixed time only. <br>`1` Attendees register once and can attend any of the occurrences.<br>`2` Attendees need to register for each occurrence to attend.<br>`3` Attendees register once and can choose one or more occurrences to attend.
        default: 1
        enum:
          - 1
          - 2
          - 3
        x-enum-descriptions:
          - Attendees register once and can attend any of the occurrences
          - Attendees need to register for each occurrence to attend
          - Attendees register once and can choose one or more occurrences to attend
      audio:
        type: string
        description: Determine how participants can join the audio portion of the meeting.<br>`both` - Both Telephony and VoIP.<br>`telephony` - Telephony only.<br>`voip` - VoIP only.
        default: both
        enum:
          - both
          - telephony
          - voip
        x-enum-descriptions:
          - Both Telephony and VoIP
          - Telephony only
          - VoIP only
      auto_recording:
        type: string
        description: 'Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.'
        default: none
        enum:
          - local
          - cloud
          - none
        x-enum-descriptions:
          - Record to local device
          - Record to cloud
          - No Recording
      enforce_login:
        type: boolean
        description: |-
          Only signed in users can join this meeting.

          **This field is deprecated and will not be supported in the future.**  <br><br>As an alternative, use the "meeting_authentication", "authentication_option" and "authentication_domains" fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the meeting.
      enforce_login_domains:
        type: string
        description: |-
          Only signed in users with specified domains can join meetings.

          **This field is deprecated and will not be supported in the future.**  <br><br>As an alternative, use the "meeting_authentication", "authentication_option" and "authentication_domains" fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the meeting.
      alternative_hosts:
        type: string
        description: 'Alternative host''s emails or IDs: multiple values are separated by a semicolon.'
      close_registration:
        type: boolean
        description: Close registration after event date
        default: false
      waiting_room:
        type: boolean
        description: Enable waiting room
        default: false
      global_dial_in_countries:
        type: array
        description: List of global dial-in countries
        items:
          type: string
      global_dial_in_numbers:
        type: array
        description: Global Dial-in Countries/Regions
        items:
          type: object
          properties:
            country:
              type: string
              description: 'Country code. For example, BR.'
            country_name:
              type: string
              description: 'Full name of country. For example, Brazil.'
            city:
              type: string
              description: 'City of the number, if any. For example, Chicago.'
            number:
              type: string
              description: 'Phone number. For example, +1 2332357613.'
            type:
              type: string
              description: 'Type of number. '
              enum:
                - toll
                - tollfree
      contact_name:
        type: string
        description: Contact name for registration
      contact_email:
        type: string
        description: Contact email for registration
      registrants_confirmation_email:
        type: boolean
        description: Send confirmation email to registrants upon successful registration.
      registrants_email_notification:
        type: boolean
        description: 'Send email notifications to registrants about approval, cancellation, denial of the registration. The value of this field must be set to true in order to use the `registrants_confirmation_email` field.'
      meeting_authentication:
        type: boolean
        description: '`true`- Only authenticated users can join meetings.'
      authentication_option:
        type: string
        description: Meeting authentication option id.
      authentication_domains:
        type: string
        description: 'If user has configured ["Sign Into Zoom with Specified Domains"](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f) option, this will list the domains that are authenticated.'
      authentication_name:
        type: string
        description: 'Authentication name set in the [authentication profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f).'
      show_share_button:
        type: boolean
        description: |-
          Show social share buttons on the meeting registration page.
          This setting only works for meetings that require [registration](https://support.zoom.us/hc/en-us/articles/211579443-Setting-up-registration-for-a-meeting).
      allow_multiple_devices:
        type: boolean
        description: 'Allow attendees to join the meeting from multiple devices. This setting only works for meetings that require [registration](https://support.zoom.us/hc/en-us/articles/211579443-Setting-up-registration-for-a-meeting).'
      encryption_type:
        type: string
        description: |-
          Choose between enhanced encryption and [end-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871) when starting or a meeting. When using end-to-end encryption, several features (e.g. cloud recording, phone/SIP/H.323 dial-in) will be **automatically disabled**. <br><br>The value of this field can be one of the following:<br>
          `enhanced_encryption`: Enhanced encryption. Encryption is stored in the cloud if you enable this option. <br>

          `e2ee`: [End-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871). The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also **disables** the following features: join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions.
        enum:
          - enhanced_encryption
          - e2ee
      approved_or_denied_countries_or_regions:
        type: object
        description: |
          Approve or block users from specific regions/countries from joining this meeting.
        properties:
          enable:
            type: boolean
            description: |-
              `true`: Setting enabled to either allow users or block users from specific regions to join your meetings. <br>

              `false`: Setting disabled.
          method:
            type: string
            enum:
              - approve
              - deny
            description: |-
              Specify whether to allow users from specific regions to join this meeting; or block users from specific regions from joining this meeting. <br><br>
              `approve`: Allow users from specific regions/countries to join this meeting. If this setting is selected, the approved regions/countries must be included in the `approved_list`.<br><br>
              `deny`: Block users from specific regions/countries from joining this meeting. If this setting is selected, the approved regions/countries must be included in the `denied_list`
          approved_list:
            type: array
            description: 'List of countries/regions from where participants can join this meeting. '
            items:
              type: string
          denied_list:
            type: array
            description: 'List of countries/regions from where participants can not join this meeting. '
            items:
              type: string
      authentication_exception:
        type: array
        description: The participants added here will receive unique meeting invite links and bypass authentication.
        items:
          type: object
          properties:
            name:
              type: string
              description: Name of the participant.
            email:
              type: string
              description: Email address of the participant.
              format: email
      breakout_room:
        type: object
        description: 'Setting to [pre-assign breakout rooms](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4).'
        properties:
          enable:
            type: boolean
            description: 'Set the value of this field to `true` if you would like to enable the [breakout room pre-assign](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4) option.'
          rooms:
            type: array
            description: Create room(s).
            items:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the breakout room.
                participants:
                  type: array
                  description: Email addresses of the participants who are to be assigned to the breakout room.
                  items:
                    type: string
      language_interpretation:
        type: object
        properties:
          enable:
            type: boolean
          interpreters:
            type: array
            description: Information associated with the interpreter.
            items:
              type: object
              properties:
                email:
                  type: string
                  description: Email address of the interpreter.
                  format: email
                languages:
                  type: string
                  description: |-
                    Languages for interpretation. The string must contain two [country Ids](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) separated by a comma.

                    For example, if the language is to be interpreted from English to Chinese, the value of this field should be "US,CN".
      custom_keys:
        type: array
        maxItems: 10
        description: Custom keys and values assigned to the meeting.
        items:
          type: object
          properties:
            key:
              type: string
              description: Custom key associated with the user.
              maxLength: 64
            value:
              type: string
              description: Value of the custom key associated with the user.
              maxLength: 256
      alternative_hosts_email_notification:
        type: boolean
        description: 'Flag to determine whether to send email notifications to alternative hosts, default value is true.'
        default: true
  MeetingRegistrant:
    description: ' Registrant.'
    allOf:
      - $ref: '#/definitions/Registrant'
    type: object
  MeetingRegistrantList:
    title: Registration List
    description: List of users.
    allOf:
      - $ref: '#/definitions/RegistrantList'
    type: object
  MeetingRecordingRegistrantList:
    type: object
    title: Registration List
    description: List of meeting recording registrant
    allOf:
      - $ref: '#/definitions/RecordingRegistrantList'
  MeetingLiveStream:
    type: object
    description: Meeting live stream.
    properties:
      stream_url:
        type: string
        maxLength: 1024
        description: Streaming URL.
      stream_key:
        type: string
        maxLength: 512
        description: Stream name and key.
      page_url:
        type: string
        description: The livestream page URL.
        format: uri
        maxLength: 1024
    required:
      - stream_url
      - stream_key
  MeetingLiveStreamStatus:
    type: object
    description: Meeting live stream status.
    properties:
      action:
        type: string
        description: |-
          Update the status of a livestream.

          The value can be one of the following:<br>
          `start`: Start a live stream. <br>
          `stop`: Stop an ongoing live stream.
        enum:
          - start
          - stop
        x-enum-descriptions:
          - Start a meeting live stream.
          - Stop a meeting live stream.
      settings:
        type: object
        description: Update the settings of a live streaming session. The settings can only be updated for a live stream that has been stopped. You can not update the settings of an ongoing live stream.
        properties:
          active_speaker_name:
            type: boolean
            description: Display the name of the active speaker during a live stream.
          display_name:
            type: string
            minLength: 1
            maxLength: 50
            description: Display name of the live stream.
  MeetingInstances:
    title: Meeting instances
    description: List of Meetings
    allOf:
      - properties:
          meetings:
            type: array
            description: List of ended meeting instances.
            items:
              allOf:
                - properties:
                    uuid:
                      type: string
                      description: |+
                        Meeting UUID. Unique meeting ID. Each meeting instance will generate its own Meeting UUID (i.e., after a meeting ends, a new UUID will be generated for the next instance of the meeting). Please double encode your UUID when using it for API calls if the UUID begins with a '/'or contains '//' in it.

                    start_time:
                      type: string
                      format: date-time
                      description: Start time
              type: object
    type: object
  Occurrence:
    type: object
    description: Occurence object. This object is only returned for Recurring Webinars.
    properties:
      occurrence_id:
        type: string
        description: 'Occurrence ID: Unique Identifier that identifies an occurrence of a recurring webinar. [Recurring webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar) can have a maximum of 50 occurrences.'
      start_time:
        type: string
        format: date-time
        description: Start time.
      duration:
        type: integer
        description: Duration.
      status:
        type: string
        description: Occurrence status.
  Occurrences:
    type: array
    description: Array of occurrence objects.
    items:
      $ref: '#/definitions/Occurrence'
  Pagination:
    type: object
    description: Pagination Object.
    properties:
      page_count:
        type: integer
        description: The number of pages returned for the request made.
      page_number:
        type: integer
        description: |-
          **Deprecated**: This field has been deprecated. Please use the "next_page_token" field for pagination instead of this field.

          The page number of the current results.
        default: 1
      page_size:
        type: integer
        description: The number of records returned with a single API call.
        default: 30
        maximum: 300
      total_records:
        type: integer
        description: The total number of all the records available across pages.
      next_page_token:
        type: string
        description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
  PaginationToken:
    type: object
    description: Pagination object.
    properties:
      page_count:
        type: integer
        description: The number of pages returned for the request made.
      page_size:
        type: integer
        description: The number of records returned within a single API call.
        default: 30
        maximum: 300
      total_records:
        type: integer
        description: The number of all records available across pages.
      next_page_token:
        description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
        type: string
  PaginationToken4Qos:
    type: object
    description: Pagination object.
    properties:
      page_count:
        type: integer
        format: int64
        description: The number of pages returned for the request made.
      page_size:
        type: integer
        description: The number of items per page.
        default: 1
        maximum: 10
      total_records:
        type: integer
        format: int64
        description: The number of all records available across pages.
      next_page_token:
        description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.
        type: string
  PaginationToken4IMChat:
    type: object
    description: Pagination object.
    properties:
      page_size:
        type: integer
        description: 'The amount of records returns within a single API call. '
        default: 30
        maximum: 300
      next_page_token:
        description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of the available result list exceeds the page size. The expiration period is 15 minutes.
        type: string
  Panelist:
    type: object
    description: Panelist base object.
    properties:
      name:
        type: string
        description: Panelist's full name.
      email:
        type: string
        description: Panelist's email.
        format: email
  PanelistList:
    type: object
    title: Panelist List
    description: List of panelists.
    properties:
      total_records:
        type: integer
        description: Total records.
      panelists:
        type: array
        description: List of panelist objects.
        items:
          allOf:
            - type: object
              properties:
                id:
                  type: string
                  description: Panelist's ID.
            - $ref: '#/definitions/Panelist'
            - type: object
              properties:
                join_url:
                  type: string
                  description: Join URL.
  QOSAudio:
    type: object
    title: QOS Object
    description: Quality of Service object.
    properties:
      bitrate:
        type: string
        description: The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
      latency:
        type: string
        description: 'The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds. '
      jitter:
        type: string
        description: 'The variation in the delay of received packets. The value of this field is expressed in milliseconds. '
      avg_loss:
        type: string
        description: 'The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination. '
      max_loss:
        type: string
        description: 'Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.'
  QOSParticipantList:
    title: Participant QOS List
    description: Participant QOS list.
    allOf:
      - $ref: '#/definitions/PaginationToken4Qos'
      - properties:
          participants:
            type: array
            description: Array of user objects.
            items:
              $ref: '#/definitions/QOSParticipant'
    type: object
  QOSVideo:
    title: QOS Object
    description: Quality of service object.
    allOf:
      - $ref: '#/definitions/QOSAudio'
      - properties:
          resolution:
            type: string
            description: The number of pixels in each dimension that can be displayed by your video camera.
          frame_rate:
            type: string
            description: 'The rate at which your video camera can produce unique images, or frames. Zoom supports a frame rate of up to 30fps.'
    type: object
  Recording:
    type: object
    description: Recording file object.
    properties:
      id:
        type: string
        description: The recording file ID. Included in the response of general query.
      meeting_id:
        type: string
        description: 'The meeting ID. '
      recording_start:
        type: string
        description: The recording start time.
      recording_end:
        type: string
        description: The recording end time. Response in general query.
      file_type:
        type: string
        description: "The recording file type. The value of this field could be one of the following:<br>\n`MP4`: Video file of the recording.<br>`M4A` Audio-only file of the recording.<br>`TIMELINE`: Timestamp file of the recording in JSON file format. To get a timeline file, the \"Add a timestamp to the recording\" setting must be enabled in the [recording settings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-recording#h_3f14c3a4-d16b-4a3c-bbe5-ef7d24500048). The time will display in the host's timezone, set on their Zoom profile.\n<br> `TRANSCRIPT`: Transcription file of the recording in VTT format.<br> `CHAT`: A TXT file containing in-meeting chat messages that were sent during the meeting.<br>`CC`: File containing closed captions of the recording in VTT file format.<br>`CSV`: File containing polling data in csv format.\n\n<br>\n\nA recording file object with file type of either `CC` or `TIMELINE` **does not have** the following properties:<br>\n\t`id`, `status`, `file_size`, `recording_type`, and `play_url`."
      file_size:
        type: number
        description: The recording file size.
      play_url:
        type: string
        description: The URL using which a recording file can be played.
      download_url:
        type: string
        description: |+
          The URL using which the recording file can be downloaded. **To access a private or password protected cloud recording of a user in your account, you can use a [Zoom JWT App Type](https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-jwt-app). Use the generated JWT token as the value of the `access_token` query parameter and include this query parameter at the end of the URL as shown in the example.**
          <br>
          Example: `https://api.zoom.us/recording/download/{{ Download Path }}?access_token={{ JWT Token }}`

          **Similarly, if the user has installed your OAuth app that contains recording scope(s), you can also use the user's [OAuth access token](https://marketplace.zoom.us/docs/guides/auth/oauth) to download the Cloud Recording.**<br>

          Example: `https://api.zoom.us/recording/download/{{ Download Path }}?access_token={{ OAuth Access Token }}`

      status:
        type: string
        description: The recording status.
        enum:
          - completed
      deleted_time:
        type: string
        description: The time at which recording was deleted. Returned in the response only for trash query.
      recording_type:
        type: string
        description: 'The recording type. The value of this field can be one of the following:<br>`shared_screen_with_speaker_view(CC)`<br>`shared_screen_with_speaker_view`<br>`shared_screen_with_gallery_view`<br>`speaker_view`<br>`gallery_view`<br>`shared_screen`<br>`audio_only`<br>`audio_transcript`<br>`chat_file`<br>`active_speaker`<br>`poll`'
  RecordingList:
    title: Recording file List
    description: List of recording file.
    allOf:
      - properties:
          recording_files:
            type: array
            title: Recording file List
            description: List of recording file.
            items:
              allOf:
                - $ref: '#/definitions/Recording'
    type: object
  RecordingMeeting:
    description: The recording meeting object.
    allOf:
      - properties:
          uuid:
            type: string
            description: Unique Meeting Identifier. Each instance of the meeting will have its own UUID.
          id:
            type: string
            description: Meeting ID - also known as the meeting number.
          account_id:
            type: string
            description: Unique Identifier of the user account.
          host_id:
            type: string
            description: ID of the user set as host of meeting.
          topic:
            type: string
            description: Meeting topic.
          start_time:
            type: string
            format: date-time
            description: The time at which the meeting started.
          duration:
            type: integer
            description: Meeting duration.
          total_size:
            type: string
            description: Total size of the recording.
          type:
            type: string
            description: |-
              Type of the meeting that was recorded.

              Meeting Types:<br>`1` - Instant meeting.<br>`2` - Scheduled meeting.<br>`3` - Recurring meeting with no fixed time.<br>`8` - Recurring meeting with fixed time.
          recording_count:
            type: string
            description: Number of recording files returned in the response of this API call.
      - $ref: '#/definitions/RecordingList'
    type: object
  RecordingMeetingList:
    title: Recording List
    description: List of recordings.
    allOf:
      - $ref: '#/definitions/DateTime'
      - $ref: '#/definitions/PaginationToken'
      - properties:
          meetings:
            type: array
            title: Recording List
            description: List of recordings.
            items:
              allOf:
                - $ref: '#/definitions/RecordingMeeting'
    type: object
  RecordingSettings:
    title: Recording settings
    type: object
    properties:
      share_recording:
        type: string
        description: Determine how the meeting recording is shared.
        enum:
          - publicly
          - internally
          - none
        x-enum-descriptions:
          - Publicly
          - Internally(account members only)
          - None
      recording_authentication:
        type: boolean
        description: Only authenticated users can view.
      authentication_option:
        type: string
        description: Authentication Options.
      authentication_domains:
        type: string
        description: Authentication domains.
      viewer_download:
        type: boolean
        description: Determine whether a viewer can download the recording file or not.
      password:
        type: string
        description: |-
          Enable password protection for the recording by setting a password. The password must have a minimum of **eight** characters with a mix of numbers, letters and special characters.<br><br>
          **Note:** If the account owner or the admin has set minimum password strength requirements for recordings via Account Settings, the password value provided here must meet those requirements. <br><br>If the requirements are enabled, you can view those requirements by calling either the [Get User Settings API](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usersettings) or the [Get Account Settings](https://marketplace.zoom.us/docs/api-reference/zoom-api/accounts/accountsettings) API.
        minLength: 8
        maxLength: 10
      on_demand:
        type: boolean
        description: Determine whether registration  isrequired to view the recording.
      approval_type:
        type: integer
        description: |-
          Approval type for the registration.<br>
          `0`- Automatically approve the registration when a user registers.<br>
          `1` - Manually approve or deny the registration of a user.<br>
          `2` - No registration required to view the recording.
        enum:
          - 0
          - 1
          - 2
        x-enum-descriptions:
          - Registrants can watch the recording directly after registration
          - Registrants will receive emails then watch the recording after you approve the registration
          - Disabled
      send_email_to_host:
        type: boolean
        description: Send an email to host when someone registers to view the recording. This applies for On-demand recordings only.
      show_social_share_buttons:
        type: boolean
        description: Show social share buttons on registration page. This applies for On-demand recordings only.
      topic:
        type: string
        description: Name of the recording.
  RecordingRegistrantStatus:
    type: object
    description: Registrant Status
    required:
      - action
    properties:
      action:
        type: string
        enum:
          - approve
          - deny
        x-enum-descriptions:
          - Approve registrant
          - Deny registrant
      registrants:
        type: array
        description: List of registrants
        maximum: 30
        items:
          properties:
            id:
              type: string
  Recurrence:
    type: object
    description: 'Recurrence object. Use this object only for a meeting with type `8` i.e., a recurring meeting with fixed time. '
    properties:
      type:
        type: integer
        description: 'Recurrence meeting types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.'
        enum:
          - 1
          - 2
          - 3
        x-enum-descriptions:
          - Daily
          - Weekly
          - Monthly
      repeat_interval:
        type: integer
        description: |+
          Define the interval at which the meeting should recur. For instance, if you would like to schedule a meeting that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`.

          For a daily meeting, the maximum interval you can set is `90` days. For a weekly meeting the maximum interval that you can set is  of `12` weeks. For a monthly meeting, there is a maximum of `3` months.

      weekly_days:
        type: string
        description: |-
          This field is required **if you're scheduling a recurring meeting of type** `2` to state which day(s) of the week the meeting should repeat. <br> <br> The value for this field could be a number between `1` to `7` in string format. For instance, if the meeting should recur on Sunday, provide `"1"` as the value of this field.<br><br> **Note:** If you would like the meeting to occur on multiple days of a week, you should provide comma separated values for this field. For instance, if the meeting should recur on Sundays and Tuesdays provide `"1,3"` as the value of this field.

           <br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.
        enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
        default: '1'
      monthly_day:
        type: integer
        description: |-
          Use this field **only if you're scheduling a recurring meeting of type** `3` to state which day in a month, the meeting should recur. The value range is from 1 to 31.

          For instance, if you would like the meeting to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the meeting to recur every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`.
        default: 1
      monthly_week:
        type: integer
        description: 'Use this field **only if you''re scheduling a recurring meeting of type** `3` to state the week of the month when the meeting should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the meeting should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.'
        enum:
          - -1
          - 1
          - 2
          - 3
          - 4
        x-enum-descriptions:
          - Last week
          - First week
          - Second week
          - Third week
          - Fourth week
      monthly_week_day:
        type: integer
        description: |-
          Use this field **only if you're scheduling a recurring meeting of type** `3` to state a specific day in a week when the monthly meeting should recur. To use this field, you must also use the `monthly_week` field.

          <br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.
        enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
        x-enum-descriptions:
          - Sunday
          - Monday
          - Tuesday
          - Wednesday
          - Thursday
          - Friday
          - Saturday
      end_times:
        type: integer
        description: Select how many times the meeting should recur before it is canceled. (Cannot be used with "end_date_time".)
        default: 1
        maximum: 365
      end_date_time:
        type: string
        description: 'Select the final date on which the meeting will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with "end_times".)'
        format: date-time
    required:
      - type
  Registrant:
    type: object
    description: Registrant base object.
    properties:
      email:
        type: string
        description: A valid email address of the registrant.
        maxLength: 128
      first_name:
        type: string
        description: Registrant's first name.
        maxLength: 64
      last_name:
        type: string
        description: Registrant's last name.
        maxLength: 64
      address:
        type: string
        description: Registrant's address.
      city:
        type: string
        description: Registrant's city.
      country:
        type: string
        description: 'Registrant''s country. The value of this field must be in two-letter abbreviated form and must match the ID field provided in the [Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) table.'
      zip:
        type: string
        description: Registrant's Zip/Postal Code.
      state:
        type: string
        description: Registrant's State/Province.
      phone:
        type: string
        description: Registrant's Phone number.
      industry:
        type: string
        description: Registrant's Industry.
      org:
        type: string
        description: Registrant's Organization.
      job_title:
        type: string
        description: Registrant's job title.
      purchasing_time_frame:
        type: string
        description: |-
          This field can be included to gauge interest of webinar attendees towards buying your product or service.

          Purchasing Time Frame:<br>`Within a month`<br>`1-3 months`<br>`4-6 months`<br>`More than 6 months`<br>`No timeframe`
      role_in_purchase_process:
        type: string
        description: 'Role in Purchase Process:<br>`Decision Maker`<br>`Evaluator/Recommender`<br>`Influencer`<br>`Not involved` '
      no_of_employees:
        type: string
        description: 'Number of Employees:<br>`1-20`<br>`21-50`<br>`51-100`<br>`101-500`<br>`500-1,000`<br>`1,001-5,000`<br>`5,001-10,000`<br>`More than 10,000`'
      comments:
        type: string
        description: A field that allows registrants to provide any questions or comments that they might have.
      custom_questions:
        type: array
        description: Custom questions.
        items:
          $ref: '#/definitions/CustomQuestion'
    required:
      - email
      - first_name
  RegistrantList:
    title: Registration List
    description: List of users.
    allOf:
      - $ref: '#/definitions/Pagination'
      - properties:
          registrants:
            type: array
            description: List of registrant objects.
            items:
              allOf:
                - type: object
                  properties:
                    id:
                      type: string
                      description: Registrant ID.
                - $ref: '#/definitions/MeetingRegistrant'
                - type: object
                  properties:
                    status:
                      type: string
                      description: 'The status of the registrant''s registration. <br> `approved`: User has been successfully approved for the webinar.<br> `pending`:  The registration is still pending.<br> `denied`: User has been denied from joining the webinar.'
                    create_time:
                      type: string
                      format: date-time
                      description: The time at which the registrant registered.
                    join_url:
                      type: string
                      format: string
                      description: The URL using which an approved registrant can join the webinar.
    type: object
  RecordingRegistrantList:
    type: object
    title: Recording Registration List
    description: List of Recording Registration
    allOf:
      - $ref: '#/definitions/Pagination'
      - properties:
          registrants:
            type: array
            description: List of Registrant objects
            items:
              allOf:
                - properties:
                    id:
                      type: string
                - $ref: '#/definitions/MeetingRegistrant'
  RegistrantStatus:
    type: object
    properties:
      action:
        type: string
        enum:
          - approve
          - cancel
          - deny
        x-enum-descriptions:
          - Approve registrant
          - Cancel previously approved registrant
          - Deny registrant
        description: 'Registrant Status:<br>`approve` - Approve registrant.<br>`cancel` - Cancel previously approved registrant''s registration.<br>`deny` - Deny registrant.'
      registrants:
        type: array
        description: List of registrants.
        maximum: 30
        items:
          type: object
          properties:
            id:
              type: string
            email:
              type: string
    required:
      - action
  RoleList:
    type: object
    title: Role List
    description: List of Roles
    allOf:
      - properties:
          total_records:
            type: integer
            description: The number of all records available across pages
          roles:
            type: array
            description: List of Roles objects
            items:
              allOf:
                - properties:
                    id:
                      type: string
                      description: Role Id
                    name:
                      type: string
                      description: Role Name
                    description:
                      type: string
                      description: Role Description
                    total_members:
                      type: integer
                      description: Total members in this role
  RoleMembersList:
    type: object
    title: Role Members List
    description: List of a Role Members
    properties:
      page_count:
        type: integer
        description: The number of pages returned for the request made.
      page_number:
        type: integer
        description: The page number of the current results.
        default: 1
      next_page_token:
        type: string
        description: The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
      page_size:
        type: integer
        default: 30
        description: The number of records returned within a single API call.
        maximum: 300
      total_records:
        type: integer
        description: The total number of all the records available across pages.
      members:
        type: array
        description: List of a Role Members
        items:
          allOf:
            - properties:
                id:
                  type: string
                  description: Member ID
                email:
                  type: string
                  description: Member Email
                first_name:
                  type: string
                  description: Member First Name
                last_name:
                  type: string
                  description: Member Last Name
                type:
                  type: integer
                  description: Member Type
                department:
                  type: string
                  description: Member Department
          type: object
  RoleMembersAdd:
    type: object
    title: Add Role Members
    description: Add Role Members
    properties:
      members:
        type: array
        description: List of Role's members
        maximum: 30
        items:
          properties:
            id:
              type: string
              description: User ID
            email:
              type: string
              description: 'User email address. Must have id or email, if given id, the email is ignored.'
  Session:
    type: object
    description: Base object for sessions.
    properties:
      topic:
        type: string
        description: Meeting topic.
      type:
        type: integer
        description: 'Meeting Type:<br>`1` - Instant meeting.<br>`2` - Scheduled meeting.<br>`3` - Recurring meeting with no fixed time.<br>`8` - Recurring meeting with fixed time.'
        default: 2
        enum:
          - 1
          - 2
          - 3
          - 8
        x-enum-descriptions:
          - Instant Meeting
          - Scheduled Meeting
          - Recurring Meeting with no fixed time
          - Recurring Meeting with fixed time
      start_time:
        type: string
        format: date-time
        description: 'Meeting start time. When using a format like "yyyy-MM-dd''T''HH:mm:ss''Z''", always use GMT time. When using a format like "yyyy-MM-dd''T''HH:mm:ss", you should use local time and specify the time zone. This is only used for scheduled meetings and recurring meetings with a fixed time.'
      duration:
        type: integer
        description: Meeting duration (minutes). Used for scheduled meetings only.
      timezone:
        type: string
        description: 'Time zone to format start_time. For example, "America/Los_Angeles". For scheduled meetings only. Please reference our [time zone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) list for supported time zones and their formats.'
      password:
        type: string
        description: 'Password to join the meeting. Password may only contain the following characters: [a-z A-Z 0-9 @ - _ *]. Max of 10 characters.'
      agenda:
        type: string
        description: Meeting description.
      tracking_fields:
        type: array
        description: Tracking fields
        items:
          properties:
            field:
              type: string
              description: Tracking fields type
            value:
              type: string
              description: Tracking fields value
      recurrence:
        $ref: '#/definitions/Recurrence'
      settings:
        $ref: '#/definitions/MeetingSettings'
  SessionUpdate:
    type: object
    description: Base object for sessions.
    properties:
      topic:
        type: string
        description: Meeting topic.
      type:
        type: integer
        description: 'Meeting Types:<br>`1` - Instant meeting.<br>`2` - Scheduled meeting.<br>`3` - Recurring meeting with no fixed time.<br>`8` - Recurring meeting with a fixed time.'
        default: 2
        enum:
          - 1
          - 2
          - 3
          - 8
        x-enum-descriptions:
          - Instant Meeting
          - Scheduled Meeting
          - Recurring Meeting with no fixed time
          - Recurring Meeting with fixed time
      start_time:
        type: string
        format: date-time
        description: 'Meeting start time. When using a format like "yyyy-MM-dd''T''HH:mm:ss''Z''", always use GMT time. When using a format like "yyyy-MM-dd''T''HH:mm:ss", you should use local time and  specify the time zone. Only used for scheduled meetings and recurring meetings with a fixed time.'
      duration:
        type: integer
        description: Meeting duration (minutes). Used for scheduled meetings only.
      timezone:
        type: string
        description: 'Time zone to format start_time. For example, "America/Los_Angeles". For scheduled meetings only. Please reference our [time zone](#timezones) list for supported time zones and their formats.'
      password:
        type: string
        maxLength: 10
        description: |-
          Meeting passcode. Passcode may only contain the following characters: [a-z A-Z 0-9 @ - _ *] and can have a maximum of 10 characters.

          **Note:** If the account owner or the admin has configured [minimum passcode requirement settings](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604), the passcode value provided here must meet those requirements. <br><br>If the requirements are enabled, you can view those requirements by calling either the [Get User Settings API](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usersettings) or the  [Get Account Settings](https://marketplace.zoom.us/docs/api-reference/zoom-api/accounts/accountsettings) API.
      agenda:
        type: string
        description: Meeting description.
        maxLength: 2000
      template_id:
        type: string
        description: |-
          Unique identifier of the meeting template.

          Use this field if you would like to [schedule the meeting from a meeting template](https://support.zoom.us/hc/en-us/articles/360036559151-Meeting-templates#h_86f06cff-0852-4998-81c5-c83663c176fb). You can retrieve the value of this field by calling the [List meeting templates]() API.
      tracking_fields:
        type: array
        description: Tracking fields
        items:
          type: object
          properties:
            field:
              type: string
              description: Tracking fields type
            value:
              type: string
              description: Tracking fields value
      recurrence:
        $ref: '#/definitions/Recurrence'
      settings:
        allOf:
          - $ref: '#/definitions/MeetingSettings'
          - type: object
            properties:
              registrants_confirmation_email:
                type: boolean
                description: Send confirmation Email to Registrants
  SessionWebinar:
    description: Base webinar object for sessions.
    type: object
    properties:
      topic:
        type: string
        description: Webinar topic.
      type:
        type: integer
        description: 'Webinar Types:<br>`5` - Webinar.<br>`6` - Recurring webinar with no fixed time.<br>`9` - Recurring webinar with a fixed time.'
        default: 5
        enum:
          - 5
          - 6
          - 9
        x-enum-descriptions:
          - Webinar
          - Recurring Webinar with no fixed time
          - Recurring Webinar with fixed time
      start_time:
        type: string
        format: date-time
        description: |-
          Webinar start time. We support two formats for `start_time` - local time and GMT.<br>

          To set time as GMT the format should be `yyyy-MM-dd`T`HH:mm:ssZ`.

          To set time using a specific timezone, use `yyyy-MM-dd`T`HH:mm:ss` format and specify the timezone [ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) in the `timezone` field OR leave it blank and the timezone set on your Zoom account will be used. You can also set the time as UTC as the timezone field.

          The `start_time` should only be used for scheduled and / or recurring webinars with fixed time.
      duration:
        type: integer
        description: Webinar duration (minutes). Used for scheduled webinars only.
      timezone:
        type: string
        description: 'Time zone to format start_time. For example, "America/Los_Angeles". For scheduled meetings only. Please reference our [time zone](#timezones) list for supported time zones and their formats.'
      password:
        type: string
        description: 'Webinar Passcode. Passcode may only contain the following characters: [a-z A-Z 0-9 @ - _ *]. Max of 10 characters.'
      agenda:
        type: string
        description: Webinar description.
      tracking_fields:
        type: array
        description: Tracking fields
        items:
          type: object
          properties:
            field:
              type: string
              description: Tracking fields type
            value:
              type: string
              description: Tracking fields value
      recurrence:
        $ref: '#/definitions/recurrence-webinar'
      settings:
        $ref: '#/definitions/WebinarSettings'
  SessionWebinarUpdate:
    type: object
    description: Base webinar object for sessions.
    properties:
      topic:
        type: string
        description: Webinar topic.
      type:
        type: integer
        description: 'Webinar Types:<br>`5` - webinar.<br>`6` - Recurring webinar with no fixed time.<br>`9` - Recurring webinar with a fixed time.'
        default: 5
        enum:
          - 5
          - 6
          - 9
        x-enum-descriptions:
          - Webinar
          - Recurring Webinar with no fixed time
          - Recurring Webinar with fixed time
      start_time:
        type: string
        format: date-time
        description: 'Webinar start time, in the format "yyyy-MM-dd''T''HH:mm:ss''Z''." Should be in GMT time. In the format "yyyy-MM-dd''T''HH:mm:ss." This should be in local time and the timezone should be specified. Only used for scheduled webinars and recurring webinars with a fixed time.'
      duration:
        type: integer
        description: Webinar duration (minutes). Used for scheduled webinar only.
      timezone:
        type: string
        description: 'Time zone to format start_time. For example, "America/Los_Angeles". For scheduled meetings only. Please reference our [time zone](#timezones) list for supported time zones and their formats.'
      password:
        type: string
        description: |+
          [Webinar passcode](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords). By default, passcode may only contain the following characters: [a-z A-Z 0-9 @ - _ * !] and can have a maximum of 10 characters.

          **Note:** If the account owner or the admin has configured [minimum passcode requirement settings](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604), the passcode value provided here must meet those requirements. <br><br>If the requirements are enabled, you can view those requirements by calling either the [Get User Settings API](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usersettings) or the  [Get Account Settings](https://marketplace.zoom.us/docs/api-reference/zoom-api/accounts/accountsettings) API.

          If "**Require a passcode when scheduling new meetings**" setting has been **enabled** **and** [locked](https://support.zoom.us/hc/en-us/articles/115005269866-Using-Tiered-Settings#locked) for the user, the passcode field will be autogenerated for the Webinar in the response even if it is not provided in the API request. <br><br>







        maxLength: 10
      agenda:
        type: string
        description: Webinar description.
      tracking_fields:
        type: array
        description: Tracking fields
        items:
          type: object
          properties:
            field:
              type: string
              description: Tracking fields type
            value:
              type: string
              description: Tracking fields value
      recurrence:
        $ref: '#/definitions/Recurrence'
      settings:
        allOf:
          - $ref: '#/definitions/WebinarSettings'
          - type: object
            properties:
              registrants_confirmation_email:
                type: boolean
                description: Send confirmation email to registrants.
  TSP:
    type: object
    title: TSP Accounts List
    description: List of TSP accounts.
    properties:
      conference_code:
        type: string
        description: 'Conference code: numeric value, length is less than 16.'
        minLength: 1
        maxLength: 16
      leader_pin:
        type: string
        description: 'Leader PIN: numeric value, length is less than 16.'
        minLength: 1
        maxLength: 16
      dial_in_numbers:
        type: array
        description: List of dial in numbers.
        items:
          type: object
          properties:
            code:
              type: string
              description: Country code.
              maxLength: 6
            number:
              type: string
              description: 'Dial-in number: length is less than 16.'
              minLength: 1
              maxLength: 16
            type:
              type: string
              description: |-
                Dial-in number types:<br>`toll` - Toll number.<br>`tollfree` -Toll free number.<br>
                `media_link` - Media link.
              enum:
                - toll
                - tollfree
                - media_link
              x-enum-descriptions:
                - Toll number <br/>
                - Toll free number <br/>
                - Media link phone number <br/>
            country_label:
              type: string
              description: 'Country Label, if passed, will display in place of code.'
              maxLength: 10
      tsp_bridge:
        type: string
        description: Telephony bridge
        enum:
          - US_TSP_TB
          - EU_TSP_TB
    required:
      - conference_code
      - leader_pin
  PAC:
    type: object
    title: PAC Accounts List
    description: List of PAC accounts.
    properties:
      dedicated_dial_in_number:
        type: array
        description: List of dedicated dial-in numbers.
        items:
          type: object
          properties:
            number:
              type: string
              description: 'Dial-in number: length is less than 16.'
            country:
              type: string
              description: Country code.
      global_dial_in_numbers:
        type: array
        description: List of global dial-in numbers.
        items:
          type: object
          properties:
            number:
              type: string
              description: 'Dial-in number: length is less than 16.'
            country:
              type: string
              description: Country code.
      conference_id:
        type: integer
        description: Conference ID.
      participant_password:
        type: string
        description: 'Participant passcode: numeric value - length is less than 6.'
        minLength: 1
        maxLength: 6
      listen_only_password:
        type: string
        description: 'Listen-Only passcode: numeric value - length is less than 6.'
        maxLength: 6
  User:
    type: object
    description: The user object represents a specific user on Zoom.
    properties:
      first_name:
        type: string
        description: User's first name.
        maxLength: 64
      last_name:
        type: string
        description: User's last name.
        maxLength: 64
      email:
        type: string
        description: User's email address.
        default: john.doe@email.com
      type:
        type: integer
        description: 'User''s plan type:<br>`1` - Basic.<br>`2` - Licensed.<br>`3` - On-prem.<br>`99` - None (this can only be set with `ssoCreate`).'
        enum:
          - 1
          - 2
          - 3
          - 99
      role_name:
        type: string
        description: 'User''s [role](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control) name.'
      pmi:
        type: integer
        description: Personal meeting ID.
        format: int64
      use_pmi:
        type: boolean
        description: Use Personal Meeting ID for instant meetings.
        default: false
      timezone:
        type: string
        description: The time zone of the user.
      dept:
        type: string
        description: Department.
      created_at:
        type: string
        format: date-time
        description: User create time.
      last_login_time:
        type: string
        format: date-time
        description: User last login time.
      last_client_version:
        type: string
        description: User last login client version.
    required:
      - email
      - type
  UserUpdate:
    type: object
    description: The user update object represents a user on Zoom.
    properties:
      first_name:
        type: string
        description: User's first name. Cannot contain more than 5 Chinese characters.
        maxLength: 64
      last_name:
        type: string
        description: User's last name. Cannot contain more than 5 Chinese characters.
        maxLength: 64
      type:
        type: integer
        description: 'User types:<br>`1` - Basic.<br>`2` - Licensed.<br>`3` - On-prem.<br>`99` - None (this can only be set with `ssoCreate`).'
        enum:
          - 1
          - 2
          - 3
          - 99
      pmi:
        type: integer
        description: 'Personal meeting ID: length must be 10.'
        minLength: 10
        maxLength: 10
      use_pmi:
        type: boolean
        description: Use Personal Meeting ID for instant meetings.
        default: false
      timezone:
        type: string
        description: 'The time zone ID for a user profile. For this parameter value please refer to the ID value in the [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) list.'
      language:
        type: string
        description: language
      dept:
        type: string
        description: 'Department for user profile: use for report.'
      vanity_name:
        type: string
        description: Personal meeting room name.
      host_key:
        type: string
        description: Host key. It should be a 6-10 digit number.
        minLength: 6
        maxLength: 10
      cms_user_id:
        type: string
        description: Kaltura user ID.
      job_title:
        type: string
        description: User's job title.
        maxLength: 128
      company:
        type: string
        description: User's company.
        maxLength: 255
      location:
        type: string
        description: User's location.
        maxLength: 256
      phone_number:
        type: string
        description: |-
          **Note:** This field has been **deprecated** and will not be supported in the future. Use the **phone_numbers** field instead to assign phone number(s) to a user.


          Phone number of the user. To update a phone number, you must also provide the `phone_country` field.
      phone_country:
        type: string
        description: |-
          **Note:** This field has been **deprecated** and will not be supported in the future. Use the **country** field of the **phone_numbers** object instead to select the country for the phone number.



          [Country ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) of the phone number. For example, if the phone number provided in the `phone_number` field is a Brazil based number, the value of the `phone_country` field should be `BR`.
      custom_attributes:
        type: object
        description: Custom attribute(s) of the user.
        properties:
          key:
            type: string
            description: Identifier for the custom attribute.
          name:
            type: string
            description: Name of the custom attribute.
          value:
            type: string
            description: Value of the custom attribute.
      group_id:
        type: string
        description: 'Provide unique identifier of the group that you would like to add a [pending user](https://support.zoom.us/hc/en-us/articles/201363183-Managing-users#h_13c87a2a-ecd6-40ad-be61-a9935e660edb) to. The value of this field can be retrieved from [List Groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups) API.'
      phone_numbers:
        type: object
        properties:
          country:
            type: string
            description: '[Country ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) of the phone number. For example, if the phone number provided in the `number` field is a Brazil based number, the value of the `country` field should be `BR`.'
          code:
            type: string
            description: 'Country code of the phone number. For example, for United States phone numbers, the value of this field should be "+1".'
          number:
            type: string
            description: Phone number of the user.
      manager:
        type: string
        description: The manager for the user.
        format: email
  UserList:
    title: User List
    description: List of users.
    allOf:
      - $ref: '#/definitions/Pagination'
      - properties:
          users:
            type: array
            description: List of user objects.
            items:
              allOf:
                - type: object
                  properties:
                    id:
                      type: string
                      description: User ID.
                - $ref: '#/definitions/User'
                - type: object
                  properties:
                    group_ids:
                      type: array
                      items:
                        type: string
                    im_group_ids:
                      type: array
                      items:
                        type: string
    type: object
  UserAssistantsList:
    type: object
    title: User assistants List
    description: List of user's assistants.
    properties:
      assistants:
        type: array
        description: List of User's assistants.
        maximum: 30
        items:
          type: object
          properties:
            id:
              type: string
              description: Assistant's user ID.
            email:
              type: string
              description: Assistant's email address.
  UserSchedulersList:
    type: object
    title: User schedulers List
    description: List of user's schedulers.
    properties:
      schedulers:
        type: array
        description: List of users for whom the current user can schedule meetings.
        maximum: 30
        items:
          type: object
          properties:
            id:
              type: string
              description: Unique Identifier (User ID) of the Scheduler.
            email:
              type: string
              description: Email address of the scheduler.
            pmi:
              type: integer
              format: int64
              description: PMI of the meeting host in long (int64) format.
  UserSettings:
    title: User settings
    type: object
    properties:
      schedule_meeting:
        $ref: '#/definitions/UserSettingsScheduleMeeting'
      in_meeting:
        $ref: '#/definitions/UserSettingsInMeeting'
      email_notification:
        $ref: '#/definitions/UserSettingsEmailNotification'
      recording:
        $ref: '#/definitions/UserSettingsRecording'
      telephony:
        $ref: '#/definitions/UserSettingsTelephony'
      feature:
        $ref: '#/definitions/UserSettingsFeature'
      tsp:
        $ref: '#/definitions/UserSettingsTSP'
      profile:
        $ref: '#/definitions/Profile'
  UserSettingsUpdate:
    title: User settings
    type: object
    properties:
      schedule_meeting:
        $ref: '#/definitions/UserSettingsScheduleMeeting'
      in_meeting:
        $ref: '#/definitions/UserSettingsInMeeting'
      email_notification:
        $ref: '#/definitions/UserSettingsEmailNotification'
      recording:
        $ref: '#/definitions/UserSettingsRecording'
      telephony:
        $ref: '#/definitions/SettingsUpdateTelephony'
      feature:
        $ref: '#/definitions/UserSettingsFeatureUpdate'
      tsp:
        $ref: '#/definitions/UserSettingsTSP'
      profile:
        $ref: '#/definitions/Profile'
  UserSettingsScheduleMeeting:
    title: 'User settings: Meeting settings'
    description: ''
    type: object
    properties:
      host_video:
        type: boolean
        description: Start meetings with host video on.
      participants_video:
        type: boolean
        description: Start meetings with participants video on.
      audio_type:
        type: string
        default: voip
        description: 'Determine how participants can join the audio portion of the meeting:<br>`both` - Telephony and VoIP.<br>`telephony` - Audio PSTN telephony only.<br>`voip` - VoIP only.<br>`thirdParty` - Third party audio conference.'
        enum:
          - both
          - telephony
          - voip
          - thirdParty
        x-enum-descriptions:
          - Telephony and VoIP
          - Audio PSTN telephony only
          - VoIP only
          - 3rd party audio conference
      join_before_host:
        type: boolean
        description: Join the meeting before host arrives.
      force_pmi_jbh_password:
        type: boolean
        description: Require a passcode for personal meetings if attendees can join before host.
      pstn_password_protected:
        type: boolean
        description: Generate and require passcode for participants joining by phone.
      use_pmi_for_scheduled_meetings:
        type: boolean
        description: |
          Use Personal Meeting ID (PMI) when scheduling a meeting
      use_pmi_for_instant_meetings:
        type: boolean
        description: |
          Use Personal Meeting ID (PMI) when starting an instant meeting
      require_password_for_scheduling_new_meetings:
        type: boolean
        description: |
          Require a passcode when scheduling new meetings.This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.
      require_password_for_scheduled_meetings:
        type: boolean
        description: |
          Require a passcode for meetings which have already been scheduled
      default_password_for_scheduled_meetings:
        type: string
        description: |
          Passcode for already scheduled meetings
      require_password_for_instant_meetings:
        type: boolean
        description: |
          Require a passcode for instant meetings. If you use PMI for your instant meetings, this option will be disabled. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.
      require_password_for_pmi_meetings:
        type: string
        description: |
          Require a passcode for Personal Meeting ID (PMI). This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.
        enum:
          - jbh_only
          - all
          - none
        x-enum-descriptions:
          - Only meetings with Join Before Host enabled
          - All meetings using PMI
          - Disabled
      pmi_password:
        type: string
        description: |
          PMI passcode
      embed_password_in_join_link:
        description: |-
          If the value is set to `true`, the meeting passcode will be encrypted and included in the join meeting link to allow participants to join with just one click without having to enter the passcode.

        type: boolean
      meeting_password_requirement:
        type: object
        description: 'Account wide meeting/webinar [passcode requirements](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604).'
        properties:
          length:
            type: integer
            description: The minimum length that the meeting/webinar passcode needs to have.
          have_letter:
            type: boolean
            description: |
              If set to `true`, the passcode must contain at least 1 letter (such as a,b,c...).
          have_number:
            type: boolean
            description: 'If set to `true`, the passcode must contain at least 1 number (such as 1,2,3...).'
          have_special_character:
            type: boolean
            description: 'If set to `true`, the passcode must have at least 1 special character (!,@,#...).'
          only_allow_numeric:
            type: boolean
            description: 'If set to `true`, the passcode must only contain numbers and no other characters.'
          have_upper_and_lower_characters:
            type: boolean
            description: 'If set to `true`, the passcode must include both uppercase and lowercase characters.'
          consecutive_characters_length:
            type: integer
            enum:
              - 0
              - 4
              - 5
              - 6
              - 7
              - 8
          weak_enhance_detection:
            type: boolean
            description: 'If set to `true`, users will be informed if the provided passcode is weak.'
      personal_meeting:
        description: |+
          Personal Meeting Setting.<br><br>
          `true`: Indicates that the **"Enable Personal Meeting ID"** setting is turned on. Users can choose to use personal meeting ID for their meetings. <br><br>
          `false`: Indicates that the **"Enable Personal Meeting ID"** setting is [turned off](https://support.zoom.us/hc/en-us/articles/201362843-Personal-meeting-ID-PMI-and-personal-link#h_aa0335c8-3b06-41bc-bc1f-a8b84ef17f2a). If this setting is disabled, meetings that were scheduled with PMI will be invalid. Scheduled meetings will need to be manually updated.
          For Zoom Phone only:If a user has been assigned a desk phone, **"Elevate to Zoom Meeting"** on desk phone will be disabled.


        type: boolean
  UserSettingsInMeeting:
    title: 'User settings: Meeting settings'
    description: ''
    type: object
    properties:
      e2e_encryption:
        type: boolean
        description: 'Zoom requires encryption for all data between the Zoom cloud, Zoom client, and Zoom Room. Require encryption for 3rd party endpoints (H323/SIP).'
      chat:
        type: boolean
        default: false
        description: Enable chat during meeting for all participants.
      private_chat:
        type: boolean
        default: false
        description: 'Enable 1:1 private chat between participants during meetings.'
      auto_saving_chat:
        type: boolean
        default: false
        description: Auto save all in-meeting chats.
      entry_exit_chime:
        type: string
        default: all
        description: 'Play sound when participants join or leave:<br>`host` - When host joins or leaves.<br>`all` - When any participant joins or leaves.<br>`none` - No join or leave sound.'
        enum:
          - host
          - all
          - none
        x-enum-descriptions:
          - when host joins/leaves
          - when any participant joins/leaves
          - no join/leave sound
      record_play_voice:
        type: boolean
        description: Record and play their own voice.
      feedback:
        type: boolean
        default: false
        description: Enable option to send feedback to Zoom at the end of the meeting.
      co_host:
        type: boolean
        default: false
        description: Allow the host to add co-hosts.
      polling:
        type: boolean
        default: false
        description: Add polls to the meeting controls.
      attendee_on_hold:
        type: boolean
        default: false
        description: |-
          Allow host to put attendee on hold.

          **This field has been deprecated and is no longer supported.**
      annotation:
        type: boolean
        default: false
        description: Allow participants to use annotation tools.
      remote_control:
        type: boolean
        default: false
        description: Enable remote control during screensharing.
      non_verbal_feedback:
        type: boolean
        default: false
        description: Enable non-verbal feedback through screens.
      breakout_room:
        type: boolean
        default: false
        description: Allow host to split meeting participants into separate breakout rooms.
      remote_support:
        type: boolean
        default: false
        description: 'Allow host to provide 1:1 remote support to a participant.'
      closed_caption:
        type: boolean
        default: false
        description: Enable closed captions.
      group_hd:
        type: boolean
        default: false
        description: Enable group HD video.
      virtual_background:
        type: boolean
        default: false
        description: Enable virtual background.
      virtual_background_settings:
        type: object
        description: Settings to manage virtual background.
        properties:
          enable:
            type: boolean
            description: Enable virtual background.
          allow_videos:
            type: boolean
            description: Allow use of videos for virtual backgrounds.
          allow_upload_custom:
            type: boolean
            description: Allow user to upload custom backgrounds.
          files:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                  description: Unique identifier of the file.
                name:
                  type: string
                  description: File name.
                type:
                  type: string
                  description: File type.
                is_default:
                  type: boolean
                  description: Indicates whether or not this file is the default virtual background file.
                size:
                  type: string
                  description: File size.
      far_end_camera_control:
        type: boolean
        default: false
        description: Allow another user to take control of the camera.
      share_dual_camera:
        type: boolean
        default: false
        description: Share dual camera (deprecated).
      waiting_room:
        type: boolean
        default: false
        description: 'Enable Waiting room - if enabled, attendees can only join after host approves.'
      allow_live_streaming:
        type: boolean
        description: Allow live streaming.
      workplace_by_facebook:
        type: boolean
        description: Allow livestreaming by host through Workplace by Facebook.
      custom_live_streaming_service:
        type: boolean
        description: Allow custom live streaming.
      custom_service_instructions:
        type: string
        description: Custom service instructions.
      show_meeting_control_toolbar:
        description: Always show meeting controls during a meeting.
        type: boolean
      custom_data_center_regions:
        type: boolean
        description: 'If set to `true`, you can [select data center regions](https://support.zoom.us/hc/en-us/articles/360042411451-Selecting-data-center-regions-for-hosted-meetings-and-webinars) to use for hosting your real-time meeting and webinar traffic. These regions can be provided in the `data_center_regions` field. If set to `false`, the regions cannot be customized and the default regions will be used.'
      data_center_regions:
        type: array
        description: |
          If you have set the value of `custom_data_center_regions` to `true`, specify the data center regions that you would like to opt in to (country codes from among: ["DE", "NL", "HK", "AU", "IN", "LA", "TY", "CN", "US", "CA"]).
        enum:
          - HK
          - AU
          - IN
          - TY
          - CN
          - US
          - CA
          - DE
          - NL
          - LA
        items:
          type: string
      screen_sharing:
        type: boolean
        description: |
          Allow host and participants to share their screen or content during meetings
      who_can_share_screen:
        type: string
        description: |
          Indicates who can share their screen or content during meetings. The value can be one of the following: <br>
          `host`: Only host can share the screen.<br>
          `all`: Both hosts and attendees can share their screen during meetings. For Webinar, the hosts and panelists can start screen sharing, but not the attendees.
        enum:
          - host
          - all
      who_can_share_screen_when_someone_is_sharing:
        type: string
        description: |
          Indicates who is allowed to start sharing screen when someone else in the meeting is sharing their screen. The value can be one of the following:<br>
          `host`: Only a host can share the screen when someone else is sharing.<br>
          `all`: Anyone in the meeting is allowed to start sharing their screen when someone else is sharing. For Webinar, the hosts and panelists can start screen sharing, but not the attendees.
        enum:
          - host
          - all
      file_transfer:
        type: boolean
        description: 'Indicates whether [in-meeting file transfer](https://support.zoom.us/hc/en-us/articles/209605493-In-meeting-file-transfer) setting has been enabled for the user or not.'
      request_permission_to_unmute:
        type: boolean
        description: 'Indicates whether the [**Request permission to unmute participants**](https://support.zoom.us/hc/en-us/articles/203435537-Muting-and-unmuting-participants-in-a-meeting#h_01EGK4XFWS1SJGZ71MYGKF7260) option has been enabled for the user or not.'
  UserSettingsEmailNotification:
    title: 'User settings: Notification settings'
    description: ''
    type: object
    properties:
      jbh_reminder:
        type: boolean
        default: false
        description: When attendees join meeting before host.
      cancel_meeting_reminder:
        type: boolean
        default: false
        description: When a meeting is cancelled.
      alternative_host_reminder:
        type: boolean
        default: false
        description: When an alternative host is set or removed from a meeting.
      schedule_for_reminder:
        type: boolean
        default: false
        description: 'Notify the host there is a meeting is scheduled, rescheduled, or cancelled.'
  UserSettingsRecording:
    title: 'User settings: Recording settings'
    description: ''
    type: object
    properties:
      local_recording:
        type: boolean
        description: Local recording.
      cloud_recording:
        type: boolean
        default: false
        description: Cloud recording.
      record_speaker_view:
        type: boolean
        default: false
        description: Record the active speaker view.
      record_gallery_view:
        type: boolean
        default: false
        description: Record the gallery view.
      record_audio_file:
        type: boolean
        default: false
        description: Record an audio only file.
      save_chat_text:
        type: boolean
        default: false
        description: Save chat text from the meeting.
      show_timestamp:
        type: boolean
        default: false
        description: Show timestamp on video.
      recording_audio_transcript:
        type: boolean
        description: Audio transcript.
      auto_recording:
        type: string
        default: local
        description: 'Automatic recording:<br>`local` - Record on local.<br>`cloud` - Record on cloud.<br>`none` - Disabled.'
        enum:
          - local
          - cloud
          - none
        x-enum-descriptions:
          - Record on local
          - Record on cloud
          - Disabled
      host_pause_stop_recording:
        type: boolean
        default: false
        description: Host can pause/stop the auto recording in the cloud.
      auto_delete_cmr:
        type: boolean
        default: false
        description: Auto delete cloud recordings.
      auto_delete_cmr_days:
        type: integer
        description: A specified number of days of auto delete cloud recordings.
        minimum: 1
        maximum: 60
      recording_disclaimer:
        type: boolean
        description: |
          Show a disclaimer to participants before a recording starts
      ask_participants_to_consent_disclaimer:
        type: boolean
        description: |-
          This field can be used if `recording_disclaimer` is set to true. This field indicates whether or not you would like to ask participants for consent when a recording starts. The value can be one of the following:<br>
          * `true`: Ask participants for consent when a recording starts. <br>
          * `false`: Do not ask participants for consent when a recording starts.
      ask_host_to_confirm_disclaimer:
        type: boolean
        description: Ask host to confirm the disclaimer.
      recording_password_requirement:
        type: object
        description: This object represents the minimum passcode requirements set for recordings via Account Recording Settings.
        properties:
          length:
            type: integer
            description: Minimum required length for the passcode.
            maximum: 10
          have_letter:
            type: boolean
            description: 'Indicates whether or not passcode must contain at least one alphabetical letter (a, b, c..).'
          have_number:
            type: boolean
            description: 'Indicates whether or not passcode must contain at least one number(1, 2, 3..).'
          have_special_character:
            type: boolean
            description: 'Indicates whether or not passcode must contain at least one special character(!, @, #..).'
          only_allow_numeric:
            type: boolean
            description: Indicates whether or not passcode must contain only numeric characters.
      ip_address_access_control:
        type: object
        description: |
          Setting to allow cloud recording access only from specific IP address ranges.
        properties:
          enable:
            type: boolean
            description: |+
              If set to `true`, the cloud recordings of this account can only be accessed by the IP addresses defined in the `ip_addresses_or_ranges` property.

          ip_addresses_or_ranges:
            type: string
            description: |+
              IP addresses or ranges that have access to the cloud recordings. Separate multiple IP ranges with comma. Use n.n.n.n, n.n.n.n/n or n.n.n.n - n.n.n.n syntax where n is a number.

              Example: `46.33.24.184, 48.99.100.2/25` or `200.181.108.17 - 220.181.108.157`

  UserSettingsTelephony:
    title: 'User settings: Meeting settings'
    type: object
    properties:
      third_party_audio:
        type: boolean
        description: Third party audio conference.
      audio_conference_info:
        type: string
        default: ''
        description: Third party audio conference info.
        maxLength: 2048
      show_international_numbers_link:
        type: boolean
        description: Show the international numbers link on the invitation email.
      telephony_regions:
        type: object
        description: Indicates where most of the participants call into or call from duriing a meeting.
        properties:
          allowed_values:
            type: array
            description: Telephony region options provided by Zoom to select from.
            items:
              type: string
          selection_values:
            type: array
            description: Telephony regions selected by the account to indicate where most of the participants call into or call from during a meeting.
            items:
              type: string
  SettingsUpdateTelephony:
    title: 'Telephony update settings: Meeting settings'
    type: object
    properties:
      third_party_audio:
        type: boolean
        description: Third party audio conference.
      audio_conference_info:
        type: string
        default: ''
        description: Third party audio conference info.
        maxLength: 2048
      show_international_numbers_link:
        type: boolean
        description: Show the international numbers link on the invitation email.
      telephony_regions:
        type: object
        description: Indicates where most of the participants call into or call from duriing a meeting.
        properties:
          selection_values:
            type: array
            description: Telephony regions selected by the account to indicate where most of the participants call into or call from during a meeting.
            items:
              type: string
  UserSettingsFeature:
    title: 'User settings: Feature settings'
    description: ''
    type: object
    properties:
      meeting_capacity:
        type: integer
        description: User’s meeting capacity.
      large_meeting:
        type: boolean
        description: Large meeting feature.
      large_meeting_capacity:
        type: integer
        description: 'Large meeting capacity: can be 500 or 1000, depending on if the user has a large meeting capacity plan subscription or not.'
      webinar:
        type: boolean
        description: Webinar feature.
      webinar_capacity:
        type: integer
        description: 'Webinar capacity: can be 100, 500, 1000, 3000, 5000 or 10000, depending on if the user has a webinar capacity plan subscription or not.'
      cn_meeting:
        type: boolean
        description: Host meeting in China.
      in_meeting:
        type: boolean
        description: Host meeting in India.
      zoom_phone:
        type: boolean
        description: Zoom phone feature.
  UserSettingsFeatureUpdate:
    title: 'User settings: Feature settings'
    description: ''
    type: object
    properties:
      meeting_capacity:
        type: integer
        description: Set a user's meeting capacity. User’s meeting capacity denotes the maximum number of participants that can join a meeting scheduled by the user.
      large_meeting:
        type: boolean
        description: 'Enable [large meeting](https://support.zoom.us/hc/en-us/articles/201362823-What-is-a-Large-Meeting-) feature for the user.'
      large_meeting_capacity:
        type: integer
        description: Set the meeting capacity for the user if the user has **Large meeting** feature enabled. The value for the field can be either 500 or 1000.
      webinar:
        type: boolean
        description: Enable Webinar feature for the user.
      webinar_capacity:
        type: integer
        description: 'Set the Webinar capacity for a user who has the Webinar feature enabled. The value of this field can be 100, 500, 1000, 3000, 5000 or 10000.'
      zoom_phone:
        type: boolean
        description: Zoom phone feature.
  UserPermissions:
    type: object
    description: ''
    properties:
      permissions:
        type: array
        description: List of user permissions.
        items:
          type: string
  Webinar:
    description: Webinar object.
    allOf:
      - $ref: '#/definitions/SessionWebinar'
    type: object
  WebinarUpdate:
    description: Webinar object
    allOf:
      - $ref: '#/definitions/SessionWebinarUpdate'
    type: object
  WebinarInfo:
    type: object
    description: Webinar object.
    properties:
      topic:
        type: string
        description: Webinar topic.
        maxLength: 200
      type:
        type: integer
        description: 'Webinar Types:<br>`5` - Webinar.<br>`6` - Recurring webinar with no fixed time.<br>`9` - Recurring webinar with a fixed time.'
        default: 5
        enum:
          - 5
          - 6
          - 9
        x-enum-descriptions:
          - Webinar
          - Recurring Webinar with no fixed time
          - Recurring Webinar with fixed time
      start_time:
        type: string
        format: date-time
        description: Webinar start time in GMT/UTC.
      duration:
        type: integer
        description: Webinar duration.
      timezone:
        type: string
        description: Time zone to format start_time.
      agenda:
        type: string
        description: Webinar agenda.
      created_at:
        type: string
        format: date-time
        description: Create time.
      start_url:
        type: string
        description: "<br><aside>The <code>start_url</code> of a Webinar is a URL using which a host or an alternative host can start the Webinar. This URL should only be used by the host of the meeting and should not be shared with anyone other than the host of the Webinar. \n\nThe expiration time for the <code>start_url</code> field listed in the response of [Create a Webinar API](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/webinarcreate) is two hours for all regular users. \n\t\nFor users created using the <code>custCreate</code> option via the [Create Users](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usercreate) API, the expiration time of the <code>start_url</code> field is 90 days.\n\t\nFor security reasons, to retrieve the latest value for the <code>start_url</code> field programmatically (after expiry), you must call the [Retrieve a Webinar API](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/webinar) and refer to the value of the <code>start_url</code> field in the response.</aside><br><br><br>"
      join_url:
        type: string
        description: URL to join the Webinar. This URL should only be shared with the users who should be invited to the Webinar.
      tracking_fields:
        type: array
        description: Tracking fields
        items:
          type: object
          properties:
            field:
              type: string
              description: Tracking fields type
            value:
              type: string
              description: Tracking fields value
      occurrences:
        $ref: '#/definitions/Occurrences'
      settings:
        $ref: '#/definitions/WebinarSettings'
      recurrence:
        $ref: '#/definitions/recurrence-webinar'
      password:
        type: string
        description: |+
          Webinar passcode.

          If "Require a passcode when scheduling new meetings" setting has been **enabled** **and** [locked](https://support.zoom.us/hc/en-us/articles/115005269866-Using-Tiered-Settings#locked) for the user, the passcode field will be autogenerated for the Webinar in the response even if it is not provided in the API request. <br><br>
          **Note:** If the account owner or the admin has configured [minimum passcode requirement settings](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604), the passcode value provided here must meet those requirements. <br><br>If the requirements are enabled, you can view those requirements by calling either the [Get User Settings API](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usersettings) or the  [Get Account Settings](https://marketplace.zoom.us/docs/api-reference/zoom-api/accounts/accountsettings) API.





        maxLength: 10
  WebinarList:
    title: User List
    description: List of webinars.
    allOf:
      - $ref: '#/definitions/Pagination'
      - properties:
          webinars:
            type: array
            description: List of webinar objects.
            items:
              allOf:
                - properties:
                    uuid:
                      type: string
                      description: 'Unique identifier for a Webinar. Each webinar instance will generate its own UUID. Once a Webinar ends, the value of uuid for the same webinar will be different from when it was scheduled.'
                    id:
                      type: integer
                      description: 'Webinar ID in "**long**" format(represented as int64 data type in JSON), also known as the webinar number.'
                      format: int64
                    host_id:
                      type: string
                      description: ID of the host of the webinar.
                    topic:
                      type: string
                      description: Meeting topic.
                    type:
                      type: string
                      description: 'Webinar Types:<br>`5` - Webinar.<br>`6` - Recurring webinar with no fixed time.<br>`9` - Recurring webinar with a fixed time.'
                    duration:
                      type: integer
                      description: Meeting duration.
                    timezone:
                      type: string
                      description: '[Timezone ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) for the Webinar.'
                    created_at:
                      type: string
                      format: date-time
                      description: Time of webinar creation.
                    join_url:
                      type: string
                      description: Join URL of the webinar (using which others can join the webinar).
                    agenda:
                      type: string
                      description: 'Webinar Description. The length of agenda gets truncated to 250 characters when you list all webinars for a user. To view the complete agenda, retrieve details for a single webinar [here](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/webinar).'
                    start_time:
                      type: string
                      description: Scheduled start time of the Webinar.
                      format: date-time
              type: object
    type: object
  WebinarInstances:
    title: Webinar instances
    description: List of webinars.
    allOf:
      - properties:
          webinars:
            type: array
            description: List of ended webinar instances.
            items:
              allOf:
                - properties:
                    uuid:
                      type: string
                      description: Webinar UUID.
                    start_time:
                      type: string
                      format: date-time
                      description: Start time.
              type: object
    type: object
  WebinarMetric:
    type: object
    title: Webinar Metrics
    description: Webinar metric details.
    properties:
      uuid:
        type: string
        format: uuid
        description: Webinar UUID.
      id:
        type: integer
        description: 'Webinar ID in "**long**" format(represented as int64 data type in JSON), also known as the webinar number.'
        format: int64
      topic:
        type: string
        description: Webinar topic.
      host:
        type: string
        description: User display name.
      email:
        type: string
        description: User email.
      user_type:
        type: string
        description: User type.
      start_time:
        type: string
        format: date-time
        description: Webinar start time.
      end_time:
        type: string
        format: date-time
        description: Webinar end time.
      duration:
        type: string
        description: Webinar duration.
      participants:
        type: integer
        description: Webinar participant count.
      has_pstn:
        type: boolean
        description: Indicates whether or not PSTN was used for the Webinar.
      has_voip:
        type: boolean
        description: Indicates whether or not VoIP was used for the Webinar.
      has_3rd_party_audio:
        type: boolean
        description: Indicates whether or not TSP was used for the Webinar.
      has_video:
        type: boolean
        description: Indicates whether or not video was used for the Webinar.
      has_screen_share:
        type: boolean
        description: Indicates whether or not screen sharing was used for the Webinar.
      has_recording:
        type: boolean
        description: Indicates whether or not recording was used for the Webinar.
      has_sip:
        type: boolean
        description: Indicates whether or not SIP was used for the Webinar.
      dept:
        type: string
        description: Department of the host.
      custom_keys:
        type: array
        maxItems: 10
        description: Custom keys and values assigned to the Webinar.
        items:
          type: object
          properties:
            key:
              type: string
              description: Custom key associated with the Webinar.
              maxLength: 64
            value:
              type: string
              description: Value of the custom key associated with the Webinar.
              maxLength: 256
  WebinarPanelist:
    type: object
    description: Webinar panelist.
    properties:
      panelists:
        type: array
        description: List of panelist objects.
        maximum: 30
        items:
          allOf:
            - $ref: '#/definitions/Panelist'
  WebinarPanelistList:
    description: Webinar panelist.
    allOf:
      - $ref: '#/definitions/PanelistList'
    type: object
  WebinarRegistrant:
    description: Webinar registrant.
    allOf:
      - $ref: '#/definitions/Registrant'
    type: object
  WebinarRegistrantList:
    title: Registration List
    description: List of users.
    allOf:
      - $ref: '#/definitions/RegistrantList'
    type: object
  WebinarSettings:
    type: object
    description: Webinar settings.
    properties:
      host_video:
        type: boolean
        description: Start video when host joins webinar.
      panelists_video:
        type: boolean
        description: Start video when panelists join webinar.
      practice_session:
        type: boolean
        description: Enable practice session.
        default: false
      hd_video:
        type: boolean
        description: Default to HD video.
        default: false
      approval_type:
        type: integer
        default: 2
        description: '`0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.'
        enum:
          - 0
          - 1
          - 2
        x-enum-descriptions:
          - Automatically Approve
          - Manually Approve
          - No Registration Required
      registration_type:
        type: integer
        description: Registration types. Only used for recurring webinars with a fixed time.<br>`1` - Attendees register once and can attend any of the webinar sessions.<br>`2` - Attendees need to register for each session in order to attend.<br>`3` - Attendees register once and can choose one or more sessions to attend.
        default: 1
        enum:
          - 1
          - 2
          - 3
        x-enum-descriptions:
          - Attendees register once and can attend any of the occurrences
          - Attendees need to register for each occurrence to attend
          - Attendees register once and can choose one or more occurrences to attend
      audio:
        type: string
        description: Determine how participants can join the audio portion of the webinar.
        default: both
        enum:
          - both
          - telephony
          - voip
        x-enum-descriptions:
          - Both Telephony and VoIP
          - Telephony only
          - VoIP only
      auto_recording:
        type: string
        description: 'Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.'
        default: none
        enum:
          - local
          - cloud
          - none
        x-enum-descriptions:
          - Record to local device
          - Record to cloud
          - No Recording
      enforce_login:
        type: boolean
        description: |-
          Only signed in users can join this meeting.

          **This field is deprecated and will not be supported in the future.**  <br><br>As an alternative, use the "meeting_authentication", "authentication_option" and "authentication_domains" fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the Webinar.
      enforce_login_domains:
        type: string
        description: |-
          Only signed in users with specified domains can join meetings.

          **This field is deprecated and will not be supported in the future.**  <br><br>As an alternative, use the "meeting_authentication", "authentication_option" and "authentication_domains" fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the Webinar.
      alternative_hosts:
        type: string
        description: Alternative host emails or IDs. Multiple values separated by comma.
      close_registration:
        type: boolean
        description: Close registration after event date.
      show_share_button:
        type: boolean
        description: Show social share buttons on the registration page.
      allow_multiple_devices:
        type: boolean
        description: Allow attendees to join from multiple devices.
      on_demand:
        type: boolean
        description: Make the webinar on-demand
        default: false
      global_dial_in_countries:
        type: array
        description: List of global dial-in countries
        items:
          type: string
      contact_name:
        type: string
        description: Contact name for registration
      contact_email:
        type: string
        description: Contact email for registration
      registrants_confirmation_email:
        description: Send confirmation email to registrants
        type: boolean
      registrants_restrict_number:
        type: integer
        default: 0
        description: 'Restrict number of registrants for a webinar. By default, it is set to `0`. A `0` value means that the restriction option is disabled. Provide a number higher than 0 to restrict the webinar registrants by the that number.'
        minimum: 0
        maximum: 20000
      notify_registrants:
        type: boolean
        description: Send notification email to registrants when the host updates a webinar.
      post_webinar_survey:
        type: boolean
        description: Zoom will open a survey page in attendees' browsers after leaving the webinar
      survey_url:
        type: string
        description: Survey url for post webinar survey
      registrants_email_notification:
        type: boolean
        description: 'Send email notifications to registrants about approval, cancellation, denial of the registration. The value of this field must be set to true in order to use the `registrants_confirmation_email` field.'
      meeting_authentication:
        type: boolean
        description: '`true`- Only authenticated users can join Webinar.'
      authentication_option:
        type: string
        description: Webinar authentication option id.
      authentication_domains:
        type: string
        description: 'If user has configured ["Sign Into Zoom with Specified Domains"](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f) option, this will list the domains that are authenticated.'
      authentication_name:
        type: string
        description: 'Authentication name set in the [authentication profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f).'
      question_and_answer:
        type: object
        description: '[Q&A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other''s%20questions.) for webinar.'
        properties:
          enable:
            type: boolean
            description: |-
              * `true`: Enable [Q&A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.) for webinar.

              * `false`: Disable Q&A for webinar.
          allow_anonymous_questions:
            type: boolean
            description: |-
              * `true`: Allow participants to send questions without providing their name to the host, co-host, and panelists..

              * `false`: Do not allow anonymous questions.
          answer_questions:
            type: string
            description: |-
              Indicate whether you want attendees to be able to view answered questions only or view all questions.

              * `only`: Attendees are able to view answered questions only.

              *  `all`: Attendees are able to view all questions submitted in the Q&A.
            enum:
              - only
              - all
          attendees_can_upvote:
            type: boolean
            description: |-
              * `true`: Attendees can click the thumbs up button to bring popular questions to the top of the Q&A window.

              * `false`: Attendees can not click the thumbs up butoon on questions.
          attendees_can_comment:
            type: boolean
            description: |-
              * `true`: Attendees can answer questions or leave a comment in the question thread.

              * `false`: Attendees can not answer questions or leave a comment in the question thread
  ZoomRoom:
    type: object
    title: Zoom Room
    description: Zoom room.
    properties:
      id:
        type: string
        description: Zoom room ID.
      room_name:
        type: string
        description: Zoom room name.
      calender_name:
        type: string
        description: Zoom calendar name.
      email:
        type: string
        description: Zoom room email.
      account_type:
        type: string
        description: Zoom room email type.
      status:
        type: string
        description: Zoom room status.
      device_ip:
        type: string
        description: Zoom room device IP.
      camera:
        type: string
        description: Zoom room camera.
      microphone:
        type: string
        description: Zoom room microphone.
      speaker:
        type: string
        description: Zoom room speaker.
      last_start_time:
        type: string
        description: Zoom room last start time.
      location:
        type: string
        description: Zoom room location.
      health:
        type: string
      issues:
        type: array
        description: Zoom Room issues.
        items:
          type: string
  ZoomRoomList:
    title: Zoom Room List
    description: Zoom Room List
    allOf:
      - description: Pagination Object.
        properties:
          page_count:
            type: integer
            description: The number of pages returned for the request made.
          page_number:
            type: integer
            description: The page number of the current results.
            default: 1
          page_size:
            type: integer
            description: The number of records returned with a single API call.
            default: 30
            maximum: 300
          total_records:
            type: integer
            description: The total number of all the records available across pages.
          next_page_token:
            type: string
      - properties:
          zoom_rooms:
            type: array
            description: Array of Zoom Rooms
            items:
              $ref: '#/definitions/ZoomRoom'
    type: object
  PollList:
    type: object
    title: Poll List
    description: Poll List
    allOf:
      - properties:
          total_records:
            type: integer
            description: The number of all records available across pages
          polls:
            type: array
            description: Array of Polls
            items:
              allOf:
                - properties:
                    id:
                      type: string
                      description: ID of Poll
                    status:
                      type: string
                      description: 'Status of Poll:<br>`notstart` - Poll not started<br>`started` - Poll started<br>`ended` - Poll ended<br>`sharing` - Sharing poll results'
                      enum:
                        - notstart
                        - started
                        - ended
                        - sharing
                      x-enum-descriptions:
                        - Poll not start
                        - Poll started
                        - Poll ended
                        - Poll is sharing
                - $ref: '#/definitions/Poll'
  Poll:
    type: object
    title: Poll
    description: Poll
    properties:
      title:
        type: string
        description: Title for the poll.
      questions:
        type: array
        description: Array of Polls
        items:
          type: object
          properties:
            name:
              type: string
              description: Question to be asked to the attendees.
            type:
              type: string
              description: 'Poll Question & Answer type:<br>`single` - Single choice<br>`mutliple` - Multiple choice'
              enum:
                - single
                - multiple
              x-enum-descriptions:
                - single answer
                - multiple answer
            answers:
              type: array
              description: Answers to the questions
              items:
                type: string
  MeetingRegistrantQuestions:
    type: object
    title: Meeting Registrant Questions
    description: Meeting Registrant Questions
    properties:
      questions:
        type: array
        description: Array of Registrant Questions
        items:
          type: object
          properties:
            field_name:
              type: string
              description: Field name of the question.
              enum:
                - address
                - city
                - country
                - zip
                - state
                - phone
                - industry
                - org
                - job_title
                - purchasing_time_frame
                - role_in_purchase_process
                - no_of_employees
                - comments
              x-enum-descriptions:
                - Address
                - City
                - Country/Region
                - Zip/Postal Code
                - State/Province
                - Phone
                - Industry
                - Organization
                - Job Title
                - Purchasing Time Frame
                - Role in Purchase Process
                - Number of Employees
                - Questions & Comments
            required:
              type: boolean
              description: Indicates whether or not the displayed fields are required to be filled out by registrants.
      custom_questions:
        type: array
        description: Array of Registrant Custom Questions
        items:
          type: object
          properties:
            title:
              type: string
              description: Title of the custom question.
            type:
              type: string
              description: Type of the question being asked.
              enum:
                - short
                - single
              x-enum-descriptions:
                - Short Answer
                - Single Answer
            required:
              type: boolean
              description: Indicates whether or not the custom question is required to be answered by participants or not.
            answers:
              type: array
              description: Answer choices for the question. Can not be used for `short` question type as this type of question requires registrants to type out the answer.
              items:
                type: string
  WebinarRegistrantQuestions:
    type: object
    title: Webinar Registrant Questions
    description: Webinar Registrant Questions
    properties:
      questions:
        type: array
        description: Array of registration fields whose values should be provided by registrants during registration.
        items:
          properties:
            field_name:
              type: string
              description: Field name
              enum:
                - last_name
                - address
                - city
                - country
                - zip
                - state
                - phone
                - industry
                - org
                - job_title
                - purchasing_time_frame
                - role_in_purchase_process
                - no_of_employees
                - comments
              x-enum-descriptions:
                - Last Name
                - Address
                - City
                - Country/Region
                - Zip/Postal Code
                - State/Province
                - Phone
                - Industry
                - Organization
                - Job Title
                - Purchasing Time Frame
                - Role in Purchase Process
                - Number of Employees
                - Questions & Comments
            required:
              type: boolean
              description: State whether the selected fields are required or optional.
      custom_questions:
        type: array
        description: Array of Registrant Custom Questions.
        items:
          properties:
            title:
              type: string
              description: Custom question.
            type:
              type: string
              description: The question-answer type.
              enum:
                - short
                - single_radio
                - single_dropdown
                - multiple
              x-enum-descriptions:
                - Short Answer
                - Single Radio Answer
                - Single Dropdown Answer
                - Multiple Answer
            required:
              type: boolean
              description: State whether or not the custom question is required to be answered by a registrant.
            answers:
              type: array
              description: An array of answer choices. Can't be used for short answer type.
              items:
                type: string
  RecordingRegistrantQuestions:
    type: object
    title: Recording Registrant Questions
    description: Recording Registrant Questions
    properties:
      questions:
        type: array
        description: Array of Registrant Questions
        items:
          type: object
          properties:
            field_name:
              type: string
              description: Field name.
              enum:
                - last_name
                - address
                - city
                - country
                - zip
                - state
                - phone
                - industry
                - org
                - job_title
                - purchasing_time_frame
                - role_in_purchase_process
                - no_of_employees
                - comments
              x-enum-descriptions:
                - Last Name
                - Address
                - City
                - Country/Region
                - Zip/Postal Code
                - State/Province
                - Phone
                - Industry
                - Organization
                - Job Title
                - Purchasing Time Frame
                - Role in Purchase Process
                - Number of Employees
                - Questions & Comments
            required:
              type: boolean
              description: State whether the field is required to be answered by the registrant or not.
      custom_questions:
        type: array
        description: Array of Registrant Custom Questions
        items:
          type: object
          properties:
            title:
              type: string
              description: Title of the question.
            type:
              type: string
              description: The type of registration question and answers.
              enum:
                - short
                - single
                - multiple
              x-enum-descriptions:
                - Short Answer
                - Single Answer
                - Multiple Answer
            required:
              type: boolean
              description: State whether registrants are required to answer custom questions or not.
            answers:
              type: array
              description: Answer choices for the question. Can not be used with Short answer type.
              items:
                type: string
  TrackingFieldList:
    type: object
    title: Tracking Field List
    description: Tracking Field List
    allOf:
      - properties:
          total_records:
            type: integer
            description: The number of all records available across pages
          tracking_fields:
            type: array
            description: Array of Tracking Fields
            items:
              allOf:
                - properties:
                    id:
                      type: string
                      description: ID of Tracking Field
                - $ref: '#/definitions/TrackingField'
  TrackingField:
    type: object
    title: Tracking Field
    description: Tracking Field
    properties:
      field:
        type: string
        description: Label/ Name for the tracking field.
      required:
        type: boolean
        description: Tracking Field Required
      visible:
        type: boolean
        description: Tracking Field Visible
      recommended_values:
        type: array
        description: Array of recommended values
        items:
          type: string
  AccountSettingsTSP:
    type: object
    description: 'Account Settings: TSP.'
    properties:
      call_out:
        type: boolean
        description: Call Out
      call_out_countries:
        type: array
        items: {}
        description: Call Out Countries/Regions
      show_international_numbers_link:
        type: boolean
        description: Show international numbers link on the invitation email
      display_toll_free_numbers:
        type: boolean
        description: Display toll-free numbers
  CreateWebinarSettings:
    type: object
    description: Create Webinar settings.
    properties:
      host_video:
        type: boolean
        description: Start video when host joins webinar.
      panelists_video:
        type: boolean
        description: Start video when panelists join webinar.
      practice_session:
        type: boolean
        description: Enable practice session.
        default: false
      hd_video:
        type: boolean
        description: Default to HD video.
        default: false
      approval_type:
        type: integer
        default: 2
        description: |-
          The default value is `2`. To enable registration required, set the approval type to `0` or `1`.  Values include:<br>

          `0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.
        enum:
          - 0
          - 1
          - 2
        x-enum-descriptions:
          - Automatically Approve
          - Manually Approve
          - No Registration Required
      registration_type:
        type: integer
        description: Registration types. Only used for recurring webinars with a fixed time.<br>`1` - Attendees register once and can attend any of the webinar sessions.<br>`2` - Attendees need to register for each session in order to attend.<br>`3` - Attendees register once and can choose one or more sessions to attend.
        default: 1
        enum:
          - 1
          - 2
          - 3
        x-enum-descriptions:
          - Attendees register once and can attend any of the occurrences
          - Attendees need to register for each occurrence to attend
          - Attendees register once and can choose one or more occurrences to attend
      audio:
        type: string
        description: Determine how participants can join the audio portion of the meeting.
        default: both
        enum:
          - both
          - telephony
          - voip
        x-enum-descriptions:
          - Both Telephony and VoIP
          - Telephony only
          - VoIP only
      auto_recording:
        type: string
        description: 'Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.'
        default: none
        enum:
          - local
          - cloud
          - none
        x-enum-descriptions:
          - Record to local device
          - Record to cloud
          - No Recording
      enforce_login:
        type: boolean
        description: |-
          Only signed-in users can join this meeting.

          **This field is deprecated and will not be supported in future.** <br><br> Instead of this field, use the "meeting_authentication", "authentication_option" and/or "authentication_domains" fields to establish the authentication mechanism for this Webinar.
      enforce_login_domains:
        type: string
        description: |-
          Only signed-in users with specified domains can join meetings.

          **This field is deprecated and will not be supported in future.** <br><br> Instead of this field, use the "authentication_domains" field for this Webinar.
      alternative_hosts:
        type: string
        description: Alternative host emails or IDs. Multiple values separated by comma.
      close_registration:
        type: boolean
        description: Close registration after event date.
      show_share_button:
        type: boolean
        description: Show social share buttons on the registration page.
      allow_multiple_devices:
        type: boolean
        description: Allow attendees to join from multiple devices.
      on_demand:
        type: boolean
        description: Make the webinar on-demand
        default: false
      global_dial_in_countries:
        type: array
        description: List of global dial-in countries
        items:
          type: string
      contact_name:
        type: string
        description: Contact name for registration
      contact_email:
        type: string
        description: Contact email for registration
      registrants_restrict_number:
        type: integer
        default: 0
        description: 'Restrict number of registrants for a webinar. By default, it is set to `0`. A `0` value means that the restriction option is disabled. Provide a number higher than 0 to restrict the webinar registrants by the that number.'
        minimum: 0
        maximum: 20000
      post_webinar_survey:
        type: boolean
        description: Zoom will open a survey page in attendees' browsers after leaving the webinar
      survey_url:
        type: string
        description: Survey url for post webinar survey
      registrants_email_notification:
        type: boolean
        description: 'Send email notifications to registrants about approval, cancellation, denial of the registration. The value of this field must be set to true in order to use the `registrants_confirmation_email` field.'
      meeting_authentication:
        type: boolean
        description: 'Only [authenticated](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) users can join meeting if the value of this field is set to `true`.'
      authentication_option:
        type: string
        description: 'Specify the authentication type for users to join a Webinar with`meeting_authentication` setting set to `true`. The value of this field can be retrieved from the `id` field within `authentication_options` array in the response of [Get User Settings API](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usersettings).'
      authentication_domains:
        type: string
        description: 'Meeting authentication domains. This option, allows you to specify the rule so that Zoom users, whose email address contains a certain domain, can join the Webinar. You can either provide multiple domains, using a comma in between and/or use a wildcard for listing domains.'
      question_and_answer:
        type: object
        description: '[Q&A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other''s%20questions.) for webinar.'
        properties:
          enable:
            type: boolean
            description: |-
              * `true`: Enable [Q&A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.) for webinar.

              * `false`: Disable Q&A for webinar.
          allow_anonymous_questions:
            type: boolean
            description: |-
              * `true`: Allow participants to send questions without providing their name to the host, co-host, and panelists..

              * `false`: Do not allow anonymous questions.
          answer_questions:
            type: string
            description: |-
              Indicate whether you want attendees to be able to view answered questions only or view all questions.

              * `only`: Attendees are able to view answered questions only.

              *  `all`: Attendees are able to view all questions submitted in the Q&A.
            enum:
              - only
              - all
          attendees_can_upvote:
            type: boolean
            description: |-
              * `true`: Attendees can click the thumbs up button to bring popular questions to the top of the Q&A window.

              * `false`: Attendees can not click the thumbs up butoon on questions.
          attendees_can_comment:
            type: boolean
            description: |-
              * `true`: Attendees can answer questions or leave a comment in the question thread.

              * `false`: Attendees can not answer questions or leave a comment in the question thread
  UserSettingsTSP:
    type: object
    description: 'Account Settings: TSP.'
    title: 'User settings: TSP settings'
    properties:
      call_out:
        type: boolean
        description: Call Out
      call_out_countries:
        type: array
        description: Call Out Countries/Regions
        items: {}
      show_international_numbers_link:
        type: boolean
        description: Show international numbers link on the invitation email
  MeetingCreate:
    type: object
    description: Base object for meeting.
    properties:
      topic:
        type: string
        description: Meeting topic.
      type:
        type: integer
        description: 'Meeting Type:<br>`1` - Instant meeting.<br>`2` - Scheduled meeting.<br>`3` - Recurring meeting with no fixed time.<br>`8` - Recurring meeting with fixed time.'
        default: 2
        enum:
          - 1
          - 2
          - 3
          - 8
        x-enum-descriptions:
          - Instant Meeting
          - Scheduled Meeting
          - Recurring Meeting with no fixed time
          - Recurring Meeting with fixed time
      start_time:
        type: string
        format: date-time
        description: |-
          Meeting start time. We support two formats for `start_time` - local time and GMT.<br>

          To set time as GMT the format should be `yyyy-MM-dd`T`HH:mm:ssZ`. Example: "2020-03-31T12:02:00Z"

          To set time using a specific timezone, use `yyyy-MM-dd`T`HH:mm:ss` format and specify the timezone [ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) in the `timezone` field OR leave it blank and the timezone set on your Zoom account will be used. You can also set the time as UTC as the timezone field.

          The `start_time` should only be used for scheduled and / or recurring webinars with fixed time.
      duration:
        type: integer
        description: Meeting duration (minutes). Used for scheduled meetings only.
      schedule_for:
        type: string
        description: 'If you would like to schedule this meeting for someone else in your account, provide the Zoom user id or email address of the user here.'
      timezone:
        type: string
        description: 'Time zone to format start_time. For example, "America/Los_Angeles". For scheduled meetings only. Please reference our [time zone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) list for supported time zones and their formats.'
      password:
        type: string
        description: |-
          Passcode to join the meeting. By default, passcode may only contain the following characters: [a-z A-Z 0-9 @ - _ *] and can have a maximum of 10 characters.

          **Note:** If the account owner or the admin has configured [minimum passcode requirement settings](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604), the passcode value provided here must meet those requirements. <br><br>If the requirements are enabled, you can view those requirements by calling either the [Get User Settings API](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usersettings) or the [Get Account Settings](https://marketplace.zoom.us/docs/api-reference/zoom-api/accounts/accountsettings) API.
        maxLength: 10
      agenda:
        type: string
        description: Meeting description.
        maxLength: 2000
      tracking_fields:
        type: array
        description: Tracking fields
        items:
          type: object
          properties:
            field:
              type: string
              description: Label of the tracking field.
            value:
              type: string
              description: Tracking fields value
          required:
            - field
      recurrence:
        $ref: '#/definitions/Recurrence'
      settings:
        type: object
        description: Meeting settings.
        properties:
          host_video:
            type: boolean
            description: Start video when the host joins the meeting.
          participant_video:
            type: boolean
            description: Start video when participants join the meeting.
          cn_meeting:
            type: boolean
            description: Host meeting in China.
            default: false
          in_meeting:
            type: boolean
            description: Host meeting in India.
            default: false
          join_before_host:
            type: boolean
            description: |-
              Allow participants to join the meeting before the host starts the meeting. This field can only used for scheduled or recurring meetings.

              **Note:** If waiting room is enabled, the **join before host** setting will be disabled.
            default: false
          jbh_time:
            type: integer
            description: |-
              If the value of "join_before_host" field is set to true, this field can be used to indicate time limits within which a participant may join a meeting before a host. The value of this field can be one of the following:

              *  `0`: Allow participant to join anytime.
              *  `5`: Allow participant to join 5 minutes before meeting start time.
               * `10`: Allow participant to join 10 minutes before meeting start time.
            enum:
              - 0
              - 5
              - 10
          mute_upon_entry:
            type: boolean
            description: Mute participants upon entry.
            default: false
          watermark:
            type: boolean
            description: Add watermark when viewing a shared screen.
            default: false
          use_pmi:
            type: boolean
            description: 'Use Personal Meeting ID instead of an automatically generated meeting ID. It can only be used for scheduled meetings, instant meetings and recurring meetings with no fixed time.'
            default: false
          approval_type:
            type: integer
            default: 2
            description: |-
              The default value is `2`. To enable registration required, set the approval type to `0` or `1`. Values include:<br>

              `0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.
            enum:
              - 0
              - 1
              - 2
            x-enum-descriptions:
              - Automatically Approve
              - Manually Approve
              - No Registration Required
          registration_type:
            type: integer
            description: Registration type. Used for recurring meeting with fixed time only. <br>`1` Attendees register once and can attend any of the occurrences.<br>`2` Attendees need to register for each occurrence to attend.<br>`3` Attendees register once and can choose one or more occurrences to attend.
            default: 1
            enum:
              - 1
              - 2
              - 3
            x-enum-descriptions:
              - Attendees register once and can attend any of the occurrences
              - Attendees need to register for each occurrence to attend
              - Attendees register once and can choose one or more occurrences to attend
          audio:
            type: string
            description: Determine how participants can join the audio portion of the meeting.<br>`both` - Both Telephony and VoIP.<br>`telephony` - Telephony only.<br>`voip` - VoIP only.
            default: both
            enum:
              - both
              - telephony
              - voip
            x-enum-descriptions:
              - Both Telephony and VoIP
              - Telephony only
              - VoIP only
          auto_recording:
            type: string
            description: 'Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.'
            default: none
            enum:
              - local
              - cloud
              - none
            x-enum-descriptions:
              - Record to local device
              - Record to cloud
              - No Recording
          alternative_hosts:
            type: string
            description: 'Alternative host''s emails or IDs: multiple values separated by a comma.'
          close_registration:
            type: boolean
            description: Close registration after event date
            default: false
          waiting_room:
            type: boolean
            description: 'Enable waiting room. Note that if the value of this field is set to `true`, it will override and disable the `join_before_host` setting.'
          global_dial_in_countries:
            type: array
            description: List of global dial-in countries
            items:
              type: string
          contact_name:
            type: string
            description: Contact name for registration
          contact_email:
            type: string
            description: Contact email for registration
          registrants_email_notification:
            type: boolean
            description: 'Send email notifications to registrants about approval, cancellation, denial of the registration. The value of this field must be set to true in order to use the `registrants_confirmation_email` field.'
          meeting_authentication:
            type: boolean
            description: 'Only [authenticated](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) users can join meeting if the value of this field is set to `true`.'
          authentication_option:
            type: string
            description: 'Specify the authentication type for users to join a meeting with`meeting_authentication` setting set to `true`. The value of this field can be retrieved from the `id` field within `authentication_options` array in the response of [Get User Settings API](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usersettings).'
          authentication_domains:
            type: string
            description: 'Meeting authentication domains. This option, allows you to specify the rule so that Zoom users, whose email address contains a certain domain, can join the meeting. You can either provide multiple domains, using a comma in between and/or use a wildcard for listing domains.'
          additional_data_center_regions:
            description: 'Enable additional [data center regions](https://support.zoom.us/hc/en-us/articles/360042411451-Selecting-data-center-regions-for-hosted-meetings-and-webinars) for this meeting. Provide the value in the form of array of country code(s) for the countries which are available as data center regions in the [account settings](https://zoom.us/account/setting) but have been opt out of in the user settings. For instance, let''s say that in your account settings, the data center regions that have been selected are Europe, Honkong, Australia, India, Latin America, Japan, China, United States,and Canada. The complete list of available data center regions for your account is: ["EU", "HK", "AU", "IN", "LA", "TY", "CN", "US", "CA"]. In [user settings](https://zoom.us/profile/setting), you have opted out of India(IN) and Japan(TY) for meeting and webinar traffic routing. If you would like, you can still include India and Japan as additional data centers for this meeting using this field. To include India and Japan as additional data center regions, you would provide ["IN", "TY"] as the value.'
            type: array
            items:
              type: string
          breakout_room:
            type: object
            description: 'Setting to [pre-assign breakout rooms](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4).'
            properties:
              enable:
                type: boolean
                description: 'Set the value of this field to `true` if you would like to enable the [breakout room pre-assign](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4) option.'
              rooms:
                type: array
                description: Create room(s).
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: Name of the breakout room.
                    participants:
                      type: array
                      description: Email addresses of the participants who are to be assigned to the breakout room.
                      items:
                        type: string
          language_interpretation:
            type: object
            description: |-
              Language interpretation [settings](https://support.zoom.us/hc/en-us/articles/360034919791-Language-interpretation-in-meetings-and-webinars#h_01EGGQFD3Q4BST3378SA762MJ1) for meetings.

              **Note:** This feature is only available on certain Webinar add-on, Education, Business and higher plans. If this feature is not enabled on the host's account, this setting will not be applied for the meeting.
            properties:
              enable:
                type: boolean
                description: 'Indicate whether or not you would like to enable [language interpretation](https://support.zoom.us/hc/en-us/articles/360034919791-Language-interpretation-in-meetings-and-webinars#h_01EGGQFD3Q4BST3378SA762MJ1) for this meeting.'
              interpreters:
                type: array
                description: Information associated with the interpreter.
                items:
                  type: object
                  properties:
                    email:
                      type: string
                      description: Email address of the interpreter.
                      format: email
                    languages:
                      type: string
                      description: |-
                        Languages for interpretation. The string must contain two [country Ids](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) separated by a comma.

                        For example, if the language is to be interpreted from English to Chinese, the value of this field should be "US,CN".
          show_share_button:
            type: boolean
            description: |-
              If set to `true`, the registration page for the meeting will include social share buttons.

              **Note:** This setting is only applied for meetings that have enabled registration.
          allow_multiple_devices:
            type: boolean
            description: |-
              If set to `true`, attendees will be allowed to join a meeting from multiple devices.

              **Note:** This setting is only applied for meetings that have enabled registration.
          encryption_type:
            type: string
            description: |-
              Choose between enhanced encryption and [end-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871) when starting or a meeting. When using end-to-end encryption, several features (e.g. cloud recording, phone/SIP/H.323 dial-in) will be **automatically disabled**. <br><br>The value of this field can be one of the following:<br>
              `enhanced_encryption`: Enhanced encryption. Encryption is stored in the cloud if you enable this option. <br>

              `e2ee`: [End-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871). The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also **disables** the following features: join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions.
            enum:
              - enhanced_encryption
              - e2ee
          approved_or_denied_countries_or_regions:
            type: object
            description: |
              Approve or block users from specific regions/countries from joining this meeting.
            properties:
              enable:
                type: boolean
                description: |-
                  `true`: Setting enabled to either allow users or block users from specific regions to join your meetings. <br>

                  `false`: Setting disabled.
              method:
                type: string
                enum:
                  - approve
                  - deny
                description: |-
                  Specify whether to allow users from specific regions to join this meeting; or block users from specific regions from joining this meeting. <br><br>
                  `approve`: Allow users from specific regions/countries to join this meeting. If this setting is selected, the approved regions/countries must be included in the `approved_list`.<br><br>
                  `deny`: Block users from specific regions/countries from joining this meeting. If this setting is selected, the approved regions/countries must be included in the `denied_list`
              approved_list:
                type: array
                description: 'List of countries/regions from where participants can join this meeting. '
                items:
                  type: string
              denied_list:
                type: array
                description: 'List of countries/regions from where participants can not join this meeting. '
                items:
                  type: string
          alternative_hosts_email_notification:
            type: boolean
            description: 'Flag to determine whether to send email notifications to alternative hosts, default value is true.'
            default: true
      template_id:
        type: string
        description: |-
          Unique identifier of the **admin meeting template**. To create admin meeting templates, contact the Zoom support team.

          Use this field if you would like to [schedule the meeting from a admin meeting template](https://support.zoom.us/hc/en-us/articles/360036559151-Meeting-templates#h_86f06cff-0852-4998-81c5-c83663c176fb). You can retrieve the value of this field by calling the [List meeting templates](https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/listmeetingtemplates) API.
  create_webinar:
    type: object
    description: Base webinar object for sessions.
    properties:
      topic:
        type: string
        description: Webinar topic.
      type:
        type: integer
        description: 'Webinar Types:<br>`5` - Webinar.<br>`6` - Recurring webinar with no fixed time.<br>`9` - Recurring webinar with a fixed time.'
        default: 5
        enum:
          - 5
          - 6
          - 9
        x-enum-descriptions:
          - Webinar
          - Recurring Webinar with no fixed time
          - Recurring Webinar with fixed time
      start_time:
        type: string
        format: date-time
        description: |-
          Webinar start time. We support two formats for `start_time` - local time and GMT.<br>

          To set time as GMT the format should be `yyyy-MM-dd`T`HH:mm:ssZ`.

          To set time using a specific timezone, use `yyyy-MM-dd`T`HH:mm:ss` format and specify the timezone [ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) in the `timezone` field OR leave it blank and the timezone set on your Zoom account will be used. You can also set the time as UTC as the timezone field.

          The `start_time` should only be used for scheduled and / or recurring webinars with fixed time.
      duration:
        type: integer
        description: Webinar duration (minutes). Used for scheduled webinars only.
      timezone:
        type: string
        description: 'Time zone to format start_time. For example, "America/Los_Angeles". For scheduled meetings only. Please reference our [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) list for supported time zones and their formats.'
      password:
        type: string
        description: |+
          Webinar passcode. Passcode may only contain the following characters: [a-z A-Z 0-9 @ - _ * !]. Max of 10 characters.

          If "Require a passcode when scheduling new meetings" setting has been **enabled** **and** [locked](https://support.zoom.us/hc/en-us/articles/115005269866-Using-Tiered-Settings#locked) for the user, the passcode field will be autogenerated for the Webinar in the response even if it is not provided in the API request. <br><br>

          **Note:** If the account owner or the admin has configured [minimum passcode requirement settings](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604), the passcode value provided here must meet those requirements. <br><br>If the requirements are enabled, you can view those requirements by calling [Get Account Settings](https://marketplace.zoom.us/docs/api-reference/zoom-api/accounts/accountsettings) API.



      agenda:
        type: string
        description: Webinar description.
      tracking_fields:
        type: array
        description: Tracking fields
        items:
          type: object
          properties:
            field:
              type: string
              description: Tracking fields type
            value:
              type: string
              description: Tracking fields value
          required:
            - field
      recurrence:
        $ref: '#/definitions/recurrence-webinar'
      settings:
        $ref: '#/definitions/CreateWebinarSettings'
  tsp-global-dial-in:
    type: object
    title: TSP Global Dial-In URL Setting
    properties:
      audio_url:
        type: string
        description: The global dial-in URL for a TSP enabled account. The URL must be valid with a max-length of 512 characters.
        maxLength: 512
  recurrence-webinar:
    type: object
    description: 'Recurrence object. Use this object only for a webinar of type `9` i.e., a recurring webinar with fixed time. '
    title: Recurrence Webinar
    properties:
      type:
        type: integer
        description: 'Recurrence webinar types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.'
        enum:
          - 1
          - 2
          - 3
        x-enum-descriptions:
          - Daily
          - Weekly
          - Monthly
      repeat_interval:
        type: integer
        description: |-
          Define the interval at which the webinar should recur. For instance, if you would like to schedule a Webinar that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`.

          For a daily webinar, the maximum interval you can set is `90` days. For a weekly webinar, the maximum interval that you can set is `12` weeks. For a monthly webinar, the maximum interval that you can set is `3` months.
      weekly_days:
        type: string
        description: |+
          Use this field **only if you're scheduling a recurring webinar of type** `2` to state which day(s) of the week the webinar should repeat. <br> The value for this field could be a number between `1` to `7` in string format. For instance, if the Webinar should recur on Sunday, provide `"1"` as the value of this field.  <br><br> **Note:** If you would like the webinar to occur on multiple days of a week, you should provide comma separated values for this field. For instance, if the Webinar should recur on Sundays and Tuesdays provide `"1,3"` as the value of this field.

          <br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.

      monthly_day:
        type: integer
        description: |-
          Use this field **only if you're scheduling a recurring webinar of type** `3` to state which day in a month, the webinar should recur. The value range is from 1 to 31.

          For instance, if you would like the webinar to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the webinar to recur once every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`.
      monthly_week:
        type: integer
        description: 'Use this field **only if you''re scheduling a recurring webinar of type** `3` to state the week of the month when the webinar should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the webinar should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.'
        enum:
          - -1
          - 1
          - 2
          - 3
          - 4
        x-enum-descriptions:
          - Last week
          - First week
          - Second week
          - Third week
          - Fourth week
      monthly_week_day:
        type: integer
        description: 'Use this field **only if you''re scheduling a recurring webinar of type** `3` to state a specific day in a week when the monthly webinar should recur. To use this field, you must also use the `monthly_week` field. <br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.'
        enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
        x-enum-descriptions:
          - Sunday
          - Monday
          - Tuesday
          - Wednesday
          - Thursday
          - Friday
          - Saturday
      end_times:
        type: integer
        default: 1
        description: Select how many times the webinar will recur before it is canceled. (Cannot be used with "end_date_time".)
        maximum: 365
      end_date_time:
        type: string
        description: 'Select a date when the webinar will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with "end_times".)'
        format: date-time
    required:
      - type
  Channel:
    type: object
    description: 'The channel object represents a Zoom chat [channel](https://support.zoom.us/hc/en-us/articles/200912909-Getting-Started-With-Channels-Group-Messaging-). '
    properties:
      id:
        type: string
        description: Channel Id.
      name:
        type: string
        description: Name of the channel.
        maxLength: 128
      type:
        type: integer
        description: |-
          Type of the channel. The value can be one of the following:<br>
          `1`: Private channel. In this type of channel, members must be invited to join a channel.<br>
          `2`: Private channel with members that belong to one Zoom account. Members in this channel should be invited and the members should be from the same organization.<br>
          `3`: Public channel. Anyone can search for this channel and join the channel.<br>
        enum:
          - 1
          - 2
          - 3
  QOSParticipant:
    type: object
    title: Participant QOS
    description: Participant QOS.
    properties:
      user_id:
        type: string
        format: uuid
        description: Participant ID.
      user_name:
        type: string
        description: Participant display name.
      device:
        type: string
        description: The type of device using which the participant joined the meeting.
      ip_address:
        type: string
        description: Participant's IP address.
      location:
        type: string
        description: Participant's location.
      join_time:
        type: string
        format: date-time
        description: The time at which participant joined the meeting.
      leave_time:
        type: string
        format: date-time
        description: The time at which participant left the meeting.
      pc_name:
        type: string
        description: Participant's PC name.
      domain:
        type: string
        description: Participant's PC domain.
      mac_addr:
        type: string
        description: Participant's MAC address.
      harddisk_id:
        type: string
        description: Participant's hard disk ID.
      version:
        type: string
        description: Participant's Zoom Client version.
      user_qos:
        type: array
        description: Quality of service provided to the user.
        items:
          type: object
          properties:
            date_time:
              type: string
              format: date-time
              description: Date-time of QOS
            audio_input:
              $ref: '#/definitions/QOSAudio'
            audio_output:
              $ref: '#/definitions/QOSAudio'
            video_input:
              $ref: '#/definitions/QOSVideo'
            video_output:
              $ref: '#/definitions/QOSVideo'
            as_input:
              $ref: '#/definitions/QOSVideo'
            as_output:
              $ref: '#/definitions/QOSVideo'
            cpu_usage:
              type: object
              properties:
                zoom_min_cpu_usage:
                  type: string
                  description: Zoom Minimum CPU Usage
                zoom_avg_cpu_usage:
                  type: string
                  description: Zoom Average CPU Usage
                zoom_max_cpu_usage:
                  type: string
                  description: Zoom Maximum CPU Usage
                system_max_cpu_usage:
                  type: string
                  description: System Maximum CPU Usage
            audio_device_from_crc:
              type: object
              description: QoS metrics on audio being sent by a participant who joined the meeting via a Cloud Room Connector.
              properties:
                bitrate:
                  type: string
                  description: The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
                latency:
                  type: string
                  description: 'The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds. '
                jitter:
                  type: string
                  description: 'The variation in the delay of received packets. The value of this field is expressed in milliseconds. '
                avg_loss:
                  type: string
                  description: 'The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination. '
                max_loss:
                  type: string
                  description: 'The max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.'
            audio_device_to_crc:
              type: object
              description: QoS metrics on audio received by a participant who joined the meeting via a Cloud Room Connector.
              properties:
                bitrate:
                  type: string
                  description: The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
                latency:
                  type: string
                  description: 'The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds. '
                jitter:
                  type: string
                  description: 'The variation in the delay of received packets. The value of this field is expressed in milliseconds. '
                avg_loss:
                  type: string
                  description: 'The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination. '
                max_loss:
                  type: string
                  description: 'The max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.'
            video_device_from_crc:
              type: object
              description: QoS metrics on video input being sent from a Cloud Room Connector used by the participant to join the meeting.
              properties:
                bitrate:
                  type: string
                  description: The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
                latency:
                  type: string
                  description: 'The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds. '
                jitter:
                  type: string
                  description: 'The variation in the delay of received packets. The value of this field is expressed in milliseconds. '
                avg_loss:
                  type: string
                  description: 'The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination. '
                max_loss:
                  type: string
                  description: 'The max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.'
            video_device_to_crc:
              type: object
              description: QoS metrics on video output received by a participant who joined the meeting via a Cloud Room Connector.
              properties:
                bitrate:
                  type: string
                  description: The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
                latency:
                  type: string
                  description: 'The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds. '
                jitter:
                  type: string
                  description: 'The variation in the delay of received packets. The value of this field is expressed in milliseconds. '
                avg_loss:
                  type: string
                  description: 'The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination. '
                max_loss:
                  type: string
                  description: 'The max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.'
            as_device_from_crc:
              type: object
              description: QoS metrics on screen shares by a participant who joined the meeting via a Cloud Room Connector.
              properties:
                bitrate:
                  type: string
                  description: The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
                latency:
                  type: string
                  description: 'The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds. '
                jitter:
                  type: string
                  description: 'The variation in the delay of received packets. The value of this field is expressed in milliseconds. '
                avg_loss:
                  type: string
                  description: 'The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination. '
                max_loss:
                  type: string
                  description: 'The max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.'
            as_device_to_crc:
              type: object
              description: QoS metrics on screen shares output being received by a participant who joined the meeting via a Cloud Room Connector.
              properties:
                bitrate:
                  type: string
                  description: The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
                latency:
                  type: string
                  description: 'The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds. '
                jitter:
                  type: string
                  description: 'The variation in the delay of received packets. The value of this field is expressed in milliseconds. '
                avg_loss:
                  type: string
                  description: 'The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination. '
                max_loss:
                  type: string
                  description: 'The max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.'
  AccountSettingsAuthenticationUpdate:
    title: AccountSettingsAuthenticationUpdate
    oneOf:
      - description: 'Set/ update [authentication profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars).<br><br> The authentication profile **must first be set at the account level via the account settings**, and later can be disabled after enabling on the preferred level - i.e. user level using user settings or at group level via group settings  (if you do not want the settings to be enabled on the entire account).'
        properties:
          meeting_authentication:
            type: boolean
            description: 'If set to "true", only authenticated users can join meetings. The method for authentication can be defined in the "authentication_option". '
          authentication_option:
            type: object
            description: Meeting Authentication Options
            properties:
              id:
                type: string
                description: |2-
                   Authentication ID. If you are creating an authentication profile, you do not need to provide this field. The id field will be generated in the response once this API request is completed successfully. You can also use the Get Account Settings API with query parameter set to `meeting_authentication` to list the authentication id.<br><br>
                   Use this field or the `name` field to identify the associated authentication option that you would like to update or delete.
              name:
                type: string
                description: Unique name for the authentication option.
              type:
                type: string
                enum:
                  - enforce_login
                  - enforce_login_with_domains
                description: |2-
                   Authentication type. Specify one of the following authentication types for the authentication profile:<br>
                   * `enforce_login`: This option allows any users to join the meeting or webinar, as long as they are signed into their Zoom account.
                   * `enforce_login_with_domains`: This option, allows you to specify a rule so that only those Zoom users whose email addresses contain a certain domain, can join the meeting or webinar. You can either add multiple domains using a comma in between and/or use a wildcard for listing domains.
              default_option:
                type: boolean
                description: Specify whether you would like to set this authentication option as the default option or not.
              action:
                type: string
                enum:
                  - update
                  - delete
                  - add
                description: |-
                  Specify the action that you would like to take via this API request:<br>
                  * `add` : Choose this value if you are adding an authentication option.
                  * `update`: Choose this value if you are updating an existing authentication option.
                  * `delete`: Choose this value if you are deleting an existing authentication option.
              domains:
                type: string
                description: 'If you chose `enforce_login_with_domains` as the authentication type, specify the domain(s) that you want to allow to join your meetings or webinars. '
      - description: 'Set/Update [authentication profile for Cloud Recordings](https://support.zoom.us/hc/en-us/articles/360037756671-Authentication-Profiles-for-Cloud-Recordings).'
        properties:
          recording_authentication:
            type: boolean
            description: |-
              If set to `true`, only authenticated users can view the cloud recordings.<br><br>
              The authentication profile **must first be set at the account level via the account settings**, and later can be disabled after enabling on the preferred level - i.e. user level using user settings or at group level via group settings  (if you do not want the settings to be enabled on the entire account).
          authentication_option:
            type: object
            description: Specify the authentication options for this account.
            properties:
              id:
                type: string
                description: |2-
                   Authentication ID. If you are creating an authentication profile, you do not need to provide this field. The id field will be generated in the response once this API request is completed successfully. You can also use the Get Account Settings API with query parameter set to `meeting_authentication` to list the authentication id.<br><br>
                  Use this field or the `name` field to identify the associated authentication option that you would like to update or delete.
              name:
                type: string
                description: Unique name for the authentication option.
              type:
                type: string
                description: |+
                  Specify one authentication type that is to be associated with this authentication configuration:<br>
                  * `internally`: This option allows you specify a rule that only signed in users within your account can view the recording.<br>
                   * `enforce_login`: This option allows any users to view the recording, as long as they are signed into their Zoom account.<br>
                   * `enforce_login_with_domains`: This option, allows you to specify a rule so that only those Zoom users whose email addresses contain a certain domain, can view the recording. You can either add multiple domains using a comma in between and/or use a wildcard for listing domains.

                enum:
                  - internally
                  - enforce_login
                  - enforce_login_with_domains
              default_option:
                type: boolean
                description: Specify whether you would like to set this authentication option as the default option or not.
              action:
                type: string
                description: |-
                  Specify the action that you would like to take via this API request:<br>
                  * `add` : Choose this value if you are adding an authentication option.
                  * `update`: Choose this value if you are updating an existing authentication option.
                  * `delete`: Choose this value if you are deleting an existing authentication option.
                enum:
                  - update
                  - delete
                  - add
              domains:
                type: string
                description: 'If you chose `enforce_login_with_domains` as the authentication type, specify the domain(s) that you want to allow to view the recordings. '
    type: object
  AccountSettingsRecordingAuthenticationUpdate:
    type: object
    title: AccountSettingsRecordingAuthenticationUpdate
    description: |-
      Only authenticated users can view cloud recordings
      The viewers need to authenticate prior to viewing the cloud recordings, hosts can choose one of the authentication methods when sharing a cloud recording.
    properties:
      recording_authentication:
        type: boolean
      authentication_option:
        type: object
        properties:
          id:
            type: string
          name:
            type: string
          type:
            type: string
            enum:
              - internally
              - enforce_login
              - enforce_login_with_domains
          default_option:
            type: boolean
          action:
            type: string
            enum:
              - update
              - add
              - delete
          domains:
            type: string
  AccountSettingsAuthentication:
    title: AccountSettingsAuthentication
    oneOf:
      - properties:
          meeting_authentication:
            type: boolean
            description: Only authenticated users can join meetings
          authentication_options:
            type: array
            description: Meeting Authentication Options
            items:
              type: object
              properties:
                id:
                  type: string
                  description: Authentication id
                name:
                  type: string
                  description: Authentication name
                type:
                  type: string
                  description: Authentication type
                  enum:
                    - enforce_login
                    - enforce_login_with_domains
                default_option:
                  type: boolean
                  description: Authentication default option
                visible:
                  type: boolean
                  description: Authentication visible
                domains:
                  type: string
                  description: Authentication domians
      - properties:
          recording_authentication:
            type: boolean
            description: Only authenticated users can view cloud recordings
          authentication_options:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                  description: Authentication id
                name:
                  type: string
                  description: Authentication name
                type:
                  type: string
                  description: Authentication type
                  enum:
                    - internally
                    - enforce_login
                    - enforce_login_with_domains
                default_option:
                  type: boolean
                  description: Authentication default option
                visible:
                  type: boolean
                  description: Authentication visible
                domains:
                  type: string
                  description: Authentication domians
    type: object
  GroupUserSettingsAuthenticationUpdate:
    oneOf:
      - properties:
          meeting_authentication:
            type: boolean
            description: Only authenticated users can join meetings
          authentication_option:
            type: object
            description: Meeting Authentication Options
            properties:
              id:
                type: string
                description: Authentication id
              name:
                type: string
                description: Authentication name
              type:
                type: string
                description: Authentication type
                enum:
                  - enforce_login
                  - enforce_login_with_domains
              default_option:
                type: boolean
                description: Authentication default option
              action:
                type: string
                description: Authentication action
                enum:
                  - update
                  - show
                  - hide
              domains:
                type: string
                description: Authentication domains
      - properties:
          recording_authentication:
            type: boolean
            description: Only authenticated users can view cloud recordings
          authentication_option:
            type: object
            description: Authentication Options
            properties:
              id:
                type: string
                description: Authentication id
              name:
                type: string
                description: Authentication name
              type:
                type: string
                description: Authentication type
                enum:
                  - internally
                  - enforce_login
                  - enforce_login_with_domains
              default_option:
                type: boolean
                description: Authentication default option
              action:
                type: string
                description: Authentication action
                enum:
                  - update
                  - show
                  - hide
              domians:
                type: string
                description: Authentication domians
    title: GroupSettingsAuthenticationUpdate
    type: object
  GroupUserSettingsAuthentication:
    oneOf:
      - properties:
          meeting_authentication:
            type: boolean
            description: Only authenticated users can join meetings
          authentication_options:
            type: array
            description: Meeting Authentication Options
            items:
              type: object
              properties:
                id:
                  type: string
                  description: Authentication id
                name:
                  type: string
                  description: Authentication name
                type:
                  type: string
                  description: Authentication type
                  enum:
                    - enforce_login
                    - enforce_login_with_domains
                default_option:
                  type: boolean
                  description: Authentication default option
                visible:
                  type: boolean
                  description: Authentication visible
                domains:
                  type: string
                  description: Authentication domains
      - properties:
          recording_authentication:
            type: boolean
            description: Only authenticated users can view cloud recordings
          authentication_options:
            type: array
            description: Authentication Options
            items:
              type: object
              properties:
                id:
                  type: string
                  description: Authentication id
                name:
                  type: string
                  description: Authentication name
                type:
                  type: string
                  description: Authentication type
                  enum:
                    - internally
                    - enforce_login
                    - enforce_login_with_domains
                default_option:
                  type: boolean
                  description: Authentication default option
                visible:
                  type: boolean
                  description: Authentication visible
                domains:
                  type: string
                  description: Authentication domians
    type: object
  PhonePlan:
    type: object
    title: PhonePlan
    description: Phone Plan Object
    properties:
      plan_base:
        type: object
        description: Additional phone base plans.
        properties:
          type:
            type: string
            description: 'Additional phone base <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans">plan type.</a>'
          callout_countries:
            type: string
            description: 'Call-out countries: multiple values should separated by  commas. For a list of allowed values, refer to the "ID" field in [this](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#tsp-call-out-countries) table.'
      plan_calling:
        type: array
        description: Additional phone calling plans.
        items:
          type: object
          properties:
            type:
              type: string
              description: 'Additional phone calling <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans">plan type.</a>'
            hosts:
              type: integer
      plan_number:
        type: array
        description: Additional phone number plans.
        items:
          type: object
          properties:
            type:
              type: string
              description: 'Additional phone number <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans">plan type.</a>'
            hosts:
              type: integer
  authenticationusersettings:
    title: UserSettingsAuthenticationUpdate
    oneOf:
      - description: 'Set/ update [authentication profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars).<br><br> The authentication profile **must first be set at the account level via the account settings**, and later can be disabled after enabling on the preferred level - i.e. user level using user settings or at group level via group settings  (if you do not want the settings to be enabled on the entire account).'
        properties:
          meeting_authentication:
            type: boolean
            description: 'If set to "true", only authenticated users can join meetings. The method for authentication can be defined in the "authentication_option". '
          authentication_option:
            type: object
            description: Meeting Authentication Options
            properties:
              id:
                type: string
                description: |2-
                   Authentication ID. You can get the ID from Get User Settings API with query parameter `option` set to `meeting_authentication`.<br><br>
                   Use this field or the `name` field to identify the associated authentication option that you would like to update.
              name:
                type: string
                description: Unique name for the authentication option.
              type:
                type: string
                enum:
                  - enforce_login
                  - enforce_login_with_domains
                description: |2-
                   Authentication type. Specify one of the following authentication types for the authentication profile:<br>
                   * `enforce_login`: This option allows any users to join the meeting or webinar, as long as they are signed into their Zoom account.
                   * `enforce_login_with_domains`: This option, allows you to specify a rule so that only those Zoom users whose email addresses contain a certain domain, can join the meeting or webinar. You can either add multiple domains using a comma in between and/or use a wildcard for listing domains.
              default_option:
                type: boolean
                description: Specify whether you would like to set this authentication option as the default option or not.
              action:
                type: string
                enum:
                  - update
                  - delete
                  - add
                description: |-
                  Specify the action that you would like to take via this API request:<br>
                  * `add` : Choose this value if you are adding an authentication option.
                  * `update`: Choose this value if you are updating an existing authentication option.
                  * `delete`: Choose this value if you are deleting an existing authentication option.
              domains:
                type: string
                description: 'If you chose `enforce_login_with_domains` as the authentication type, specify the domain(s) that you want to allow to join your meetings or webinars. '
      - description: 'Set/Update [authentication profile for Cloud Recordings](https://support.zoom.us/hc/en-us/articles/360037756671-Authentication-Profiles-for-Cloud-Recordings).'
        properties:
          recording_authentication:
            type: boolean
            description: |-
              If set to `true`, only authenticated users can view the cloud recordings.<br><br>
              The authentication profile **must first be set at the account level via the account settings**, and later can be disabled after enabling on the preferred level - i.e. user level using user settings or at group level via group settings  (if you do not want the settings to be enabled on the entire account).
          authentication_option:
            type: object
            description: Specify the authentication options for this account.
            properties:
              id:
                type: string
                description: |2-
                   Authentication ID. You can get the ID from Get User Settings API with query parameter `option` set to `recording_authentication`.<br><br>

                  Use this field or the `name` field to identify the associated authentication option that you would like to update or delete.
              name:
                type: string
                description: Unique name for the authentication option.
              type:
                type: string
                description: |+
                  Specify one authentication type that is to be associated with this authentication configuration:<br>
                  * `internally`: This option allows you specify a rule that only signed in users within your account can view the recording.<br>
                   * `enforce_login`: This option allows any users to view the recording, as long as they are signed into their Zoom account.<br>
                   * `enforce_login_with_domains`: This option, allows you to specify a rule so that only those Zoom users whose email addresses contain a certain domain, can view the recording. You can either add multiple domains using a comma in between and/or use a wildcard for listing domains.

                enum:
                  - internally
                  - enforce_login
                  - enforce_login_with_domains
              default_option:
                type: boolean
                description: Specify whether you would like to set this authentication option as the default option or not.
              action:
                type: string
                description: |-
                  Specify the action that you would like to take via this API request:<br>

                  * `update`: Choose this value if you are updating an existing authentication option.
                  * `show` : Choose this value if you would like this option to be one of the authentication options that the host can use for sharing the recording settings.
                  * `hide`:  Choose this value if you would like this option to not be made available to the host for recording sharing settings.
                enum:
                  - update
                  - delete
                  - add
              domains:
                type: string
                description: 'If you chose `enforce_login_with_domains` as the authentication type, specify the domain(s) that you want to allow to view the recordings. '
    type: object
  QoSPhone:
    type: object
    title: QoS Phone
    description: Quality of Service object.
    properties:
      bitrate:
        type: string
        description: The number of bits per second that can be transmitted along a digital network.
      avg_loss:
        type: string
        description: 'The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.'
      max_loss:
        type: string
        description: 'The max amount of packet loss, i.e., the max percentage of packets that fail to arrive at their destination.'
      network_delay:
        type: string
        description: The amount of time it takes for a VoIP packet to travel from one point to another.
      jitter:
        type: string
        description: The variation in the delay of received packets.
      mos:
        type: string
        description: 'Mean Opinion Score(MOS) measures voice quality on a scale of 1 to 5. A MOS greater than or equal to 3.5 means good quality, while below 3.5 means poor quality.'
  MeetingSecuritySettings:
    type: object
    title: Meeting/Webinar Security Settings
    properties:
      meeting_security:
        type: object
        properties:
          embed_password_in_join_link:
            type: boolean
            description: |
              If set to `true`, meeting passcode will be encrypted and included in the invite link to allow participants to join with just one click without having to enter the passcode.
          end_to_end_encrypted_meetings:
            type: boolean
            description: 'Allow use of end-to-end encryption for meetings. If set to `true`, you can specify the encryption type in `encryption_type` field.'
          encryption_type:
            type: string
            description: |-
              Choose between enhanced encryption and [end-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871) when starting or a meeting. When using end-to-end encryption, several features (e.g. cloud recording, phone/SIP/H.323 dial-in) will be **automatically disabled**. <br><br>The value of this field can be one of the following:<br>
              `enhanced_encryption`: Enhanced encryption. Encryption is stored in the cloud if you enable this option. <br>

              `e2ee`: [End-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871). The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also **disables** the following features: join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions.
            enum:
              - enhanced_encryption
              - e2ee
          meeting_password:
            type: boolean
            description: 'If set to `true`, all instant, and scheduled meetings that users can join via client, or room systems will be passcode-protected. The Personal Meeting ID (PMI) meetings are not included in this setting.'
          meeting_password_requirement:
            type: object
            description: 'Meeting/webinar [passcode requirements](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604).'
            properties:
              length:
                type: integer
                description: The minimum length that the meeting/webinar passcode needs to have.
              have_letter:
                type: boolean
                description: |
                  If set to `true`, the passcode must contain at least 1 letter (such as a,b,c...).
              have_number:
                type: boolean
                description: 'If set to `true`, the passcode must contain at least 1 number (such as 1,2,3...).'
              have_special_character:
                type: boolean
                description: 'If set to `true`, the passcode must have at least 1 special character (!,@,#...).'
              only_allow_numeric:
                type: boolean
                description: 'If set to `true`, the passcode must only contain numbers and no other characters.'
              have_upper_and_lower_characters:
                type: boolean
                description: 'If set to `true`, the passcode must include both uppercase and lowercase characters.'
              consecutive_characters_length:
                type: integer
                enum:
                  - 0
                  - 4
                  - 5
                  - 6
                  - 7
                  - 8
              weak_enhance_detection:
                type: boolean
                description: 'If set to `true`, users will be informed if the provided passcode is weak.'
          phone_password:
            type: boolean
            description: 'Require passcode for participants joining by phone. If set to `true`, a numeric passcode will be required for participants joining by phone if your meeting has a passcode. For meeting with an alphanumeric passcode, a numeric version will be generated.'
          pmi_password:
            type: boolean
            description: |
              If set to `true`, all Personal Meeting ID (PMI) meetings that users can join via client, or room systems will be passcode-protected.
          require_password_for_scheduled_meeting:
            type: boolean
            description: |
              Require a passcode for meetings which have already been scheduled.
          webinar_password:
            type: boolean
            description: |
              If set to `true`, a passcode will be generated when scheduling a Webinar and participants require the passcode to join the Webinar.
          require_password_for_scheduled_webinar:
            type: boolean
            description: |
              Require a passcode for webinars which have already been scheduled.
          waiting_room:
            type: boolean
            description: |
              When participants join a meeting, place them in a waiting room and require the host to admit them individually. Enabling the waiting room automatically disables the setting for allowing participants to join before host.
          waiting_room_settings:
            type: object
            description: Specify the settings to be applied if waiting room is enabled.
            properties:
              participants_to_place_in_waiting_room:
                type: integer
                description: |-


                  Specify who should be admitted to the waiting room. The value of this field can be one of the following:<br>
                  `0`: All attendees<br> `1`: Users who are not in your account<br> `2`: Users who are not in your account and are not part of your whitelisted domains that are specified in
                enum:
                  - 0
                  - 1
                  - 2
              whitelisted_domains_for_waiting_room:
                type: string
                description: 'If the value of the `participants_to_place_in_waiting_room` field is `2`, use this setting to specify the domains that can bypass the waiting room feature. Separate multiple domains with commas(example: "aaa.com,bbb.com").'
              users_who_can_admit_participants_from_waiting_room:
                type: integer
                description: |+
                  Specify who can admit participants from the waiting room. The value of this field can be one of the following:<br>
                  `0`: Host and co-hosts only<br> `1`: Host, co-hosts, and anyone who bypassed the waiting room (only if host and co-hosts are not present).


          auto_security:
            type: boolean
            description: |-
              `true`: Require that all meetings are secured with at least one security option.

              This setting can only be disabled by Enterprise, ISV, Business (with more than 100 licenses), and Education accounts. [Learn more](https://marketplace.zoom.us/docs/guides/stay-up-to-date/announcements#meeting-security).
  listmeetingmetrics:
    type: object
    title: Metrics
    description: Meeting metric details.
    properties:
      uuid:
        type: string
        format: uuid
        description: Meeting UUID. Please double encode your UUID when using it for API calls if the UUID begins with a '/'or contains '//' in it.
      id:
        type: integer
        description: '[Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in "**long**" format(represented as int64 data type in JSON), also known as the meeting number.'
        format: int64
      topic:
        type: string
        description: Meeting topic.
      host:
        type: string
        description: Host display name.
      email:
        type: string
        description: Email address of the host.
      user_type:
        type: string
        description: License type of the user.
      start_time:
        type: string
        format: date-time
        description: Meeting start time.
      end_time:
        type: string
        format: date-time
        description: Meeting end time.
      duration:
        type: string
        description: Meeting duration.
      participants:
        type: integer
        description: Meeting participant count.
      has_pstn:
        type: boolean
        description: Indicates whether or not the PSTN was used in the meeting.
      has_voip:
        type: boolean
        description: Indicates whether or not VoIP was used in the meeting.
      has_3rd_party_audio:
        type: boolean
        description: 'Indicates whether or not [third party audio](https://support.zoom.us/hc/en-us/articles/202470795-3rd-Party-Audio-Conference) was used in the meeting.'
      has_video:
        type: boolean
        description: Indicates whether or not video was used in the meeting.
      has_screen_share:
        type: boolean
        description: Indicates whether or not screenshare feature was used in the meeting.
      has_recording:
        type: boolean
        description: 'Indicates whether or not the recording feature was used in the meeting. '
      has_sip:
        type: boolean
        description: Indicates whether or not someone joined the meeting using SIP.
      in_room_participants:
        type: integer
        description: The number of Zoom Room participants in the meeting.
      dept:
        type: string
        description: Department of the host.
      custom_keys:
        type: array
        maxItems: 10
        description: Custom keys and values assigned to the meeting.
        items:
          type: object
          properties:
            key:
              type: string
              description: Custom key associated with the meeting.
              maxLength: 64
            value:
              type: string
              description: Value of the custom key associated with the meeting.
              maxLength: 256
      tracking_fields:
        type: array
        description: Tracking fields and values assigned to the meeting.
        items:
          type: object
          properties:
            field:
              type: string
              description: Label of the tracking field.
              maxLength: 64
            value:
              type: string
              description: Value of the tracking field.
              maxLength: 256
  Profile:
    type: object
    title: Profile
    properties:
      recording_storage_location:
        type: object
        properties:
          allowed_values:
            type: array
            description: |-
              Users can choose the country to store their recorded content. Content can include meeting, webinar, and phone recordings, as well as voicemail, transcripts, and custom greeting prompts. See [Managing the Communications Content storage location](https://support.zoom.us/hc/en-us/articles/360050781131) for details.

              Provide abbreviated country codes as the value for this field. See the [Countries abbreviation list](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) for details.
            items:
              type: string
          value:
            type: string
            description: Abbreviated country code.
tags:
  - name: Accounts
    description: Account operations
  - name: Billing
    description: Billing operations
  - name: Chat Channels
  - name: Chat Channels (Account-level)
  - name: Chat Messages
    description: Chat Messages operations
  - name: Chatbot Messages
  - name: Contacts
    description: Contacts operations
  - name: Cloud Recording
    description: Cloud Recording operations
  - name: Dashboards
    description: Dashboard operations
  - name: Data Compliance
  - name: Devices
    description: H323 Device operations
  - name: Groups
    description: Group operations
  - name: IM Chat
    description: IM Chat operations
  - name: IM Groups
    description: IM Group operations
  - name: Meetings
    description: Meeting operations
  - name: PAC
    description: PAC operations
  - name: Phone
  - name: Phone Auto Receptionists
  - name: Phone Blocked List
  - name: Phone Call Queues
  - name: Phone Devices
  - name: Phone Reports
  - name: Phone Shared Line Groups
  - name: Phone Site
  - name: Common Area Phones
  - name: Reports
    description: Report operations
  - name: Roles
    description: User Roles
  - name: Rooms
    description: ZoomRooms operations
  - name: Rooms Account
  - name: Rooms Location
  - name: SIP Phone
  - name: TrackingField
    description: Tracking Field operations
  - name: TSP
    description: TSP operations
  - name: Users
    description: User operations
  - name: Webhooks
    description: Webhook operations
  - name: Webinars
    description: Webinar operations
  - name: master account APIs
    description: APIs available to the master account for a Zoom account.
  - name: Rooms Devices
  - name: SIP Connected Audio
  - name: Deprecated API Endpoints
securityDefinitions:
  OAuth:
    type: oauth2
    flow: accessCode
    authorizationUrl: 'https://zoom.us/oauth/authorize'
    tokenUrl: 'https://zoom.us/oauth/token'
  Bearer:
    type: apiKey
    name: Authorization
    in: header
  Client Credentials:
    type: oauth2
    flow: application
    tokenUrl: 'https://api.zoom.us/oauth/token'
    description: Client Credentials Flow for ChatBots
security:
  - OAuth: []
