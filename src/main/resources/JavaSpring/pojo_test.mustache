import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonIgnore;
import io.starter.ignite.model.DataModelObject;
/**
 ############################## DO NOT EDIT: GENERATED FILE ##############################

    Generated by Starter StackGen: http://stackgen.io
    Powered by Swagger Codegen: http://swagger.io
    
	Generator version: ({{{generatorVersion}}})
	
	Template File: java_spring_mybatis_react_redux/src/main/java/spring-boot/pojo_test.mustache
	
############################## DO NOT EDIT: GENERATED FILE ##############################
 
 Description: {{#description}}{{.}}{{/description}}{{^description}}{{classname}}{{/description}}
 */
 
{{#description}}
@ApiModel(description = "{{{description}}}"){{/description}}

@JsonInclude(JsonInclude.Include.NON_EMPTY)

{{>generatedAnnotation}}{{#discriminator}}{{>typeInfoAnnotation}}{{/discriminator}}{{>xmlAnnotation}}
public class {{classname}}Test {

  private static final long serialVersionUID = 1L;

	@Before
	public void setup() throws NoSuchAlgorithmException {
		// transient encryption key
		String stx = EncryptionUtil.generateKey();

		System.setProperty("starterIgniteSecureKey", stx);
	}


	@Test
	public void testEncryptedValue() throws NoSuchFieldException, SecurityException, IllegalArgumentException, IllegalAccessException {
		String nm = "James";
		{{classname}} u = new {{classname}}();
		
		u.setLastName(nm);
		Field f = u.getClass().getField("lastName");
		String lnameCheck = f.get(u).toString();
		System.out.println("USER LASTNAME: " + u.getLastName() + ":"
				+ lnameCheck);

		String nmx = u.getLastName();
		assertNotEquals(nmx, lnameCheck);
		assertEquals(nm, u.getLastName());
	}

}