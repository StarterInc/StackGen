info:
  scm-url: "@scm.url@"
  build-url: "http://travis-ci.org/@env.TRAVIS_REPO_SLUG@/builds/@env.TRxAVIS_BUILD_ID@"

logging:
  file: "logs/boot-stackgen-core.log"
  level: 
    root: warn
  pattern:
    console: '%d{yyyy-MM-dd HH:mm:ss} - %msg%n'
    file: '%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n'    

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: ALWAYS

spring:
  application:
    name: Starter StackGen Core
  boot:
    admin:
      client:
        url: http://localhost:8009
  profiles:
    active:
      - secure

---
spring:
  profiles: dev
  boot:
    admin:
      ui:
        cache:
          no-cache: true
        template-location: file://@project.basedir@/../../spring-boot-admin-server-ui/target/dist/
        resource-locations: file://@project.basedir@/../../spring-boot-admin-server-ui/target/dist/
        cache-templates: false

---
spring:
  profiles: jpa-test
  datasource:
    driver-class-name: ${dbDriver}
    url: ${dbUrl}
    username: ${dbUser}
    password: ${dbPassword}
    hikari:
      leak-detection-threshold: 60000
      max-lifetime: 120000
  jpa:
    hibernate:
      naming.physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    #      ddl-auto: none
    properties.hibernate.dialect: org.hibernate.dialect.MySQL5InnoDBDialect
  liquibase:
    change-log: classpath:dbchangelogs/db.changelog-master.xml
    enabled: ${liquibaseEnabled}

---
spring:
  profiles: secure
  datasource:
    driver-class-name: ${dbDriver}
    url: ${dbUrl}
    username: ${dbUser}
    password: ${dbPassword}
    hikari:
      leak-detection-threshold: 60000
      max-lifetime: 120000
  security:
    user:
      name: "user"
      password: "password"
  boot:
    admin:
      client:
        username: "user"       #These two are needed so that the client
        password: "password"   #can register at the protected server api
        instance:
          metadata:
            user.name: "user"         #These two are needed so that the server
            user.password: "password" #can access the protected client endpoints
